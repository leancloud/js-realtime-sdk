{"version":3,"file":"im-node.js","sources":["../proto/message-compiled.js","../proto/message.js","../src/adapter.js","../src/utils/global.js","../src/utils/expirable.js","../src/utils/cache.js","../src/utils/index.js","../src/websocket-plus.js","../src/error.js","../src/connection.js","../src/utils/request.js","../src/plugin.js","../src/realtime.js","../src/core.js","../src/events/im.js","../src/messages/message.js","../src/messages/helpers.js","../src/messages/typed-message.js","../src/messages/recalled-message.js","../src/conversations/conversation-base.js","../src/signature-factory-runner.js","../src/conversations/persistent-conversation.js","../src/conversation-member-info.js","../src/conversations/conversation.js","../src/conversations/chat-room.js","../src/conversations/service-conversation.js","../src/conversations/temporary-conversation.js","../src/conversation-query.js","../src/session-manager.js","../src/im-client.js","../src/events/core.js","../src/messages/binary-message.js","../src/messages/text-message.js","../src/message-parser.js","../src/plugin-im.js","../src/im.js","../src/im-adapted.js"],"sourcesContent":["module.exports = require('protobufjs/dist/protobuf-light')\n  .newBuilder({})\n  ['import']({\n    package: 'push_server.messages2',\n    syntax: 'proto2',\n    options: {\n      objc_class_prefix: 'AVIM',\n    },\n    messages: [\n      {\n        name: 'JsonObjectMessage',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'data',\n            id: 1,\n          },\n        ],\n      },\n      {\n        name: 'UnreadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'required',\n            type: 'int32',\n            name: 'unread',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentioned',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 10,\n          },\n        ],\n      },\n      {\n        name: 'LogItem',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'msgId',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'ackAt',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'readAt',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'bin',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 11,\n          },\n        ],\n      },\n      {\n        name: 'ConvMemberInfo',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'role',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'infoId',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'DataCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'ids',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'JsonObjectMessage',\n            name: 'msg',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'offline',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'SessionCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'ua',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'r',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'tag',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'deviceId',\n            id: 7,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'sessionPeerIds',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'onlineSessionPeerIds',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'st',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'stTtl',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'code',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'reason',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'deviceToken',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'sp',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'detail',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastUnreadNotifTime',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastPatchTime',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'configBitmap',\n            id: 19,\n          },\n        ],\n      },\n      {\n        name: 'ErrorCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'int32',\n            name: 'code',\n            id: 1,\n          },\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'reason',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'appCode',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'detail',\n            id: 4,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'pids',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appMsg',\n            id: 6,\n          },\n        ],\n      },\n      {\n        name: 'DirectCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'msg',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'fromPeerId',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'offline',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'hasMore',\n            id: 6,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toPeerIds',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'r',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'id',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'dt',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'roomId',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pushData',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'will',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 19,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 20,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 21,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 22,\n          },\n        ],\n      },\n      {\n        name: 'AckCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'code',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'reason',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uid',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'fromts',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'tots',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'type',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'ids',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'appCode',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appMsg',\n            id: 12,\n          },\n        ],\n      },\n      {\n        name: 'UnreadCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'UnreadTuple',\n            name: 'convs',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'notifTime',\n            id: 2,\n          },\n        ],\n      },\n      {\n        name: 'ConvCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'm',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'unique',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cdate',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'initBy',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'sort',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'skip',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'flag',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'count',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'udate',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'statusSub',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'statusPub',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'statusTTL',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uniqueId',\n            id: 19,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'targetClientId',\n            id: 20,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxReadTimestamp',\n            id: 21,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxAckTimestamp',\n            id: 22,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'queryAllMembers',\n            id: 23,\n          },\n          {\n            rule: 'repeated',\n            type: 'MaxReadTuple',\n            name: 'maxReadTuples',\n            id: 24,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 25,\n          },\n          {\n            rule: 'optional',\n            type: 'ConvMemberInfo',\n            name: 'info',\n            id: 26,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'tempConv',\n            id: 27,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'tempConvTTL',\n            id: 28,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'tempConvIds',\n            id: 29,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'allowedPids',\n            id: 30,\n          },\n          {\n            rule: 'repeated',\n            type: 'ErrorCommand',\n            name: 'failedPids',\n            id: 31,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'next',\n            id: 40,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'results',\n            id: 100,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'where',\n            id: 101,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'attr',\n            id: 103,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'attrModified',\n            id: 104,\n          },\n        ],\n      },\n      {\n        name: 'RoomCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'roomId',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 5,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'roomPeerIds',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'byPeerId',\n            id: 7,\n          },\n        ],\n      },\n      {\n        name: 'LogsCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'l',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'tt',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'tmid',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'checksum',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'stored',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'QueryDirection',\n            name: 'direction',\n            id: 10,\n            options: {\n              default: 'OLD',\n            },\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'tIncluded',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'ttIncluded',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'lctype',\n            id: 13,\n          },\n          {\n            rule: 'repeated',\n            type: 'LogItem',\n            name: 'logs',\n            id: 105,\n          },\n        ],\n        enums: [\n          {\n            name: 'QueryDirection',\n            syntax: 'proto2',\n            values: [\n              {\n                name: 'OLD',\n                id: 1,\n              },\n              {\n                name: 'NEW',\n                id: 2,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        name: 'RcpCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'id',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'read',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 5,\n          },\n        ],\n      },\n      {\n        name: 'ReadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'MaxReadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxAckTimestamp',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxReadTimestamp',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'ReadCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 2,\n          },\n          {\n            rule: 'repeated',\n            type: 'ReadTuple',\n            name: 'convs',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'PresenceCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'StatusType',\n            name: 'status',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'sessionPeerIds',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'ReportCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'initiative',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'type',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'PatchItem',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'recall',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchCode',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'patchReason',\n            id: 12,\n          },\n        ],\n      },\n      {\n        name: 'PatchCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'PatchItem',\n            name: 'patches',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastPatchTime',\n            id: 2,\n          },\n        ],\n      },\n      {\n        name: 'PubsubCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'topic',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'subtopic',\n            id: 4,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'topics',\n            id: 5,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'subtopics',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'results',\n            id: 7,\n          },\n        ],\n      },\n      {\n        name: 'BlacklistCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'srcCid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toPids',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'srcPid',\n            id: 3,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toCids',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'next',\n            id: 6,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'blockedPids',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'blockedCids',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'allowedPids',\n            id: 10,\n          },\n          {\n            rule: 'repeated',\n            type: 'ErrorCommand',\n            name: 'failedPids',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 14,\n          },\n        ],\n      },\n      {\n        name: 'GenericCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'CommandType',\n            name: 'cmd',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'OpType',\n            name: 'op',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appId',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'peerId',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'i',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'installationId',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'priority',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'service',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'serverTs',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'clientTs',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'notificationType',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'DataCommand',\n            name: 'dataMessage',\n            id: 101,\n          },\n          {\n            rule: 'optional',\n            type: 'SessionCommand',\n            name: 'sessionMessage',\n            id: 102,\n          },\n          {\n            rule: 'optional',\n            type: 'ErrorCommand',\n            name: 'errorMessage',\n            id: 103,\n          },\n          {\n            rule: 'optional',\n            type: 'DirectCommand',\n            name: 'directMessage',\n            id: 104,\n          },\n          {\n            rule: 'optional',\n            type: 'AckCommand',\n            name: 'ackMessage',\n            id: 105,\n          },\n          {\n            rule: 'optional',\n            type: 'UnreadCommand',\n            name: 'unreadMessage',\n            id: 106,\n          },\n          {\n            rule: 'optional',\n            type: 'ReadCommand',\n            name: 'readMessage',\n            id: 107,\n          },\n          {\n            rule: 'optional',\n            type: 'RcpCommand',\n            name: 'rcpMessage',\n            id: 108,\n          },\n          {\n            rule: 'optional',\n            type: 'LogsCommand',\n            name: 'logsMessage',\n            id: 109,\n          },\n          {\n            rule: 'optional',\n            type: 'ConvCommand',\n            name: 'convMessage',\n            id: 110,\n          },\n          {\n            rule: 'optional',\n            type: 'RoomCommand',\n            name: 'roomMessage',\n            id: 111,\n          },\n          {\n            rule: 'optional',\n            type: 'PresenceCommand',\n            name: 'presenceMessage',\n            id: 112,\n          },\n          {\n            rule: 'optional',\n            type: 'ReportCommand',\n            name: 'reportMessage',\n            id: 113,\n          },\n          {\n            rule: 'optional',\n            type: 'PatchCommand',\n            name: 'patchMessage',\n            id: 114,\n          },\n          {\n            rule: 'optional',\n            type: 'PubsubCommand',\n            name: 'pubsubMessage',\n            id: 115,\n          },\n          {\n            rule: 'optional',\n            type: 'BlacklistCommand',\n            name: 'blacklistMessage',\n            id: 116,\n          },\n        ],\n      },\n    ],\n    enums: [\n      {\n        name: 'CommandType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'session',\n            id: 0,\n          },\n          {\n            name: 'conv',\n            id: 1,\n          },\n          {\n            name: 'direct',\n            id: 2,\n          },\n          {\n            name: 'ack',\n            id: 3,\n          },\n          {\n            name: 'rcp',\n            id: 4,\n          },\n          {\n            name: 'unread',\n            id: 5,\n          },\n          {\n            name: 'logs',\n            id: 6,\n          },\n          {\n            name: 'error',\n            id: 7,\n          },\n          {\n            name: 'login',\n            id: 8,\n          },\n          {\n            name: 'data',\n            id: 9,\n          },\n          {\n            name: 'room',\n            id: 10,\n          },\n          {\n            name: 'read',\n            id: 11,\n          },\n          {\n            name: 'presence',\n            id: 12,\n          },\n          {\n            name: 'report',\n            id: 13,\n          },\n          {\n            name: 'echo',\n            id: 14,\n          },\n          {\n            name: 'loggedin',\n            id: 15,\n          },\n          {\n            name: 'logout',\n            id: 16,\n          },\n          {\n            name: 'loggedout',\n            id: 17,\n          },\n          {\n            name: 'patch',\n            id: 18,\n          },\n          {\n            name: 'pubsub',\n            id: 19,\n          },\n          {\n            name: 'blacklist',\n            id: 20,\n          },\n          {\n            name: 'goaway',\n            id: 21,\n          },\n        ],\n      },\n      {\n        name: 'OpType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'open',\n            id: 1,\n          },\n          {\n            name: 'add',\n            id: 2,\n          },\n          {\n            name: 'remove',\n            id: 3,\n          },\n          {\n            name: 'close',\n            id: 4,\n          },\n          {\n            name: 'opened',\n            id: 5,\n          },\n          {\n            name: 'closed',\n            id: 6,\n          },\n          {\n            name: 'query',\n            id: 7,\n          },\n          {\n            name: 'query_result',\n            id: 8,\n          },\n          {\n            name: 'conflict',\n            id: 9,\n          },\n          {\n            name: 'added',\n            id: 10,\n          },\n          {\n            name: 'removed',\n            id: 11,\n          },\n          {\n            name: 'refresh',\n            id: 12,\n          },\n          {\n            name: 'refreshed',\n            id: 13,\n          },\n          {\n            name: 'start',\n            id: 30,\n          },\n          {\n            name: 'started',\n            id: 31,\n          },\n          {\n            name: 'joined',\n            id: 32,\n          },\n          {\n            name: 'members_joined',\n            id: 33,\n          },\n          {\n            name: 'left',\n            id: 39,\n          },\n          {\n            name: 'members_left',\n            id: 40,\n          },\n          {\n            name: 'results',\n            id: 42,\n          },\n          {\n            name: 'count',\n            id: 43,\n          },\n          {\n            name: 'result',\n            id: 44,\n          },\n          {\n            name: 'update',\n            id: 45,\n          },\n          {\n            name: 'updated',\n            id: 46,\n          },\n          {\n            name: 'mute',\n            id: 47,\n          },\n          {\n            name: 'unmute',\n            id: 48,\n          },\n          {\n            name: 'status',\n            id: 49,\n          },\n          {\n            name: 'members',\n            id: 50,\n          },\n          {\n            name: 'max_read',\n            id: 51,\n          },\n          {\n            name: 'is_member',\n            id: 52,\n          },\n          {\n            name: 'member_info_update',\n            id: 53,\n          },\n          {\n            name: 'member_info_updated',\n            id: 54,\n          },\n          {\n            name: 'member_info_changed',\n            id: 55,\n          },\n          {\n            name: 'join',\n            id: 80,\n          },\n          {\n            name: 'invite',\n            id: 81,\n          },\n          {\n            name: 'leave',\n            id: 82,\n          },\n          {\n            name: 'kick',\n            id: 83,\n          },\n          {\n            name: 'reject',\n            id: 84,\n          },\n          {\n            name: 'invited',\n            id: 85,\n          },\n          {\n            name: 'kicked',\n            id: 86,\n          },\n          {\n            name: 'upload',\n            id: 100,\n          },\n          {\n            name: 'uploaded',\n            id: 101,\n          },\n          {\n            name: 'subscribe',\n            id: 120,\n          },\n          {\n            name: 'subscribed',\n            id: 121,\n          },\n          {\n            name: 'unsubscribe',\n            id: 122,\n          },\n          {\n            name: 'unsubscribed',\n            id: 123,\n          },\n          {\n            name: 'is_subscribed',\n            id: 124,\n          },\n          {\n            name: 'modify',\n            id: 150,\n          },\n          {\n            name: 'modified',\n            id: 151,\n          },\n          {\n            name: 'block',\n            id: 170,\n          },\n          {\n            name: 'unblock',\n            id: 171,\n          },\n          {\n            name: 'blocked',\n            id: 172,\n          },\n          {\n            name: 'unblocked',\n            id: 173,\n          },\n          {\n            name: 'members_blocked',\n            id: 174,\n          },\n          {\n            name: 'members_unblocked',\n            id: 175,\n          },\n          {\n            name: 'check_block',\n            id: 176,\n          },\n          {\n            name: 'check_result',\n            id: 177,\n          },\n          {\n            name: 'add_shutup',\n            id: 180,\n          },\n          {\n            name: 'remove_shutup',\n            id: 181,\n          },\n          {\n            name: 'query_shutup',\n            id: 182,\n          },\n          {\n            name: 'shutup_added',\n            id: 183,\n          },\n          {\n            name: 'shutup_removed',\n            id: 184,\n          },\n          {\n            name: 'shutup_result',\n            id: 185,\n          },\n          {\n            name: 'shutuped',\n            id: 186,\n          },\n          {\n            name: 'unshutuped',\n            id: 187,\n          },\n          {\n            name: 'members_shutuped',\n            id: 188,\n          },\n          {\n            name: 'members_unshutuped',\n            id: 189,\n          },\n          {\n            name: 'check_shutup',\n            id: 190,\n          },\n        ],\n      },\n      {\n        name: 'StatusType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'on',\n            id: 1,\n          },\n          {\n            name: 'off',\n            id: 2,\n          },\n        ],\n      },\n    ],\n    isNamespace: true,\n  })\n  .build();\n","import messages from './message-compiled';\n\nconst {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  BlacklistCommand,\n  PatchCommand,\n  PatchItem,\n  ConvMemberInfo,\n  CommandType,\n  OpType,\n  StatusType,\n} = messages.push_server.messages2;\n\nexport {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  BlacklistCommand,\n  PatchCommand,\n  PatchItem,\n  ConvMemberInfo,\n  CommandType,\n  OpType,\n  StatusType,\n};\n","const adapters = {};\n\nconst getAdapter = name => {\n  const adapter = adapters[name];\n  if (adapter === undefined) {\n    throw new Error(`${name} adapter is not configured`);\n  }\n  return adapter;\n};\n\n/**\n * 指定 Adapters\n * @function\n * @memberof module:leancloud-realtime\n * @param {Adapters} newAdapters Adapters 的类型请参考 {@link https://url.leanapp.cn/adapter-type-definitions @leancloud/adapter-types} 中的定义\n */\nconst setAdapters = newAdapters => {\n  Object.assign(adapters, newAdapters);\n};\n\nexport { getAdapter, setAdapters };\n","/* eslint-disable */\nexport default (typeof global !== 'undefined'\n  ? global\n  : typeof window !== 'undefined' ? window : {});\n","import d from 'debug';\n\nconst EXPIRED = Symbol('expired');\nconst debug = d('LC:Expirable');\nexport default class Expirable {\n  constructor(value, ttl) {\n    this.originalValue = value;\n    if (typeof ttl === 'number') {\n      this.expiredAt = Date.now() + ttl;\n    }\n  }\n\n  get value() {\n    const expired = this.expiredAt && this.expiredAt <= Date.now();\n    if (expired) debug(`expired: ${this.originalValue}`);\n    return expired ? EXPIRED : this.originalValue;\n  }\n}\nExpirable.EXPIRED = EXPIRED;\n","import d from 'debug';\nimport Expirable from './expirable';\n\nconst debug = d('LC:Cache');\nexport default class Cache {\n  constructor(name = 'anonymous') {\n    this.name = name;\n    this._map = {};\n  }\n\n  get(key) {\n    const cache = this._map[key];\n    if (cache) {\n      const { value } = cache;\n      if (value !== Expirable.EXPIRED) {\n        debug('[%s] hit: %s', this.name, key);\n        return value;\n      }\n      delete this._map[key];\n    }\n    debug(`[${this.name}] missed: ${key}`);\n    return null;\n  }\n\n  set(key, value, ttl) {\n    debug('[%s] set: %s %d', this.name, key, ttl);\n    this._map[key] = new Expirable(value, ttl);\n  }\n}\n","import isPlainObject from 'lodash/isPlainObject';\nimport d from 'debug';\nimport global from './global';\n\nexport { global };\n\n/**\n * 调试日志控制器\n * @const\n * @memberof module:leancloud-realtime\n * @example\n * debug.enable();  // 启用调试日志\n * debug.disable(); // 关闭调试日志\n */\nconst debug = {\n  enable: (namespaces = 'LC*') => d.enable(namespaces),\n  disable: d.disable,\n};\nexport { debug };\n\nexport const tryAll = promiseConstructors => {\n  const promise = new Promise(promiseConstructors[0]);\n  if (promiseConstructors.length === 1) {\n    return promise;\n  }\n  return promise.catch(() => tryAll(promiseConstructors.slice(1)));\n};\n\n// eslint-disable-next-line no-sequences\nexport const tap = interceptor => value => (interceptor(value), value);\n\nexport const finalize = callback => [\n  // eslint-disable-next-line no-sequences\n  value => (callback(), value),\n  error => {\n    callback();\n    throw error;\n  },\n];\n\nexport { default as Expirable } from './expirable';\nexport { default as Cache } from './cache';\n\n/**\n * 将对象转换为 Date，支持 string、number、ProtoBuf Long 以及 LeanCloud 的 Date 类型，\n * 其他情况下（包括对象为 falsy）返回原值。\n * @private\n */\nexport const decodeDate = date => {\n  if (!date) return date;\n  if (typeof date === 'string' || typeof date === 'number') {\n    return new Date(date);\n  }\n  if (date.__type === 'Date' && date.iso) {\n    return new Date(date.iso);\n  }\n  // Long\n  if (typeof date.toNumber === 'function') {\n    return new Date(date.toNumber());\n  }\n  return date;\n};\n/**\n * 获取 Date 的毫秒数，如果不是一个 Date 返回 undefined。\n * @private\n */\nexport const getTime = date =>\n  date && date.getTime ? date.getTime() : undefined;\n\n/**\n * 解码对象中的 LeanCloud 数据结构。\n * 目前仅会处理 Date 类型。\n * @private\n */\nexport const decode = value => {\n  if (!value) return value;\n  if (value.__type === 'Date' && value.iso) {\n    return new Date(value.iso);\n  }\n  if (Array.isArray(value)) {\n    return value.map(decode);\n  }\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(\n      (result, key) => ({\n        ...result,\n        [key]: decode(value[key]),\n      }),\n      {}\n    );\n  }\n  return value;\n};\n/**\n * 将对象中的特殊类型编码为 LeanCloud 数据结构。\n * 目前仅会处理 Date 类型。\n * @private\n */\nexport const encode = value => {\n  if (value instanceof Date) return { __type: 'Date', iso: value.toJSON() };\n  if (Array.isArray(value)) {\n    return value.map(encode);\n  }\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(\n      (result, key) => ({\n        ...result,\n        [key]: encode(value[key]),\n      }),\n      {}\n    );\n  }\n  return value;\n};\n\nexport const keyRemap = (keymap, obj) =>\n  Object.keys(obj).reduce((newObj, key) => {\n    const newKey = keymap[key] || key;\n    return Object.assign(newObj, {\n      [newKey]: obj[key],\n    });\n  }, {});\n\nexport const isIE10 =\n  global.navigator &&\n  global.navigator.userAgent &&\n  global.navigator.userAgent.indexOf('MSIE 10.') !== -1;\n\n/* eslint-disable no-proto */\nexport const getStaticProperty = (klass, property) =>\n  klass[property] ||\n  (klass.__proto__ ? getStaticProperty(klass.__proto__, property) : undefined);\n/* eslint-enable no-proto */\n\nexport const union = (a, b) => Array.from(new Set([...a, ...b]));\nexport const difference = (a, b) =>\n  Array.from((bSet => new Set(a.filter(x => !bSet.has(x))))(new Set(b)));\n\nconst map = new WeakMap();\n\n// protected property helper\nexport const internal = object => {\n  if (!map.has(object)) {\n    map.set(object, {});\n  }\n  return map.get(object);\n};\n\nexport const compact = (obj, filter) => {\n  if (!isPlainObject(obj)) return obj;\n  const object = { ...obj };\n  Object.keys(object).forEach(prop => {\n    const value = object[prop];\n    if (value === filter) {\n      delete object[prop];\n    } else {\n      object[prop] = compact(value, filter);\n    }\n  });\n  return object;\n};\n\n// debug utility\nconst removeNull = obj => compact(obj, null);\nexport const trim = message => removeNull(JSON.parse(JSON.stringify(message)));\n\nexport const ensureArray = target => {\n  if (Array.isArray(target)) {\n    return target;\n  }\n  if (target === undefined || target === null) {\n    return [];\n  }\n  return [target];\n};\n\nexport const setValue = (target, key, value) => {\n  // '.' is not allowed in Class keys, escaping is not in concern now.\n  const segs = key.split('.');\n  const lastSeg = segs.pop();\n  let currentTarget = target;\n  segs.forEach(seg => {\n    if (currentTarget[seg] === undefined) currentTarget[seg] = {};\n    currentTarget = currentTarget[seg];\n  });\n  currentTarget[lastSeg] = value;\n  return target;\n};\n\nexport const isWeapp =\n  // eslint-disable-next-line no-undef\n  typeof wx === 'object' && typeof wx.connectSocket === 'function';\n\n// throttle decorator\nexport const throttle = wait => (target, property, descriptor) => {\n  const callback = descriptor.value;\n  // very naive, internal use only\n  if (callback.length) {\n    throw new Error('throttled function should not accept any arguments');\n  }\n  return {\n    ...descriptor,\n    value() {\n      let { throttleMeta } = internal(this);\n      if (!throttleMeta) {\n        throttleMeta = {};\n        internal(this).throttleMeta = throttleMeta;\n      }\n      let { [property]: propertyMeta } = throttleMeta;\n      if (!propertyMeta) {\n        propertyMeta = {};\n        throttleMeta[property] = propertyMeta;\n      }\n      const { previouseTimestamp = 0, timeout } = propertyMeta;\n      const now = Date.now();\n      const remainingTime = wait - (now - previouseTimestamp);\n      if (remainingTime <= 0) {\n        throttleMeta[property].previouseTimestamp = now;\n        callback.apply(this);\n      } else if (!timeout) {\n        propertyMeta.timeout = setTimeout(() => {\n          propertyMeta.previouseTimestamp = Date.now();\n          delete propertyMeta.timeout;\n          callback.apply(this);\n        }, remainingTime);\n      }\n    },\n  };\n};\n\nexport const isCNApp = appId => appId.slice(-9) !== '-MdYXbMMI';\n\nexport const equalBuffer = (buffer1, buffer2) => {\n  if (!buffer1 || !buffer2) return false;\n  if (buffer1.byteLength !== buffer2.byteLength) return false;\n  const a = new Uint8Array(buffer1);\n  const b = new Uint8Array(buffer2);\n  return !a.some((value, index) => value !== b[index]);\n};\n","// WebSocket with auto reconnecting feature, backup endpoint and EventEmitter interface.\n\nimport d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport StateMachine from 'javascript-state-machine';\nimport { getAdapter } from './adapter';\nimport { ensureArray, tryAll, global } from './utils';\n\nconst debug = d('LC:WebSocketPlus');\n\nexport const OPEN = 'open';\nexport const DISCONNECT = 'disconnect';\nexport const RECONNECT = 'reconnect';\nexport const RETRY = 'retry';\nexport const SCHEDULE = 'schedule';\nexport const OFFLINE = 'offline';\nexport const ONLINE = 'online';\nexport const ERROR = 'error';\nexport const MESSAGE = 'message';\n\nconst HEARTBEAT_TIME = 180000;\nconst TIMEOUT_TIME = 380000;\n\nconst DEFAULT_RETRY_STRATEGY = attempt => Math.min(1000 * 2 ** attempt, 300000);\n\nconst requireConnected = (target, name, descriptor) => ({\n  ...descriptor,\n  value: function requireConnectedWrapper(...args) {\n    this.checkConnectionAvailability(name);\n    return descriptor.value.call(this, ...args);\n  },\n});\n\nclass WebSocketPlus extends EventEmitter {\n  get urls() {\n    return this._urls;\n  }\n\n  set urls(urls) {\n    this._urls = ensureArray(urls);\n  }\n\n  constructor(getUrls, protocol) {\n    super();\n    this.init();\n    this._protocol = protocol;\n    Promise.resolve(typeof getUrls === 'function' ? getUrls() : getUrls)\n      .then(ensureArray)\n      .then(urls => {\n        this._urls = urls;\n        return this._open();\n      })\n      .then(() => {\n        this.__postponeTimeoutTimer = this._postponeTimeoutTimer.bind(this);\n        if (global.addEventListener) {\n          this.__pause = () => {\n            if (this.can('pause')) this.pause();\n          };\n          this.__resume = () => {\n            if (this.can('resume')) this.resume();\n          };\n          global.addEventListener('offline', this.__pause);\n          global.addEventListener('online', this.__resume);\n        }\n        this.open();\n      })\n      .catch(this.throw.bind(this));\n  }\n\n  _open() {\n    return this._createWs(this._urls, this._protocol).then(ws => {\n      const [first, ...reset] = this._urls;\n      this._urls = [...reset, first];\n      return ws;\n    });\n  }\n\n  _createWs(urls, protocol) {\n    return tryAll(\n      urls.map(url => (resolve, reject) => {\n        debug(`connect [${url}] ${protocol}`);\n        const WebSocket = getAdapter('WebSocket');\n        const ws = protocol ? new WebSocket(url, protocol) : new WebSocket(url);\n        ws.binaryType = this.binaryType || 'arraybuffer';\n        ws.onopen = () => resolve(ws);\n        ws.onclose = error => {\n          if (error instanceof Error) {\n            return reject(error);\n          }\n          // in browser, error event is useless\n          return reject(new Error(`Failed to connect [${url}]`));\n        };\n        ws.onerror = ws.onclose;\n      })\n    ).then(ws => {\n      this._ws = ws;\n      this._ws.onclose = this._handleClose.bind(this);\n      this._ws.onmessage = this._handleMessage.bind(this);\n      return ws;\n    });\n  }\n\n  _destroyWs() {\n    const ws = this._ws;\n    if (!ws) return;\n    ws.onopen = null;\n    ws.onclose = null;\n    ws.onerror = null;\n    ws.onmessage = null;\n    this._ws = null;\n    ws.close();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onbeforeevent(event, from, to, ...payload) {\n    debug(`${event}: ${from} -> ${to} %o`, payload);\n  }\n\n  onopen() {\n    this.emit(OPEN);\n  }\n\n  onconnected() {\n    this._startConnectionKeeper();\n  }\n\n  onleaveconnected(event, from, to) {\n    this._stopConnectionKeeper();\n    this._destroyWs();\n    if (to === 'offline' || to === 'disconnected') {\n      this.emit(DISCONNECT);\n    }\n  }\n\n  onpause() {\n    this.emit(OFFLINE);\n  }\n\n  onbeforeresume() {\n    this.emit(ONLINE);\n  }\n\n  onreconnect() {\n    this.emit(RECONNECT);\n  }\n\n  ondisconnected(event, from, to, attempt = 0) {\n    const delay =\n      from === OFFLINE ? 0 : DEFAULT_RETRY_STRATEGY.call(null, attempt);\n    debug(`schedule attempt=${attempt} delay=${delay}`);\n    this.emit(SCHEDULE, attempt, delay);\n    if (this.__scheduledRetry) {\n      clearTimeout(this.__scheduledRetry);\n    }\n    this.__scheduledRetry = setTimeout(() => {\n      if (this.is('disconnected')) {\n        this.retry(attempt);\n      }\n    }, delay);\n  }\n\n  onretry(event, from, to, attempt = 0) {\n    this.emit(RETRY, attempt);\n    this._open().then(\n      () => this.can('reconnect') && this.reconnect(),\n      () => this.can('fail') && this.fail(attempt + 1)\n    );\n  }\n\n  onerror(event, from, to, error) {\n    this.emit(ERROR, error);\n  }\n\n  onclose() {\n    if (global.removeEventListener) {\n      if (this.__pause) global.removeEventListener('offline', this.__pause);\n      if (this.__resume) global.removeEventListener('online', this.__resume);\n    }\n  }\n\n  checkConnectionAvailability(name = 'API') {\n    if (!this.is('connected')) {\n      const currentState = this.current;\n      console.warn(\n        `${name} should not be called when the connection is ${currentState}`\n      );\n      if (this.is('disconnected') || this.is('reconnecting')) {\n        console.warn(\n          'disconnect and reconnect event should be handled to avoid such calls.'\n        );\n      }\n      throw new Error('Connection unavailable');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  _ping() {\n    debug('ping');\n    try {\n      this.ping();\n    } catch (error) {\n      console.warn(`websocket ping error: ${error.message}`);\n    }\n  }\n\n  ping() {\n    if (this._ws.ping) {\n      this._ws.ping();\n    } else {\n      console.warn(`The WebSocket implement does not support sending ping frame.\n        Override ping method to use application defined ping/pong mechanism.`);\n    }\n  }\n\n  _postponeTimeoutTimer() {\n    debug('_postponeTimeoutTimer');\n    this._clearTimeoutTimers();\n    this._timeoutTimer = setTimeout(() => {\n      debug('timeout');\n      this.disconnect();\n    }, TIMEOUT_TIME);\n  }\n\n  _clearTimeoutTimers() {\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n    }\n  }\n\n  _startConnectionKeeper() {\n    debug('start connection keeper');\n    this._heartbeatTimer = setInterval(this._ping.bind(this), HEARTBEAT_TIME);\n    const addListener = this._ws.addListener || this._ws.addEventListener;\n    if (!addListener) {\n      debug('connection keeper disabled due to the lack of #addEventListener.');\n      return;\n    }\n    addListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n    addListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n    this._postponeTimeoutTimer();\n  }\n\n  _stopConnectionKeeper() {\n    debug('stop connection keeper');\n    // websockets/ws#489\n    const removeListener =\n      this._ws.removeListener || this._ws.removeEventListener;\n    if (removeListener) {\n      removeListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n      removeListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n      this._clearTimeoutTimers();\n    }\n    if (this._heartbeatTimer) {\n      clearInterval(this._heartbeatTimer);\n    }\n  }\n\n  _handleClose(event) {\n    debug(`ws closed [${event.code}] ${event.reason}`);\n    // socket closed manually, ignore close event.\n    if (this.isFinished()) return;\n    this.handleClose(event);\n  }\n\n  handleClose() {\n    // reconnect\n    this.disconnect();\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  send(data) {\n    debug('send', data);\n    this._ws.send(data);\n  }\n\n  _handleMessage(event) {\n    debug('message', event.data);\n    this.handleMessage(event.data);\n  }\n\n  handleMessage(message) {\n    this.emit(MESSAGE, message);\n  }\n}\n\nStateMachine.create({\n  target: WebSocketPlus.prototype,\n  initial: {\n    state: 'initialized',\n    event: 'init',\n    defer: true,\n  },\n  terminal: 'closed',\n  events: [\n    {\n      name: 'open',\n      from: 'initialized',\n      to: 'connected',\n    },\n    {\n      name: 'disconnect',\n      from: 'connected',\n      to: 'disconnected',\n    },\n    {\n      name: 'retry',\n      from: 'disconnected',\n      to: 'reconnecting',\n    },\n    {\n      name: 'fail',\n      from: 'reconnecting',\n      to: 'disconnected',\n    },\n    {\n      name: 'reconnect',\n      from: 'reconnecting',\n      to: 'connected',\n    },\n    {\n      name: 'pause',\n      from: ['connected', 'disconnected', 'reconnecting'],\n      to: 'offline',\n    },\n    {},\n    {\n      name: 'resume',\n      from: 'offline',\n      to: 'disconnected',\n    },\n    {\n      name: 'close',\n      from: ['connected', 'disconnected', 'reconnecting', 'offline'],\n      to: 'closed',\n    },\n    {\n      name: 'throw',\n      from: '*',\n      to: 'error',\n    },\n  ],\n});\n\nexport default WebSocketPlus;\n","export const error = Object.freeze({\n  1000: {\n    name: 'CLOSE_NORMAL',\n  },\n  1006: {\n    name: 'CLOSE_ABNORMAL',\n  },\n  4100: {\n    name: 'APP_NOT_AVAILABLE',\n    message: 'App not exists or realtime message service is disabled.',\n  },\n  4102: {\n    name: 'SIGNATURE_FAILED',\n    message: 'Login signature mismatch.',\n  },\n  4103: {\n    name: 'INVALID_LOGIN',\n    message: 'Malformed clientId.',\n  },\n  4105: {\n    name: 'SESSION_REQUIRED',\n    message: 'Message sent before session opened.',\n  },\n  4107: {\n    name: 'READ_TIMEOUT',\n  },\n  4108: {\n    name: 'LOGIN_TIMEOUT',\n  },\n  4109: {\n    name: 'FRAME_TOO_LONG',\n  },\n  4110: {\n    name: 'INVALID_ORIGIN',\n    message: 'Access denied by domain whitelist.',\n  },\n  4111: {\n    name: 'SESSION_CONFLICT',\n  },\n  4112: {\n    name: 'SESSION_TOKEN_EXPIRED',\n  },\n  4113: {\n    name: 'APP_QUOTA_EXCEEDED',\n    message: 'The daily active users limit exceeded.',\n  },\n  4116: {\n    name: 'MESSAGE_SENT_QUOTA_EXCEEDED',\n    message: 'Command sent too fast.',\n  },\n  4200: {\n    name: 'INTERNAL_ERROR',\n    message: 'Internal error, please contact LeanCloud for support.',\n  },\n  4301: {\n    name: 'CONVERSATION_API_FAILED',\n    message: 'Upstream Conversatoin API failed, see error.detail for details.',\n  },\n  4302: {\n    name: 'CONVERSATION_SIGNATURE_FAILED',\n    message: 'Conversation action signature mismatch.',\n  },\n  4303: {\n    name: 'CONVERSATION_NOT_FOUND',\n  },\n  4304: {\n    name: 'CONVERSATION_FULL',\n  },\n  4305: {\n    name: 'CONVERSATION_REJECTED_BY_APP',\n    message: 'Conversation action rejected by hook.',\n  },\n  4306: {\n    name: 'CONVERSATION_UPDATE_FAILED',\n  },\n  4307: {\n    name: 'CONVERSATION_READ_ONLY',\n  },\n  4308: {\n    name: 'CONVERSATION_NOT_ALLOWED',\n  },\n  4309: {\n    name: 'CONVERSATION_UPDATE_REJECTED',\n    message: 'Conversation update rejected because the client is not a member.',\n  },\n  4310: {\n    name: 'CONVERSATION_QUERY_FAILED',\n    message: 'Conversation query failed because it is too expansive.',\n  },\n  4311: {\n    name: 'CONVERSATION_LOG_FAILED',\n  },\n  4312: {\n    name: 'CONVERSATION_LOG_REJECTED',\n    message:\n      'Message query rejected because the client is not a member of the conversation.',\n  },\n  4313: {\n    name: 'SYSTEM_CONVERSATION_REQUIRED',\n  },\n  4314: {\n    name: 'NORMAL_CONVERSATION_REQUIRED',\n  },\n  4315: {\n    name: 'CONVERSATION_BLACKLISTED',\n    message: 'Blacklisted in the conversation.',\n  },\n  4316: {\n    name: 'TRANSIENT_CONVERSATION_REQUIRED',\n  },\n  4317: {\n    name: 'CONVERSATION_MEMBERSHIP_REQUIRED',\n  },\n  4318: {\n    name: 'CONVERSATION_API_QUOTA_EXCEEDED',\n    message: 'LeanCloud API quota exceeded. You may upgrade your plan.',\n  },\n  4323: {\n    name: 'TEMPORARY_CONVERSATION_EXPIRED',\n    message: 'Temporary conversation expired or does not exist.',\n  },\n  4401: {\n    name: 'INVALID_MESSAGING_TARGET',\n    message: 'Conversation does not exist or client is not a member.',\n  },\n  4402: {\n    name: 'MESSAGE_REJECTED_BY_APP',\n    message: 'Message rejected by hook.',\n  },\n  4403: {\n    name: 'MESSAGE_OWNERSHIP_REQUIRED',\n  },\n  4404: {\n    name: 'MESSAGE_NOT_FOUND',\n  },\n  4405: {\n    name: 'MESSAGE_UPDATE_REJECTED_BY_APP',\n    message: 'Message update rejected by hook.',\n  },\n  4406: {\n    name: 'MESSAGE_EDIT_DISABLED',\n  },\n  4407: {\n    name: 'MESSAGE_RECALL_DISABLED',\n  },\n  5130: {\n    name: 'OWNER_PROMOTION_NOT_ALLOWED',\n    message: \"Updating a member's role to owner is not allowed.\",\n  },\n});\n\nexport const ErrorCode = Object.freeze(\n  Object.keys(error).reduce(\n    (result, code) =>\n      Object.assign(result, {\n        [error[code].name]: Number(code),\n      }),\n    {}\n  )\n);\n\nexport const createError = ({\n  code,\n  reason,\n  appCode,\n  detail,\n  error: errorMessage,\n}) => {\n  let message = reason || detail || errorMessage;\n  let name = reason;\n  if (!message && error[code]) {\n    ({ name } = error[code]);\n    message = error[code].message || name;\n  }\n  if (!message) {\n    message = `Unknow Error: ${code}`;\n  }\n  const err = new Error(message);\n  return Object.assign(err, {\n    code,\n    appCode,\n    detail,\n    name,\n  });\n};\n","import d from 'debug';\nimport values from 'lodash/values';\nimport WebSocketPlus, {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n} from './websocket-plus';\nimport { createError } from './error';\nimport { GenericCommand, CommandType, OpType } from '../proto/message';\nimport { trim, equalBuffer } from './utils';\n\nconst debug = d('LC:Connection');\n\nconst COMMAND_TIMEOUT = 20000;\n\nconst EXPIRE = Symbol('expire');\n\nconst isIdempotentCommand = command =>\n  !(\n    command.cmd === CommandType.direct ||\n    (command.cmd === CommandType.session && command.op === OpType.open) ||\n    (command.cmd === CommandType.conv &&\n      (command.op === OpType.start ||\n        command.op === OpType.update ||\n        command.op === OpType.members))\n  );\n\nexport {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n  EXPIRE,\n};\n\nexport default class Connection extends WebSocketPlus {\n  constructor(getUrl, { format, version }) {\n    debug('initializing Connection');\n    const protocolString = `lc.${format}.${version}`;\n    super(getUrl, protocolString);\n    this._protocolFormat = format;\n    this._commands = {};\n    this._serialId = 0;\n  }\n\n  async send(command, waitingForRespond = true) {\n    let buffer;\n    let serialId;\n    if (waitingForRespond) {\n      if (isIdempotentCommand(command)) {\n        buffer = command.toArrayBuffer();\n        const duplicatedCommand = values(this._commands).find(\n          ({ buffer: targetBuffer, command: targetCommand }) =>\n            targetCommand.cmd === command.cmd &&\n            targetCommand.op === command.op &&\n            equalBuffer(targetBuffer, buffer)\n        );\n        if (duplicatedCommand) {\n          console.warn(\n            `Duplicated command [cmd:${command.cmd} op:${command.op}] is throttled.`\n          );\n          return duplicatedCommand.promise;\n        }\n      }\n\n      this._serialId += 1;\n      serialId = this._serialId;\n      command.i = serialId; // eslint-disable-line no-param-reassign\n    }\n    if (debug.enabled) debug('↑ %O sent', trim(command));\n\n    let message;\n    if (this._protocolFormat === 'proto2base64') {\n      message = command.toBase64();\n    } else if (command.toArrayBuffer) {\n      message = command.toArrayBuffer();\n    }\n    if (!message) {\n      throw new TypeError(`${command} is not a GenericCommand`);\n    }\n\n    super.send(message);\n\n    if (!waitingForRespond) return undefined;\n    const promise = new Promise((resolve, reject) => {\n      this._commands[serialId] = {\n        command,\n        buffer,\n        resolve,\n        reject,\n        timeout: setTimeout(() => {\n          if (this._commands[serialId]) {\n            if (debug.enabled) debug('✗ %O timeout', trim(command));\n            reject(\n              createError({\n                error: `Command Timeout [cmd:${command.cmd} op:${command.op}]`,\n                name: 'COMMAND_TIMEOUT',\n              })\n            );\n            delete this._commands[serialId];\n          }\n        }, COMMAND_TIMEOUT),\n      };\n    });\n    this._commands[serialId].promise = promise;\n    return promise;\n  }\n\n  handleMessage(msg) {\n    let message;\n    try {\n      message = GenericCommand.decode(msg);\n      if (debug.enabled) debug('↓ %O received', trim(message));\n    } catch (e) {\n      console.warn('Decode message failed:', e.message, msg);\n      return;\n    }\n    const serialId = message.i;\n    if (serialId) {\n      if (this._commands[serialId]) {\n        clearTimeout(this._commands[serialId].timeout);\n        if (message.cmd === CommandType.error) {\n          this._commands[serialId].reject(createError(message.errorMessage));\n        } else {\n          this._commands[serialId].resolve(message);\n        }\n        delete this._commands[serialId];\n      } else {\n        console.warn(`Unexpected command received with serialId [${serialId}],\n         which have timed out or never been requested.`);\n      }\n    } else {\n      switch (message.cmd) {\n        case CommandType.error: {\n          this.emit(ERROR, createError(message.errorMessage));\n          return;\n        }\n        case CommandType.goaway: {\n          this.emit(EXPIRE);\n          return;\n        }\n        default: {\n          this.emit(MESSAGE, message);\n        }\n      }\n    }\n  }\n\n  ping() {\n    return this.send(\n      new GenericCommand({\n        cmd: CommandType.echo,\n      })\n    ).catch(error => debug('ping failed:', error));\n  }\n}\n","import d from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { timeout } from 'promise-timeout';\nimport { getAdapter } from '../adapter';\nimport { createError } from '../error';\n\nconst debug = d('LC:request');\n\nexport default ({\n  method = 'GET',\n  url: _url,\n  query,\n  headers,\n  data,\n  timeout: time,\n}) => {\n  let url = _url;\n  if (query) {\n    const queryString = Object.keys(query)\n      .map(key => {\n        const value = query[key];\n        if (value === undefined) return undefined;\n        const v = isPlainObject(value) ? JSON.stringify(value) : value;\n        return `${encodeURIComponent(key)}=${encodeURIComponent(v)}`;\n      })\n      .filter(qs => qs)\n      .join('&');\n    url = `${url}?${queryString}`;\n  }\n  debug('Req: %O %O %O', method, url, { headers, data });\n  const request = getAdapter('request');\n  const promise = request(url, { method, headers, data })\n    .then(response => {\n      if (response.ok === false) {\n        const error = createError(response.data);\n        error.response = response;\n        throw error;\n      }\n      debug('Res: %O %O %O', url, response.status, response.data);\n      return response.data;\n    })\n    .catch(error => {\n      if (error.response) {\n        debug(\n          'Error: %O %O %O',\n          url,\n          error.response.status,\n          error.response.data\n        );\n      }\n      throw error;\n    });\n  return time ? timeout(promise, time) : promise;\n};\n","/* eslint-disable max-len */\n\n/**\n * 插件接口\n *\n * <p>\n * 插件是由一个或多个扩展点组成的字典。SDK 的扩展点可以分为两类：\n * <p>\n * 第一类扩展点是类实例化之后的回调，包括 <code>Realtime</code>、<code>IMClient</code> 与 <code>Conversation</code>。这些扩展点可以通过一个同步的 Decorator 进行扩展。Decorator 接受一个对应的实例并对其进行一些操作。\n * 特别的，由于注册自定义消息类这个需求特别的常用，额外定义一个 messageClasses 扩展点来做这件事情。\n * <p>\n * 第二类扩展点是在某些事件处理前、后可以注入逻辑的点。\n * 其中 <code>beforeMessageParse</code>，<code>afterMessageParse</code> 可以通过一个异步的 Middleware 进行扩展。Middleware 接受一个对象，返回一个同类型对象或同类型对象的 Promise。\n * <code>beforeMessageDispatch</code> 可以通过返回一个 boolean 类型的 shouldDispatch 值来控制是否要继续派发收到的消息。\n * <p>\n * 如果使用了多个插件，这些 hook 会按照插件数组的顺序依次执行。前一个 Middleware 的返回值会作为参数传给后一个 Middleware。\n *\n * @interface Plugin\n * @since 3.1.0\n */\n\n/* eslint-enable max-len */\n\n/**\n * 插件名称，用于在日志中显示异常的插件\n *\n * @name Plugin.name\n * @type string\n */\n\n/**\n * 插件注册的消息类型\n *\n * @name Plugin.messageClasses\n * @type AVMessage[]\n */\n\n/**\n * 在 Realtime 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Realtime 实例。\n *\n * @name Plugin.onRealtimeCreate\n * @type Function\n */\n\n/**\n * 在 IMClient 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 IMClient 实例。\n *\n * @name Plugin.onIMClientCreate\n * @type Function\n */\n\n/**\n * 在 Conversation 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Conversation 实例。\n * 需要注意的是，该扩展点并不是在 <code>{@link IMClient#createConversation}</code> 方法创建成功后调用的 hook，\n * 而是所有的 Conversation 实例化的时候（包括但不限于 query 时）调用的 hook。\n *\n * @name Plugin.onConversationCreate\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之前，对原始消息进行修改。\n * <p>\n * 接受一个参数为原始消息，是某个消息的内容，一般是一个 JSON 对象。\n * 该方法需要返回一个 JSON 对象。如果这个结果是异步得到的，也可以返回一个 Promise(fulfilled with a JSON)。\n *\n * @name Plugin.beforeMessageParse\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之后，对消息实例进行修改。\n * <p>\n * 接受一个参数为消息实例，一般是一个已注册的 Message 类或其子类的实例。\n * 该方法需要返回一个同类型的消息实例。如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.afterMessageParse\n * @type Function\n */\n\n/**\n * 在收到消息之后，派发消息之前，控制是否派发这条消息。\n * <p>\n * 接受参数为 message 与 conversation。\n * 该方法需要返回 boolean 类型的值，如果返回 false 则 SDK 不再派发这条消息，后续的 beforeMessageDispatch 也不会执行。\n * 如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.beforeMessageDispatch\n * @type Function\n * @since 3.4.0\n */\n\nimport { ensureArray, tap } from './utils';\n\nconst checkType = middleware => param => {\n  const { constructor } = param;\n  return Promise.resolve(param)\n    .then(middleware)\n    .then(\n      tap(result => {\n        if (result === undefined || result === null) {\n          // eslint-disable-next-line max-len\n          return console.warn(\n            `Middleware[${middleware._pluginName ||\n              'anonymous plugin'}:${middleware.name ||\n              'anonymous middleware'}] param/return types not match. It returns ${result} while a ${\n              param.constructor.name\n            } expected.`\n          );\n        }\n        if (!(result instanceof constructor)) {\n          // eslint-disable-next-line max-len\n          return console.warn(\n            `Middleware[${middleware._pluginName ||\n              'anonymous plugin'}:${middleware.name ||\n              'anonymous middleware'}] param/return types not match. It returns a ${\n              result.constructor.name\n            } while a ${param.constructor.name} expected.`\n          );\n        }\n        return 0;\n      })\n    );\n};\n\nexport const applyDecorators = (decorators, target) => {\n  if (decorators) {\n    decorators.forEach(decorator => {\n      try {\n        decorator(target);\n      } catch (error) {\n        if (decorator._pluginName) {\n          error.message += `[${decorator._pluginName}]`;\n        }\n        throw error;\n      }\n    });\n  }\n};\n\nexport const applyMiddlewares = middlewares => target =>\n  ensureArray(middlewares).reduce(\n    (previousPromise, middleware) =>\n      previousPromise.then(checkType(middleware)).catch(error => {\n        if (middleware._pluginName) {\n          // eslint-disable-next-line no-param-reassign\n          error.message += `[${middleware._pluginName}]`;\n        }\n        throw error;\n      }),\n    Promise.resolve(target)\n  );\n\nexport const applyDispatcher = (dispatchers, payload) =>\n  ensureArray(dispatchers).reduce(\n    (resultPromise, dispatcher) =>\n      resultPromise\n        .then(\n          shouldDispatch =>\n            shouldDispatch === false ? false : dispatcher(...payload)\n        )\n        .catch(error => {\n          if (dispatcher._pluginName) {\n            // eslint-disable-next-line no-param-reassign\n            error.message += `[${dispatcher._pluginName}]`;\n          }\n          throw error;\n        }),\n    Promise.resolve(true)\n  );\n","// eslint-disable-next-line max-classes-per-file\nimport d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport shuffle from 'lodash/shuffle';\nimport Connection, {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n  EXPIRE,\n} from './connection';\nimport { ErrorCode, createError } from './error';\nimport {\n  tap,\n  Cache,\n  trim,\n  internal,\n  ensureArray,\n  isWeapp,\n  isCNApp,\n} from './utils';\nimport request from './utils/request';\nimport { applyDecorators, applyDispatcher } from './plugin';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:Realtime');\nconst routerCache = new Cache('push-router');\n\nconst initializedApp = {};\n\nexport default class Realtime extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @param  {Object} options\n   * @param  {String} options.appId\n   * @param  {String} options.appKey （since 4.0.0）\n   * @param  {String|Object} [options.server] 指定服务器域名，中国节点应用此参数必填（since 4.0.0）\n   * @param  {Boolean} [options.noBinary=false] 设置 WebSocket 使用字符串格式收发消息（默认为二进制格式）。\n   *                                            适用于 WebSocket 实现不支持二进制数据格式的情况\n   * @param  {Boolean} [options.ssl=true] 使用 wss 进行连接\n   * @param  {String|String[]} [options.RTMServers] 指定私有部署的 RTM 服务器地址（since 4.0.0）\n   * @param  {Plugin[]} [options.plugins] 加载插件（since 3.1.0）\n   */\n  constructor({ plugins, ...options }) {\n    debug('initializing Realtime %s %O', VERSION, options);\n    super();\n    const { appId } = options;\n    if (typeof appId !== 'string') {\n      throw new TypeError(`appId [${appId}] is not a string`);\n    }\n    if (initializedApp[appId]) {\n      throw new Error(`App [${appId}] is already initialized.`);\n    }\n    initializedApp[appId] = true;\n    if (typeof options.appKey !== 'string') {\n      throw new TypeError(`appKey [${options.appKey}] is not a string`);\n    }\n    if (isCNApp(appId)) {\n      if (!options.server) {\n        throw new TypeError(\n          `server option is required for apps from CN region`\n        );\n      }\n    }\n    this._options = {\n      appId: undefined,\n      appKey: undefined,\n      noBinary: false,\n      ssl: true,\n      RTMServerName:\n        typeof process !== 'undefined'\n          ? process.env.RTM_SERVER_NAME\n          : undefined, // undocumented on purpose, internal use only\n      ...options,\n    };\n    this._cache = new Cache('endpoints');\n    const _this = internal(this);\n    _this.clients = new Set();\n    _this.pendingClients = new Set();\n    const mergedPlugins = [\n      ...ensureArray(Realtime.__preRegisteredPlugins),\n      ...ensureArray(plugins),\n    ];\n    debug(\n      'Using plugins %o',\n      mergedPlugins.map(plugin => plugin.name)\n    );\n    this._plugins = mergedPlugins.reduce((result, plugin) => {\n      Object.keys(plugin).forEach(hook => {\n        if ({}.hasOwnProperty.call(plugin, hook) && hook !== 'name') {\n          if (plugin.name) {\n            ensureArray(plugin[hook]).forEach(value => {\n              // eslint-disable-next-line no-param-reassign\n              value._pluginName = plugin.name;\n            });\n          }\n          // eslint-disable-next-line no-param-reassign\n          result[hook] = ensureArray(result[hook]).concat(plugin[hook]);\n        }\n      });\n      return result;\n    }, {});\n    // onRealtimeCreate hook\n    applyDecorators(this._plugins.onRealtimeCreate, this);\n  }\n\n  async _request({\n    method,\n    url: _url,\n    version = '1.1',\n    path,\n    query,\n    headers,\n    data,\n  }) {\n    let url = _url;\n    if (!url) {\n      const { appId, server } = this._options;\n      const { api } = await this.constructor._getServerUrls({\n        appId,\n        server,\n      });\n      url = `${api}/${version}${path}`;\n    }\n    return request({\n      url,\n      method,\n      query,\n      headers: {\n        'X-LC-Id': this._options.appId,\n        'X-LC-Key': this._options.appKey,\n        ...headers,\n      },\n      data,\n    });\n  }\n\n  _open() {\n    if (this._openPromise) return this._openPromise;\n\n    let format = 'protobuf2';\n    if (this._options.noBinary) {\n      // 不发送 binary data，fallback to base64 string\n      format = 'proto2base64';\n    }\n    const version = 3;\n    const protocol = {\n      format,\n      version,\n    };\n    this._openPromise = new Promise((resolve, reject) => {\n      debug('No connection established, create a new one.');\n      const connection = new Connection(\n        () => this._getRTMServers(this._options),\n        protocol\n      );\n      connection\n        .on(OPEN, () => resolve(connection))\n        .on(ERROR, error => {\n          delete this._openPromise;\n          reject(error);\n        })\n        .on(EXPIRE, async () => {\n          debug('Connection expired. Refresh endpoints.');\n          this._cache.set('endpoints', null, 0);\n          connection.urls = await this._getRTMServers(this._options);\n          connection.disconnect();\n        })\n        .on(MESSAGE, this._dispatchCommand.bind(this));\n      /**\n       * 连接断开。\n       * 连接断开可能是因为 SDK 进入了离线状态（see {@link Realtime#event:OFFLINE}），或长时间没有收到服务器心跳。\n       * 连接断开后所有的网络操作都会失败，请在连接断开后禁用相关的 UI 元素。\n       * @event Realtime#DISCONNECT\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event Realtime#SCHEDULE\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       */\n      /**\n       * 正在尝试重新连接\n       * @event Realtime#RETRY\n       * @param {Number} attempt 尝试重连的次数\n       */\n      /**\n       * 连接恢复正常。\n       * 请重新启用在 {@link Realtime#event:DISCONNECT} 事件中禁用的相关 UI 元素\n       * @event Realtime#RECONNECT\n       */\n\n      /**\n       * 客户端连接断开\n       * @event IMClient#DISCONNECT\n       * @see Realtime#event:DISCONNECT\n       * @since 3.2.0\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event IMClient#SCHEDULE\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       * @since 3.2.0\n       */\n      /**\n       * 正在尝试重新连接\n       * @event IMClient#RETRY\n       * @param {Number} attempt 尝试重连的次数\n       * @since 3.2.0\n       */\n\n      /**\n       * 客户端进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event Realtime#OFFLINE\n       * @since 3.4.0\n       */\n      /**\n       * 客户端恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event Realtime#ONLINE\n       * @since 3.4.0\n       */\n      /**\n       * 进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event IMClient#OFFLINE\n       * @since 3.4.0\n       */\n      /**\n       * 恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event IMClient#ONLINE\n       * @since 3.4.0\n       */\n\n      // event proxy\n      [DISCONNECT, RECONNECT, RETRY, SCHEDULE, OFFLINE, ONLINE].forEach(event =>\n        connection.on(event, (...payload) => {\n          debug(`${event} event emitted. %o`, payload);\n          this.emit(event, ...payload);\n          if (event !== RECONNECT) {\n            internal(this).clients.forEach(client => {\n              client.emit(event, ...payload);\n            });\n          }\n        })\n      );\n      // override handleClose\n      connection.handleClose = function handleClose(event) {\n        const isFatal = [\n          ErrorCode.APP_NOT_AVAILABLE,\n          ErrorCode.INVALID_LOGIN,\n          ErrorCode.INVALID_ORIGIN,\n        ].some(errorCode => errorCode === event.code);\n        if (isFatal) {\n          // in these cases, SDK should throw.\n          this.throw(createError(event));\n        } else {\n          // reconnect\n          this.disconnect();\n        }\n      };\n      internal(this).connection = connection;\n    });\n\n    return this._openPromise;\n  }\n\n  async _getRTMServers(options) {\n    if (options.RTMServers) return shuffle(ensureArray(options.RTMServers));\n    let info;\n    const cachedEndPoints = this._cache.get('endpoints');\n    if (cachedEndPoints) {\n      info = cachedEndPoints;\n    } else {\n      info = await this.constructor._fetchRTMServers(options);\n      const { server, secondary, ttl } = info;\n      if (\n        typeof server !== 'string' &&\n        typeof secondary !== 'string' &&\n        typeof ttl !== 'number'\n      ) {\n        throw new Error(\n          `malformed RTM route response: ${JSON.stringify(info)}`\n        );\n      }\n      this._cache.set('endpoints', info, info.ttl * 1000);\n    }\n    debug('endpoint info: %O', info);\n    return [info.server, info.secondary];\n  }\n\n  static async _getServerUrls({ appId, server }) {\n    debug('fetch server urls');\n    if (server) {\n      if (typeof server !== 'string') return server;\n      return {\n        RTMRouter: server,\n        api: server,\n      };\n    }\n    const cachedRouter = routerCache.get(appId);\n    if (cachedRouter) return cachedRouter;\n    const defaultProtocol = 'https://';\n    return request({\n      url: 'https://app-router.com/2/route',\n      query: {\n        appId,\n      },\n      timeout: 20000,\n    })\n      .then(tap(debug))\n      .then(\n        ({\n          rtm_router_server: RTMRouterServer,\n          api_server: APIServer,\n          ttl = 3600,\n        }) => {\n          if (!RTMRouterServer) {\n            throw new Error('rtm router not exists');\n          }\n          const serverUrls = {\n            RTMRouter: `${defaultProtocol}${RTMRouterServer}`,\n            api: `${defaultProtocol}${APIServer}`,\n          };\n          routerCache.set(appId, serverUrls, ttl * 1000);\n          return serverUrls;\n        }\n      )\n      .catch(() => {\n        const id = appId.slice(0, 8).toLowerCase();\n        const domain = 'lncldglobal.com';\n        return {\n          RTMRouter: `${defaultProtocol}${id}.rtm.${domain}`,\n          api: `${defaultProtocol}${id}.api.${domain}`,\n        };\n      });\n  }\n\n  static _fetchRTMServers({ appId, ssl, server, RTMServerName }) {\n    debug('fetch endpoint info');\n    return this._getServerUrls({ appId, server })\n      .then(tap(debug))\n      .then(({ RTMRouter }) =>\n        request({\n          url: `${RTMRouter}/v1/route`,\n          query: {\n            appId,\n            secure: ssl,\n            features: isWeapp ? 'wechat' : undefined,\n            server: RTMServerName,\n            _t: Date.now(),\n          },\n          timeout: 20000,\n        }).then(tap(debug))\n      );\n  }\n\n  _close() {\n    if (this._openPromise) {\n      this._openPromise.then(connection => connection.close());\n    }\n    delete this._openPromise;\n  }\n\n  /**\n   * 手动进行重连。\n   * SDK 在网络出现异常时会自动按照一定的时间间隔尝试重连，调用该方法会立即尝试重连并重置重连尝试计数器。\n   * 只能在 `SCHEDULE` 事件之后，`RETRY` 事件之前调用，如果当前网络正常或者正在进行重连，调用该方法会抛异常。\n   */\n  retry() {\n    const { connection } = internal(this);\n    if (!connection) {\n      throw new Error('no connection established');\n    }\n    if (connection.cannot('retry')) {\n      throw new Error(\n        `retrying not allowed when not disconnected. the connection is now ${connection.current}`\n      );\n    }\n    return connection.retry();\n  }\n\n  /**\n   * 暂停，使 SDK 进入离线状态。\n   * 你可以在网络断开、应用进入后台等时刻调用该方法让 SDK 进入离线状态，离线状态下不会尝试重连。\n   * 在浏览器中 SDK 会自动监听网络变化，因此无需手动调用该方法。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:OFFLINE\n   */\n  pause() {\n    // 这个方法常常在网络断开、进入后台时被调用，此时 connection 可能没有建立或者已经 close。\n    // 因此不像 retry，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('pause')) connection.pause();\n  }\n\n  /**\n   * 恢复在线状态。\n   * 你可以在网络恢复、应用回到前台等时刻调用该方法让 SDK 恢复在线状态，恢复在线状态后 SDK 会开始尝试重连。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:ONLINE\n   */\n  resume() {\n    // 与 pause 一样，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('resume')) connection.resume();\n  }\n\n  _registerPending(value) {\n    internal(this).pendingClients.add(value);\n  }\n\n  _deregisterPending(client) {\n    internal(this).pendingClients.delete(client);\n  }\n\n  _register(client) {\n    internal(this).clients.add(client);\n  }\n\n  _deregister(client) {\n    const _this = internal(this);\n    _this.clients.delete(client);\n    if (_this.clients.size + _this.pendingClients.size === 0) {\n      this._close();\n    }\n  }\n\n  _dispatchCommand(command) {\n    return applyDispatcher(this._plugins.beforeCommandDispatch, [\n      command,\n      this,\n    ]).then(shouldDispatch => {\n      // no plugin handled this command\n      if (shouldDispatch)\n        return debug('[WARN] Unexpected message received: %O', trim(command));\n      return false;\n    });\n  }\n}\n\n// For test purpose only\n// SHOULD NOT be public\nexport class MultitonRealtime extends Realtime {\n  constructor({ appId, ...rest }) {\n    delete initializedApp[appId];\n    super({\n      appId,\n      ...rest,\n    });\n  }\n}\n","import * as Protocols from '../proto/message';\n\nexport {\n  Protocols,\n  // misspelling\n  Protocols as Protocals,\n};\n\nexport { default as EventEmitter } from 'eventemitter3';\n\nconst polyfilledPromise = Promise;\nexport { polyfilledPromise as Promise };\n\nexport {\n  /**\n   * @name Realtime\n   * @memberof module:leancloud-realtime\n   * @see Realtime\n   */\n  default as Realtime,\n} from './realtime';\n\nexport * from './adapter';\n\nexport { debug } from './utils';\n","// IMClient\nexport const UNREAD_MESSAGES_COUNT_UPDATE = 'unreadmessagescountupdate';\nexport const CLOSE = 'close';\nexport const CONFLICT = 'conflict';\nexport const CONVERSATION_INFO_UPDATED = 'conversationinfoupdated';\nexport const UNHANDLED_MESSAGE = 'unhandledmessage';\n\n// shared\nexport const INVITED = 'invited';\nexport const KICKED = 'kicked';\nexport const MEMBERS_JOINED = 'membersjoined';\nexport const MEMBERS_LEFT = 'membersleft';\nexport const MEMBER_INFO_UPDATED = 'memberinfoupdated';\nexport const BLOCKED = 'blocked';\nexport const UNBLOCKED = 'unblocked';\nexport const MEMBERS_BLOCKED = 'membersblocked';\nexport const MEMBERS_UNBLOCKED = 'membersunblocked';\nexport const MUTED = 'muted';\nexport const UNMUTED = 'unmuted';\nexport const MEMBERS_MUTED = 'membersmuted';\nexport const MEMBERS_UNMUTED = 'membersunmuted';\nexport const MESSAGE = 'message';\nexport const MESSAGE_RECALL = 'messagerecall';\nexport const MESSAGE_UPDATE = 'messageupdate';\n\n// Conversation\nexport const LAST_DELIVERED_AT_UPDATE = 'lastdeliveredatupdate';\nexport const LAST_READ_AT_UPDATE = 'lastreadatupdate';\nexport const INFO_UPDATED = 'infoupdated';\n","import uuid from 'uuid/v4';\nimport { ensureArray, decodeDate, getTime } from '../utils';\n\n/**\n * 消息状态枚举\n * @enum {Symbol}\n * @since 3.2.0\n * @memberof module:leancloud-realtime\n */\nconst MessageStatus = {\n  /** 初始状态、未知状态 */\n  NONE: Symbol('none'),\n  /** 正在发送 */\n  SENDING: Symbol('sending'),\n  /** 已发送 */\n  SENT: Symbol('sent'),\n  /** 已送达 */\n  DELIVERED: Symbol('delivered'),\n  /** 发送失败 */\n  FAILED: Symbol('failed'),\n};\nObject.freeze(MessageStatus);\n\nconst rMessageStatus = {\n  [MessageStatus.NONE]: true,\n  [MessageStatus.SENDING]: true,\n  [MessageStatus.SENT]: true,\n  [MessageStatus.DELIVERED]: true,\n  [MessageStatus.READ]: true,\n  [MessageStatus.FAILED]: true,\n};\n\nexport { MessageStatus };\nexport default class Message {\n  /**\n   * @implements AVMessage\n   * @param  {Object|String|ArrayBuffer} content 消息内容\n   */\n  constructor(content) {\n    Object.assign(\n      this,\n      { content },\n      {\n        /**\n         * @type {String}\n         * @memberof Message#\n         */\n        id: uuid(),\n        /**\n         * 消息所在的 conversation id\n         * @memberof Message#\n         * @type {String?}\n         */\n        cid: null,\n        /**\n         * 消息发送时间\n         * @memberof Message#\n         * @type {Date}\n         */\n        timestamp: new Date(),\n        /**\n         * 消息发送者\n         * @memberof Message#\n         * @type {String}\n         */\n        from: undefined,\n        /**\n         * 消息提及的用户\n         * @since 4.0.0\n         * @memberof Message#\n         * @type {String[]}\n         */\n        mentionList: [],\n        /**\n         * 消息是否提及了所有人\n         * @since 4.0.0\n         * @memberof Message#\n         * @type {Boolean}\n         */\n        mentionedAll: false,\n        _mentioned: false,\n      }\n    );\n    this._setStatus(MessageStatus.NONE);\n  }\n\n  /**\n   * 将当前消息的内容序列化为 JSON 对象\n   * @private\n   * @return {Object}\n   */\n  getPayload() {\n    return this.content;\n  }\n\n  _toJSON() {\n    const {\n      id,\n      cid,\n      from,\n      timestamp,\n      deliveredAt,\n      updatedAt,\n      mentionList,\n      mentionedAll,\n      mentioned,\n    } = this;\n    return {\n      id,\n      cid,\n      from,\n      timestamp,\n      deliveredAt,\n      updatedAt,\n      mentionList,\n      mentionedAll,\n      mentioned,\n    };\n  }\n\n  /**\n   * 返回 JSON 格式的消息\n   * @return {Object} 返回值是一个 plain Object\n   */\n  toJSON() {\n    return {\n      ...this._toJSON(),\n      data: this.content,\n    };\n  }\n\n  /**\n   * 返回 JSON 格式的消息，与 toJSON 不同的是，该对象包含了完整的信息，可以通过 {@link IMClient#parseMessage} 反序列化。\n   * @return {Object} 返回值是一个 plain Object\n   * @since 4.0.0\n   */\n  toFullJSON() {\n    const {\n      content,\n      id,\n      cid,\n      from,\n      timestamp,\n      deliveredAt,\n      _updatedAt,\n      mentionList,\n      mentionedAll,\n    } = this;\n    return {\n      data: content,\n      id,\n      cid,\n      from,\n      timestamp: getTime(timestamp),\n      deliveredAt: getTime(deliveredAt),\n      updatedAt: getTime(_updatedAt),\n      mentionList,\n      mentionedAll,\n    };\n  }\n\n  /**\n   * 消息状态，值为 {@link module:leancloud-realtime.MessageStatus} 之一\n   * @type {Symbol}\n   * @readonly\n   * @since 3.2.0\n   */\n  get status() {\n    return this._status;\n  }\n\n  _setStatus(status) {\n    if (!rMessageStatus[status]) {\n      throw new Error('Invalid message status');\n    }\n    this._status = status;\n  }\n\n  get timestamp() {\n    return this._timestamp;\n  }\n\n  set timestamp(value) {\n    this._timestamp = decodeDate(value);\n  }\n\n  /**\n   * 消息送达时间\n   * @type {?Date}\n   */\n  get deliveredAt() {\n    return this._deliveredAt;\n  }\n\n  set deliveredAt(value) {\n    this._deliveredAt = decodeDate(value);\n  }\n\n  /**\n   * 消息修改或撤回时间，可以通过比较其与消息的 timestamp 是否相等判断消息是否被修改过或撤回过。\n   * @type {Date}\n   * @since 3.5.0\n   */\n  get updatedAt() {\n    return this._updatedAt || this.timestamp;\n  }\n\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n\n  /**\n   * 当前用户是否在该消息中被提及\n   * @type {Boolean}\n   * @readonly\n   * @since 4.0.0\n   */\n  get mentioned() {\n    return this._mentioned;\n  }\n\n  _updateMentioned(client) {\n    this._mentioned =\n      this.from !== client &&\n      (this.mentionedAll || this.mentionList.indexOf(client) > -1);\n  }\n\n  /**\n   * 获取提及用户列表\n   * @since 4.0.0\n   * @return {String[]} 提及用户的 id 列表\n   */\n  getMentionList() {\n    return this.mentionList;\n  }\n\n  /**\n   * 设置提及用户列表\n   * @since 4.0.0\n   * @param {String[]} clients 提及用户的 id 列表\n   * @return {this} self\n   */\n  setMentionList(clients) {\n    this.mentionList = ensureArray(clients);\n    return this;\n  }\n\n  /**\n   * 设置是否提及所有人\n   * @since 4.0.0\n   * @param {Boolean} [value=true]\n   * @return {this} self\n   */\n  mentionAll(value = true) {\n    this.mentionedAll = Boolean(value);\n    return this;\n  }\n\n  /**\n   * 判断给定的内容是否是有效的 Message，\n   * 该方法始终返回 true\n   * @private\n   * @returns {Boolean}\n   * @implements AVMessage.validate\n   */\n  static validate() {\n    return true;\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 如果子类提供了 message，返回该 message\n   * 如果没有提供，将 json 作为 content 实例化一个 Message\n   * @private\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {Message} message 子类提供的 message\n   * @return {Message}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message) {\n    return message || new this(json);\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// documented in ../index.js\nexport const messageType = type => {\n  if (typeof type !== 'number') {\n    throw new TypeError(`${type} is not a Number`);\n  }\n  return target => {\n    target.TYPE = type;\n    target.validate = json => json._lctype === type;\n    target.prototype._getType = () => ({ _lctype: type });\n  };\n};\n\n// documented in ../plugin-im.js\nexport const messageField = fields => {\n  if (typeof fields !== 'string') {\n    if (!Array.isArray(fields)) {\n      throw new TypeError(`${fields} is not an Array`);\n    } else if (fields.some(value => typeof value !== 'string')) {\n      throw new TypeError('fields contains non-string typed member');\n    }\n  }\n  return target => {\n    // IE10 Hack:\n    // static properties in IE10 will not be inherited from super\n    // search for parse method and assign it manually\n    let originalCustomFields = isIE10\n      ? getStaticProperty(target, '_customFields')\n      : target._customFields;\n    originalCustomFields = Array.isArray(originalCustomFields)\n      ? originalCustomFields\n      : [];\n    target._customFields = originalCustomFields.concat(fields);\n  };\n};\n\n// IE10 Hack:\n// static properties in IE10 will not be inherited from super\n// search for parse method and assign it manually\n\nexport const IE10Compatible = target => {\n  if (isIE10) {\n    target.parse = getStaticProperty(target, 'parse');\n  }\n};\n","import Message from './message';\nimport { messageField } from './helpers';\nimport { getStaticProperty, isIE10, compact } from '../utils';\n\n// jsdoc-ignore-start\n@messageField(['_lctext', '_lcattrs'])\n// jsdoc-ignore-end\n/**\n * 所有内置的富媒体消息均继承自本类\n * @extends Message\n */\nclass TypedMessage extends Message {\n  /**\n   * @type {Number}\n   * @readonly\n   */\n  get type() {\n    return this.constructor.TYPE;\n  }\n\n  /** @type {String} */\n  set text(text) {\n    return this.setText(text);\n  }\n\n  get text() {\n    return this.getText();\n  }\n\n  /** @type {Object} */\n  set attributes(attributes) {\n    return this.setAttributes(attributes);\n  }\n\n  get attributes() {\n    return this.getAttributes();\n  }\n\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，\n   * 如 <code>[红包] 新春快乐</code>。\n   * 默认值为消息的 text。\n   * @type {String}\n   * @readonly\n   */\n  get summary() {\n    return this.text;\n  }\n\n  /**\n   * @param {String} text\n   * @return {this} self\n   */\n  setText(text) {\n    this._lctext = text;\n    return this;\n  }\n\n  /**\n   * @return {String}\n   */\n  getText() {\n    return this._lctext;\n  }\n\n  /**\n   * @param {Object} attributes\n   * @return {this} self\n   */\n  setAttributes(attributes) {\n    this._lcattrs = attributes;\n    return this;\n  }\n\n  /**\n   * @return {Object}\n   */\n  getAttributes() {\n    return this._lcattrs;\n  }\n\n  _getCustomFields() {\n    const fields = Array.isArray(this.constructor._customFields)\n      ? this.constructor._customFields\n      : [];\n    return fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = this[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n  }\n\n  /* eslint-disable class-methods-use-this */\n  _getType() {\n    throw new Error('not implemented');\n  }\n  /* eslint-enable class-methods-use-this */\n\n  getPayload() {\n    return compact({\n      _lctext: this.getText(),\n      _lcattrs: this.getAttributes(),\n      ...this._getCustomFields(),\n      ...this._getType(),\n    });\n  }\n\n  toJSON() {\n    const { type, text, attributes, summary } = this;\n    return {\n      ...super._toJSON(),\n      type,\n      text,\n      attributes,\n      summary,\n    };\n  }\n\n  toFullJSON() {\n    return {\n      ...super.toFullJSON(),\n      data: this.getPayload(),\n    };\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 为给定的 message 设置 text 与 attributes 属性，返回该 message\n   * 如果子类没有提供 message，new this()\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {TypedMessage} message 子类提供的 message\n   * @return {TypedMessage}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message = new this()) {\n    message.content = json; // eslint-disable-line no-param-reassign\n    const customFields = isIE10\n      ? getStaticProperty(message.constructor, '_customFields')\n      : message.constructor._customFields;\n    let fields = Array.isArray(customFields) ? customFields : [];\n    fields = fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = json[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n    Object.assign(message, fields);\n    return super.parse(json, message);\n  }\n}\n\nexport default TypedMessage;\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-127)\n@IE10Compatible\n// jsdoc-ignore-end\n/**\n * 已撤回类型消息，当消息被撤回时，SDK 会使用该类型的消息替代原始消息\n * @extends TypedMessage\n */\nclass RecalledMessage extends TypedMessage {\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，值为 <code>[该消息已撤回]</code>\n   * @type {String}\n   * @readonly\n   */\n  // eslint-disable-next-line class-methods-use-this\n  get summary() {\n    return '[该消息已撤回]';\n  }\n}\nexport default RecalledMessage;\n","/* eslint class-methods-use-this: [\"error\", { \"exceptMethods\": [\"_addMembers\", \"_removeMembers\"] }] */\nimport EventEmitter from 'eventemitter3';\nimport values from 'lodash/values';\nimport d from 'debug';\nimport { decodeDate, getTime, internal } from '../utils';\nimport { applyDecorators } from '../plugin';\nimport {\n  GenericCommand,\n  ConvCommand,\n  DirectCommand,\n  LogsCommand,\n  PatchCommand,\n  PatchItem,\n  CommandType,\n  OpType,\n} from '../../proto/message';\nimport * as Event from '../events/im';\nimport { createError } from '../error';\nimport Message, { MessageStatus } from '../messages/message';\nimport RecalledMessage from '../messages/recalled-message';\n\nconst debug = d('LC:Conversation');\n\nconst serializeMessage = message => {\n  const content = message.getPayload();\n  let msg;\n  let binaryMsg;\n  if (content instanceof ArrayBuffer) {\n    binaryMsg = content;\n  } else if (typeof content !== 'string') {\n    msg = JSON.stringify(content);\n  } else {\n    msg = content;\n  }\n  return { msg, binaryMsg };\n};\n\nconst { NEW, OLD } = LogsCommand.QueryDirection;\n\n/**\n * 历史消息查询方向枚举\n * @enum {Number}\n * @since 4.0.0\n * @memberof module:leancloud-realtime\n */\nconst MessageQueryDirection = {\n  /** 从后向前 */\n  NEW_TO_OLD: OLD,\n  /** 从前向后 */\n  OLD_TO_NEW: NEW,\n};\nObject.freeze(MessageQueryDirection);\n\nexport { MessageQueryDirection };\n\nexport default class ConversationBase extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @private\n   * @abstract\n   */\n  constructor(\n    {\n      id,\n      lastMessageAt,\n      lastMessage,\n      lastDeliveredAt,\n      lastReadAt,\n      unreadMessagesCount = 0,\n      members = [],\n      mentioned = false,\n      ...properties\n    },\n    client\n  ) {\n    super();\n    Object.assign(this, {\n      /**\n       * 对话 id，对应 _Conversation 表中的 objectId\n       * @memberof ConversationBase#\n       * @type {String}\n       */\n      id,\n      /**\n       * 最后一条消息时间\n       * @memberof ConversationBase#\n       * @type {?Date}\n       */\n      lastMessageAt,\n      /**\n       * 最后一条消息\n       * @memberof ConversationBase#\n       * @type {?Message}\n       */\n      lastMessage,\n      /**\n       * 参与该对话的用户列表\n       * @memberof ConversationBase#\n       * @type {String[]}\n       */\n      members,\n      // other properties provided by subclasses\n      ...properties,\n    });\n    this.members = Array.from(new Set(this.members));\n    Object.assign(internal(this), {\n      messagesWaitingForReceipt: {},\n      lastDeliveredAt,\n      lastReadAt,\n      unreadMessagesCount,\n      mentioned,\n    });\n    this._client = client;\n    if (debug.enabled) {\n      values(Event).forEach(event =>\n        this.on(event, (...payload) =>\n          this._debug(`${event} event emitted. %o`, payload)\n        )\n      );\n    }\n    // onConversationCreate hook\n    applyDecorators(this._client._plugins.onConversationCreate, this);\n  }\n\n  /**\n   * 当前用户是否在该对话的未读消息中被提及\n   * @type {Boolean}\n   * @since 4.0.0\n   */\n  get unreadMessagesMentioned() {\n    return internal(this).unreadMessagesMentioned;\n  }\n\n  _setUnreadMessagesMentioned(value) {\n    internal(this).unreadMessagesMentioned = Boolean(value);\n  }\n\n  set unreadMessagesCount(value) {\n    if (value !== this.unreadMessagesCount) {\n      internal(this).unreadMessagesCount = value;\n      this._client.emit(Event.UNREAD_MESSAGES_COUNT_UPDATE, [this]);\n    }\n  }\n\n  /**\n   * 当前用户在该对话的未读消息数\n   * @type {Number}\n   */\n  get unreadMessagesCount() {\n    return internal(this).unreadMessagesCount;\n  }\n\n  set lastMessageAt(value) {\n    const time = decodeDate(value);\n    if (time <= this._lastMessageAt) return;\n    this._lastMessageAt = time;\n  }\n\n  get lastMessageAt() {\n    return this._lastMessageAt;\n  }\n\n  /**\n   * 最后消息送达时间，常用来实现消息的「已送达」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastDeliveredAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastDeliveredAt;\n  }\n\n  _setLastDeliveredAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastDeliveredAt)) {\n      internal(this).lastDeliveredAt = date;\n      /**\n       * 最后消息送达时间更新\n       * @event ConversationBase#LAST_DELIVERED_AT_UPDATE\n       * @since 3.4.0\n       */\n      this.emit(Event.LAST_DELIVERED_AT_UPDATE);\n    }\n  }\n\n  /**\n   * 最后消息被阅读时间，常用来实现发送消息的「已读」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastReadAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastReadAt;\n  }\n\n  _setLastReadAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastReadAt)) {\n      internal(this).lastReadAt = date;\n      /**\n       * 最后消息被阅读时间更新\n       * @event ConversationBase#LAST_READ_AT_UPDATE\n       * @since 3.4.0\n       */\n      this.emit(Event.LAST_READ_AT_UPDATE);\n    }\n  }\n\n  /**\n   * 返回 JSON 格式的对话，与 toJSON 不同的是，该对象包含了完整的信息，可以通过 {@link IMClient#parseConversation} 反序列化。\n   * @return {Object} 返回值是一个 plain Object\n   * @since 4.0.0\n   */\n  toFullJSON() {\n    const {\n      id,\n      members,\n      lastMessageAt,\n      lastDeliveredAt,\n      lastReadAt,\n      lastMessage,\n      unreadMessagesCount,\n    } = this;\n    return {\n      id,\n      members,\n      lastMessageAt: getTime(lastMessageAt),\n      lastDeliveredAt: getTime(lastDeliveredAt),\n      lastReadAt: getTime(lastReadAt),\n      lastMessage: lastMessage ? lastMessage.toFullJSON() : undefined,\n      unreadMessagesCount,\n    };\n  }\n\n  /**\n   * 返回 JSON 格式的对话\n   * @return {Object} 返回值是一个 plain Object\n   * @since 4.0.0\n   */\n  toJSON() {\n    const {\n      id,\n      members,\n      lastMessageAt,\n      lastDeliveredAt,\n      lastReadAt,\n      lastMessage,\n      unreadMessagesCount,\n      unreadMessagesMentioned,\n    } = this;\n    return {\n      id,\n      members,\n      lastMessageAt,\n      lastDeliveredAt,\n      lastReadAt,\n      lastMessage: lastMessage ? lastMessage.toJSON() : undefined,\n      unreadMessagesCount,\n      unreadMessagesMentioned,\n    };\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  _send(command, ...args) {\n    /* eslint-disable no-param-reassign */\n    if (command.cmd === null) {\n      command.cmd = 'conv';\n    }\n    if (command.cmd === 'conv' && command.convMessage === null) {\n      command.convMessage = new ConvCommand();\n    }\n    if (command.convMessage && command.convMessage.cid === null) {\n      command.convMessage.cid = this.id;\n    }\n    /* eslint-enable no-param-reassign */\n    return this._client._send(command, ...args);\n  }\n\n  /**\n   * 发送消息\n   * @param  {Message} message 消息，Message 及其子类的实例\n   * @param {Object} [options] since v3.3.0，发送选项\n   * @param {Boolean} [options.transient] since v3.3.1，是否作为暂态消息发送\n   * @param {Boolean} [options.receipt] 是否需要回执，仅在普通对话中有效\n   * @param {Boolean} [options.will] since v3.4.0，是否指定该消息作为「掉线消息」发送，\n   * 「掉线消息」会延迟到当前用户掉线后发送，常用来实现「下线通知」功能\n   * @param {MessagePriority} [options.priority] 消息优先级，仅在暂态对话中有效，\n   * see: {@link module:leancloud-realtime.MessagePriority MessagePriority}\n   * @param {Object} [options.pushData] 消息对应的离线推送内容，如果消息接收方不在线，会推送指定的内容。其结构说明参见: {@link https://url.leanapp.cn/pushData 推送消息内容}\n   * @return {Promise.<Message>} 发送的消息\n   */\n  async send(message, options) {\n    this._debug(message, 'send');\n    if (!(message instanceof Message)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    const { transient, receipt, priority, pushData, will } = {\n      // support Message static property: sendOptions\n      ...message.constructor.sendOptions,\n      // support Message static property: getSendOptions\n      ...(typeof message.constructor.getSendOptions === 'function'\n        ? message.constructor.getSendOptions(message)\n        : {}),\n      ...options,\n    };\n    if (receipt) {\n      if (this.transient) {\n        console.warn(\n          'receipt option is ignored as the conversation is transient.'\n        );\n      } else if (transient) {\n        console.warn(\n          'receipt option is ignored as the message is sent transiently.'\n        );\n      } else if (this.members.length > 2) {\n        console.warn(\n          'receipt option is recommended to be used in one-on-one conversation.'\n        ); // eslint-disable-line max-len\n      }\n    }\n    if (priority && !this.transient) {\n      console.warn(\n        'priority option is ignored as the conversation is not transient.'\n      );\n    }\n    Object.assign(message, {\n      cid: this.id,\n      from: this._client.id,\n    });\n    message._setStatus(MessageStatus.SENDING);\n    const { msg, binaryMsg } = serializeMessage(message);\n    const command = new GenericCommand({\n      cmd: 'direct',\n      directMessage: new DirectCommand({\n        msg,\n        binaryMsg,\n        cid: this.id,\n        r: receipt,\n        transient,\n        dt: message.id,\n        pushData: JSON.stringify(pushData),\n        will,\n        mentionPids: message.mentionList,\n        mentionAll: message.mentionedAll,\n      }),\n      priority,\n    });\n    try {\n      const resCommand = await this._send(command);\n      const {\n        ackMessage: { uid, t, code, reason, appCode },\n      } = resCommand;\n      if (code !== null) {\n        throw createError({\n          code,\n          reason,\n          appCode,\n        });\n      }\n      Object.assign(message, {\n        id: uid,\n        timestamp: t,\n      });\n      if (!transient) {\n        this.lastMessage = message;\n        this.lastMessageAt = message.timestamp;\n      }\n      message._setStatus(MessageStatus.SENT);\n      if (receipt) {\n        internal(this).messagesWaitingForReceipt[message.id] = message;\n      }\n      return message;\n    } catch (error) {\n      message._setStatus(MessageStatus.FAILED);\n      throw error;\n    }\n  }\n\n  async _update(message, newMessage, recall) {\n    this._debug('patch %O %O %O', message, newMessage, recall);\n    if (message instanceof Message) {\n      if (message.from !== this._client.id) {\n        throw new Error('Updating message from others is not allowed');\n      }\n      if (\n        message.status !== MessageStatus.SENT &&\n        message.status !== MessageStatus.DELIVERED\n      ) {\n        throw new Error('Message is not sent');\n      }\n    } else if (!(message.id && message.timestamp)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    let msg;\n    let binaryMsg;\n    if (!recall) {\n      const content = serializeMessage(newMessage);\n      ({ msg, binaryMsg } = content);\n    }\n    await this._send(\n      new GenericCommand({\n        cmd: CommandType.patch,\n        op: OpType.modify,\n        patchMessage: new PatchCommand({\n          patches: [\n            new PatchItem({\n              cid: this.id,\n              mid: message.id,\n              timestamp: Number(message.timestamp),\n              recall,\n              data: msg,\n              binaryMsg,\n              mentionPids: newMessage.mentionList,\n              mentionAll: newMessage.mentionedAll,\n            }),\n          ],\n          lastPatchTime: this._client._lastPatchTime,\n        }),\n      })\n    );\n    const { id, cid, timestamp, from, _status } = message;\n    Object.assign(newMessage, {\n      id,\n      cid,\n      timestamp,\n      from,\n      _status,\n    });\n    if (this.lastMessage && this.lastMessage.id === newMessage.id) {\n      this.lastMessage = newMessage;\n    }\n    return newMessage;\n  }\n\n  /**\n   * 获取对话人数，或暂态对话的在线人数\n   * @return {Promise.<Number>}\n   */\n  async count() {\n    this._debug('count');\n    const resCommand = await this._send(\n      new GenericCommand({\n        op: 'count',\n      })\n    );\n    return resCommand.convMessage.count;\n  }\n\n  /**\n   * 应用增加成员的操作，产生副作用\n   * @param {string[]} members\n   * @abstract\n   * @private\n   */\n  _addMembers() {}\n\n  /**\n   * 应用减少成员的操作，产生副作用\n   * @param {string[]} members\n   * @abstract\n   * @private\n   */\n  _removeMembers() {}\n\n  /**\n   * 修改已发送的消息\n   * @param {AVMessage} message 要修改的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   * @param {AVMessage} newMessage 新的消息\n   * @return {Promise.<AVMessage>} 更新后的消息\n   */\n  async update(message, newMessage) {\n    if (!(newMessage instanceof Message)) {\n      throw new TypeError(`${newMessage} is not a Message`);\n    }\n    return this._update(message, newMessage, false);\n  }\n\n  /**\n   * 撤回已发送的消息\n   * @param {AVMessage} message 要撤回的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   * @return {Promise.<RecalledMessage>} 一条已撤回的消息\n   */\n  async recall(message) {\n    return this._update(message, new RecalledMessage(), true);\n  }\n\n  /**\n   * 查询消息记录\n   * 如果仅需实现消息向前记录翻页查询需求，建议使用 {@link Conversation#createMessagesIterator}。\n   * 不论何种方向，获得的消息都是按照时间升序排列的。\n   * startClosed 与 endClosed 用于指定查询区间的开闭。\n   *\n   * @param  {Object} [options]\n   * @param  {Number} [options.limit] 限制查询结果的数量，目前服务端默认为 20\n   * @param  {Number}   [options.type] 指定查询的富媒体消息类型，不指定则查询所有消息。\n   * @param  {MessageQueryDirection} [options.direction] 查询的方向。\n   * 在不指定的情况下如果 startTime 大于 endTime，则为从新到旧查询，可以实现加载聊天记录等场景。\n   * 如果 startTime 小于 endTime，则为从旧到新查询，可以实现弹幕等场景。\n   * @param  {Date}   [options.startTime] 从该时间开始查询，不传则从当前时间开始查询\n   * @param  {String} [options.startMessageId] 从该消息之前开始查询，需要与 startTime 同时使用，为防止某时刻有重复消息\n   * @param  {Boolean}[options.startClosed] 指定查询范围是否包括开始的时间点，默认不包括\n   * @param  {Date}   [options.endTime] 查询到该时间为止，不传则查询最早消息为止\n   * @param  {String} [options.endMessageId] 查询到该消息为止，需要与 endTime 同时使用，为防止某时刻有重复消息\n   * @param  {Boolean}[options.endClosed] 指定查询范围是否包括结束的时间点，默认不包括\n   *\n   * @param  {Date}   [options.beforeTime] DEPRECATED: 使用 startTime 代替。限制查询结果为小于该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] DEPRECATED: 使用 startMessageId 代替。\n   * 限制查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Date}   [options.afterTime] DEPRECATED: 使用 endTime 代替。限制查询结果为大于该时间之前的消息\n   * @param  {String} [options.afterMessageId] DEPRECATED: 使用 endMessageId 代替。\n   * 限制查询结果为该消息之后的消息，需要与 afterTime 同时使用，为防止某时刻有重复消息\n   * @return {Promise.<Message[]>} 消息列表\n   */\n  async queryMessages(options = {}) {\n    this._debug('query messages %O', options);\n    const {\n      beforeTime,\n      beforeMessageId,\n      afterTime,\n      afterMessageId,\n      limit,\n      direction,\n      type,\n      startTime,\n      startMessageId,\n      startClosed,\n      endTime,\n      endMessageId,\n      endClosed,\n    } = options;\n    if (beforeMessageId || beforeTime || afterMessageId || afterTime) {\n      console.warn(\n        'DEPRECATION: queryMessages options beforeTime, beforeMessageId, afterTime and afterMessageId are deprecated in favor of startTime, startMessageId, endTime and endMessageId.'\n      );\n      return this.queryMessages({\n        startTime: beforeTime,\n        startMessageId: beforeMessageId,\n        endTime: afterTime,\n        endMessageId: afterMessageId,\n        limit,\n      });\n    }\n    if (startMessageId && !startTime) {\n      throw new Error(\n        'query option startMessageId must be used with option startTime'\n      );\n    }\n    if (endMessageId && !endTime) {\n      throw new Error(\n        'query option endMessageId must be used with option endTime'\n      );\n    }\n    const conditions = {\n      t: startTime,\n      mid: startMessageId,\n      tIncluded: startClosed,\n      tt: endTime,\n      tmid: endMessageId,\n      ttIncluded: endClosed,\n      l: limit,\n      lctype: type,\n    };\n    if (conditions.t instanceof Date) {\n      conditions.t = conditions.t.getTime();\n    }\n    if (conditions.tt instanceof Date) {\n      conditions.tt = conditions.tt.getTime();\n    }\n    if (direction !== undefined) {\n      conditions.direction = direction;\n    } else if (conditions.tt > conditions.t) {\n      conditions.direction = MessageQueryDirection.OLD_TO_NEW;\n    }\n    const resCommand = await this._send(\n      new GenericCommand({\n        cmd: 'logs',\n        logsMessage: new LogsCommand(\n          Object.assign(conditions, {\n            cid: this.id,\n          })\n        ),\n      })\n    );\n    return Promise.all(\n      resCommand.logsMessage.logs.map(\n        async ({\n          msgId,\n          timestamp,\n          patchTimestamp,\n          from,\n          ackAt,\n          readAt,\n          data,\n          mentionAll,\n          mentionPids,\n          bin,\n        }) => {\n          const messageData = {\n            data,\n            bin,\n            id: msgId,\n            cid: this.id,\n            timestamp,\n            from,\n            deliveredAt: ackAt,\n            updatedAt: patchTimestamp,\n            mentionList: mentionPids,\n            mentionedAll: mentionAll,\n          };\n          const message = await this._client.parseMessage(messageData);\n          let status = MessageStatus.SENT;\n          if (this.members.length === 2) {\n            if (ackAt) status = MessageStatus.DELIVERED;\n            if (ackAt) this._setLastDeliveredAt(ackAt);\n            if (readAt) this._setLastReadAt(readAt);\n          }\n          message._setStatus(status);\n          return message;\n        }\n      )\n    );\n  }\n\n  /**\n   * 获取消息翻页迭代器\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制起始查询结果为小于该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制起始查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制每页查询结果的数量，目前服务端默认为 20\n   * @return {AsyncIterater.<Promise.<IteratorResult<Message[]>>>} [AsyncIterator]{@link https://github.com/tc39/proposal-async-iteration}，调用其 next 方法返回获取下一页消息的 Promise\n   * @example\n   * var messageIterator = conversation.createMessagesIterator({ limit: 10 });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message1, ..., message10],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message11, ..., message20],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // No more messages\n   *   // result: { value: [], done: true }\n   * });\n   */\n  createMessagesIterator({ beforeTime, beforeMessageId, limit } = {}) {\n    let promise;\n    return {\n      next: () => {\n        if (promise === undefined) {\n          // first call\n          promise = this.queryMessages({\n            limit,\n            startTime: beforeTime,\n            startMessageId: beforeMessageId,\n          });\n        } else {\n          promise = promise.then(prevMessages => {\n            if (prevMessages.length === 0 || prevMessages.length < limit) {\n              // no more messages\n              return [];\n            }\n            return this.queryMessages({\n              startTime: prevMessages[0].timestamp,\n              startMessageId: prevMessages[0].id,\n              limit,\n            });\n          });\n        }\n        return promise.then(value => ({\n          value: Array.from(value),\n          done: value.length === 0 || value.length < limit,\n        }));\n      },\n    };\n  }\n\n  /**\n   * 将该会话标记为已读\n   * @return {Promise.<this>} self\n   */\n  async read() {\n    this.unreadMessagesCount = 0;\n    this._setUnreadMessagesMentioned(false);\n    // 跳过暂态会话\n    if (this.transient) return this;\n    const client = this._client;\n    if (!internal(client).readConversationsBuffer) {\n      internal(client).readConversationsBuffer = new Set();\n    }\n    internal(client).readConversationsBuffer.add(this);\n    client._doSendRead();\n    return this;\n  }\n\n  _handleReceipt({ messageId, timestamp, read }) {\n    if (read) {\n      this._setLastReadAt(timestamp);\n    } else {\n      this._setLastDeliveredAt(timestamp);\n    }\n    const { messagesWaitingForReceipt } = internal(this);\n    const message = messagesWaitingForReceipt[messageId];\n    if (!message) return;\n    message._setStatus(MessageStatus.DELIVERED);\n    message.deliveredAt = timestamp;\n    delete messagesWaitingForReceipt[messageId];\n  }\n\n  /**\n   * 更新对话的最新回执时间戳（lastDeliveredAt、lastReadAt）\n   * @since 3.4.0\n   * @return {Promise.<this>} this\n   */\n  async fetchReceiptTimestamps() {\n    // 暂态/系统会话不支持回执\n    if (this.transient || this.system) return this;\n    const {\n      convMessage: { maxReadTimestamp, maxAckTimestamp },\n    } = await this._send(\n      new GenericCommand({\n        op: 'max_read',\n      })\n    );\n    this._setLastDeliveredAt(maxAckTimestamp);\n    this._setLastReadAt(maxReadTimestamp);\n    return this;\n  }\n\n  _fetchAllReceiptTimestamps() {\n    // 暂态/系统会话不支持回执\n    if (this.transient || this.system) return this;\n    const convMessage = new ConvCommand({\n      queryAllMembers: true,\n    });\n    return this._send(\n      new GenericCommand({\n        op: 'max_read',\n        convMessage,\n      })\n    ).then(({ convMessage: { maxReadTuples } }) =>\n      maxReadTuples\n        .filter(\n          maxReadTuple =>\n            maxReadTuple.maxAckTimestamp || maxReadTuple.maxReadTimestamp\n        )\n        .map(({ pid, maxAckTimestamp, maxReadTimestamp }) => ({\n          pid,\n          lastDeliveredAt: decodeDate(maxAckTimestamp),\n          lastReadAt: decodeDate(maxReadTimestamp),\n        }))\n    );\n  }\n}\n","import d from 'debug';\nimport { tap } from './utils';\n\nconst debug = d('LC:SignatureFactoryRunner');\n\nfunction _validateSignature(signatureResult = {}) {\n  const { signature, timestamp, nonce } = signatureResult;\n  if (\n    typeof signature !== 'string' ||\n    typeof timestamp !== 'number' ||\n    typeof nonce !== 'string'\n  ) {\n    throw new Error('malformed signature');\n  }\n  return {\n    signature,\n    timestamp,\n    nonce,\n  };\n}\n\nexport default (signatureFactory, params) =>\n  Promise.resolve()\n    .then(() => {\n      debug('call signatureFactory with %O', params);\n      return signatureFactory(...params);\n    })\n    .then(\n      tap(signatureResult => debug('sign result %O', signatureResult)),\n      error => {\n        // eslint-disable-next-line no-param-reassign\n        error.message = `sign error: ${error.message}`;\n        debug(error);\n        throw error;\n      }\n    )\n    .then(_validateSignature);\n","import isEmpty from 'lodash/isEmpty';\nimport cloneDeep from 'lodash/cloneDeep';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport ConversationBase from './conversation-base';\nimport {\n  decodeDate,\n  getTime,\n  encode,\n  keyRemap,\n  union,\n  difference,\n  internal,\n  setValue,\n  ensureArray,\n} from '../utils';\nimport {\n  GenericCommand,\n  ConvCommand,\n  JsonObjectMessage,\n  BlacklistCommand,\n  OpType,\n} from '../../proto/message';\nimport runSignatureFactory from '../signature-factory-runner';\nimport { createError } from '../error';\n\n/**\n * 部分失败异常\n * @typedef OperationFailureError\n * @type {Error}\n * @property {string} message 异常信息\n * @property {string[]} clientIds 因为该原因失败的 client id 列表\n * @property {number} [code] 错误码\n * @property {string} [detail] 详细信息\n */\n\n/**\n * 部分成功的结果\n * @typedef PartiallySuccess\n * @type {Object}\n * @property {string[]} successfulClientIds 成功的 client id 列表\n * @property {OperationFailureError[]} failures 失败的异常列表\n */\n\n/**\n * 分页查询结果\n * @typedef PagedResults\n * @type {Object}\n * @property {T[]} results 查询结果\n * @property {string} [next] 存在表示还有更多结果，在下次查询中带上可实现翻页。\n */\n\nconst createPartiallySuccess = ({ allowedPids, failedPids }) => ({\n  successfulClientIds: allowedPids,\n  failures: failedPids.map(({ pids, ...error }) =>\n    Object.assign(createError(error), { clientIds: pids })\n  ),\n});\n\n/**\n * @extends ConversationBase\n * @private\n * @abstract\n */\nclass PersistentConversation extends ConversationBase {\n  constructor(\n    data,\n    {\n      creator,\n      createdAt,\n      updatedAt,\n      transient = false,\n      system = false,\n      muted = false,\n      mutedMembers = [],\n      ...attributes\n    },\n    client\n  ) {\n    super(\n      {\n        ...data,\n        /**\n         * 对话创建者\n         * @memberof PersistentConversation#\n         * @type {String}\n         */\n        creator,\n        /**\n         * 对话创建时间\n         * @memberof PersistentConversation#\n         * @type {Date}\n         */\n        createdAt,\n        /**\n         * 对话更新时间\n         * @memberof PersistentConversation#\n         * @type {Date}\n         */\n        updatedAt,\n        /**\n         * 对该对话设置了静音的用户列表\n         * @memberof PersistentConversation#\n         * @type {?String[]}\n         */\n        mutedMembers,\n        /**\n         * 暂态对话标记\n         * @memberof PersistentConversation#\n         * @type {Boolean}\n         */\n        transient,\n        /**\n         * 系统对话标记\n         * @memberof PersistentConversation#\n         * @type {Boolean}\n         * @since 3.3.0\n         */\n        system,\n        /**\n         * 当前用户静音该对话标记\n         * @memberof PersistentConversation#\n         * @type {Boolean}\n         */\n        muted,\n        _attributes: attributes,\n      },\n      client\n    );\n    this._reset();\n  }\n\n  set createdAt(value) {\n    this._createdAt = decodeDate(value);\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  /**\n   * 对话名字，对应 _Conversation 表中的 name\n   * @type {String}\n   */\n  get name() {\n    return this.get('name');\n  }\n\n  set name(value) {\n    this.set('name', value);\n  }\n\n  /**\n   * 获取对话的自定义属性\n   * @since 3.2.0\n   * @param  {String} key key 属性的键名，'x' 对应 Conversation 表中的 x 列\n   * @return {Any} 属性的值\n   */\n  get(key) {\n    return get(internal(this).currentAttributes, key);\n  }\n\n  /**\n   * 设置对话的自定义属性\n   * @since 3.2.0\n   * @param {String} key 属性的键名，'x' 对应 Conversation 表中的 x 列，支持使用 'x.y.z' 来修改对象的部分字段。\n   * @param {Any} value 属性的值\n   * @return {this} self\n   * @example\n   *\n   * // 设置对话的 color 属性\n   * conversation.set('color', {\n   *   text: '#000',\n   *   background: '#DDD',\n   * });\n   * // 设置对话的 color.text 属性\n   * conversation.set('color.text', '#333');\n   */\n  set(key, value) {\n    this._debug(`set [${key}]: ${value}`);\n    const { pendingAttributes } = internal(this);\n    const pendingKeys = Object.keys(pendingAttributes);\n    // suppose pendingAttributes = { 'a.b': {} }\n    // set 'a' or 'a.b': delete 'a.b'\n    const re = new RegExp(`^${key}`);\n    const childKeys = pendingKeys.filter(re.test.bind(re));\n    childKeys.forEach(k => {\n      delete pendingAttributes[k];\n    });\n    if (childKeys.length) {\n      pendingAttributes[key] = value;\n    } else {\n      // set 'a.c': nothing to do\n      // set 'a.b.c.d': assign c: { d: {} } to 'a.b'\n      const parentKey = find(pendingKeys, k => key.indexOf(k) === 0); // 'a.b'\n      if (parentKey) {\n        setValue(\n          pendingAttributes[parentKey],\n          key.slice(parentKey.length + 1),\n          value\n        );\n      } else {\n        pendingAttributes[key] = value;\n      }\n    }\n    this._buildCurrentAttributes();\n    return this;\n  }\n\n  _buildCurrentAttributes() {\n    const { pendingAttributes } = internal(this);\n    internal(this).currentAttributes = Object.keys(pendingAttributes).reduce(\n      (target, k) => setValue(target, k, pendingAttributes[k]),\n      cloneDeep(this._attributes)\n    );\n  }\n\n  _updateServerAttributes(attributes) {\n    Object.keys(attributes).forEach(key =>\n      setValue(this._attributes, key, attributes[key])\n    );\n    this._buildCurrentAttributes();\n  }\n\n  _reset() {\n    Object.assign(internal(this), {\n      pendingAttributes: {},\n      currentAttributes: this._attributes,\n    });\n  }\n\n  /**\n   * 保存当前对话的属性至服务器\n   * @return {Promise.<this>} self\n   */\n  async save() {\n    this._debug('save');\n    const attr = internal(this).pendingAttributes;\n    if (isEmpty(attr)) {\n      this._debug('nothing touched, resolve with self');\n      return this;\n    }\n    this._debug('attr: %O', attr);\n    const convMessage = new ConvCommand({\n      attr: new JsonObjectMessage({\n        data: JSON.stringify(encode(attr)),\n      }),\n    });\n    const resCommand = await this._send(\n      new GenericCommand({\n        op: 'update',\n        convMessage,\n      })\n    );\n    this.updatedAt = resCommand.convMessage.udate;\n    this._attributes = internal(this).currentAttributes;\n    internal(this).pendingAttributes = {};\n    return this;\n  }\n\n  /**\n   * 从服务器更新对话的属性\n   * @return {Promise.<this>} self\n   */\n  async fetch() {\n    const query = this._client.getQuery().equalTo('objectId', this.id);\n    await query.find();\n    return this;\n  }\n\n  /**\n   * 静音，客户端拒绝收到服务器端的离线推送通知\n   * @return {Promise.<this>} self\n   */\n  async mute() {\n    this._debug('mute');\n    await this._send(\n      new GenericCommand({\n        op: 'mute',\n      })\n    );\n    if (!this.transient) {\n      this.muted = true;\n      this.mutedMembers = union(this.mutedMembers, [this._client.id]);\n    }\n    return this;\n  }\n\n  /**\n   * 取消静音\n   * @return {Promise.<this>} self\n   */\n  async unmute() {\n    this._debug('unmute');\n    await this._send(\n      new GenericCommand({\n        op: 'unmute',\n      })\n    );\n    if (!this.transient) {\n      this.muted = false;\n      this.mutedMembers = difference(this.mutedMembers, [this._client.id]);\n    }\n    return this;\n  }\n\n  async _appendConversationSignature(command, action, clientIds) {\n    if (this._client.options.conversationSignatureFactory) {\n      const params = [this.id, this._client.id, clientIds.sort(), action];\n      const signatureResult = await runSignatureFactory(\n        this._client.options.conversationSignatureFactory,\n        params\n      );\n      Object.assign(\n        command.convMessage,\n        keyRemap(\n          {\n            signature: 's',\n            timestamp: 't',\n            nonce: 'n',\n          },\n          signatureResult\n        )\n      );\n    }\n  }\n\n  async _appendBlacklistSignature(command, action, clientIds) {\n    if (this._client.options.blacklistSignatureFactory) {\n      const params = [this.id, this._client.id, clientIds.sort(), action];\n      const signatureResult = await runSignatureFactory(\n        this._client.options.blacklistSignatureFactory,\n        params\n      );\n      Object.assign(\n        command.blacklistMessage,\n        keyRemap(\n          {\n            signature: 's',\n            timestamp: 't',\n            nonce: 'n',\n          },\n          signatureResult\n        )\n      );\n    }\n  }\n\n  /**\n   * 增加成员\n   * @param {String|String[]} clientIds 新增成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async add(clientIds) {\n    this._debug('add', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const command = new GenericCommand({\n      op: 'add',\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    await this._appendConversationSignature(command, 'invite', clientIds);\n    const {\n      convMessage,\n      convMessage: { allowedPids },\n    } = await this._send(command);\n    this._addMembers(allowedPids);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * 剔除成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async remove(clientIds) {\n    this._debug('remove', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const command = new GenericCommand({\n      op: 'remove',\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    await this._appendConversationSignature(command, 'kick', clientIds);\n    const {\n      convMessage,\n      convMessage: { allowedPids },\n    } = await this._send(command);\n    this._removeMembers(allowedPids);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * （当前用户）加入该对话\n   * @return {Promise.<this>} self\n   */\n  async join() {\n    this._debug('join');\n    return this.add(this._client.id).then(({ failures }) => {\n      if (failures[0]) throw failures[0];\n      return this;\n    });\n  }\n\n  /**\n   * （当前用户）退出该对话\n   * @return {Promise.<this>} self\n   */\n  async quit() {\n    this._debug('quit');\n    return this.remove(this._client.id).then(({ failures }) => {\n      if (failures[0]) throw failures[0];\n      return this;\n    });\n  }\n\n  /**\n   * 在该对话中禁言成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async muteMembers(clientIds) {\n    this._debug('mute', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      op: OpType.add_shutup,\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    const { convMessage } = await this._send(command);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * 在该对话中解除成员禁言\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async unmuteMembers(clientIds) {\n    this._debug('unmute', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      op: OpType.remove_shutup,\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    const { convMessage } = await this._send(command);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * 查询该对话禁言成员列表\n   * @param {Object} [options]\n   * @param {Number} [options.limit] 返回的成员数量，服务器默认值 10\n   * @param {String} [options.next] 从指定 next 开始查询，与 limit 一起使用可以完成翻页。\n   * @return {PagedResults.<string>} 查询结果。其中的 cureser 存在表示还有更多结果。\n   */\n  async queryMutedMembers({ limit, next } = {}) {\n    this._debug('query muted: limit %O, next: %O', limit, next);\n    const command = new GenericCommand({\n      op: OpType.query_shutup,\n      convMessage: new ConvCommand({\n        limit,\n        next,\n      }),\n    });\n    const {\n      convMessage: { m, next: newNext },\n    } = await this._send(command);\n    return {\n      results: m,\n      next: newNext,\n    };\n  }\n\n  /**\n   * 将用户加入该对话黑名单\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async blockMembers(clientIds) {\n    this._debug('block', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      cmd: 'blacklist',\n      op: OpType.block,\n      blacklistMessage: new BlacklistCommand({\n        srcCid: this.id,\n        toPids: clientIds,\n      }),\n    });\n    await this._appendBlacklistSignature(\n      command,\n      'conversation-block-clients',\n      clientIds\n    );\n    const { blacklistMessage } = await this._send(command);\n    return createPartiallySuccess(blacklistMessage);\n  }\n\n  /**\n   * 将用户移出该对话黑名单\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async unblockMembers(clientIds) {\n    this._debug('unblock', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      cmd: 'blacklist',\n      op: OpType.unblock,\n      blacklistMessage: new BlacklistCommand({\n        srcCid: this.id,\n        toPids: clientIds,\n      }),\n    });\n    await this._appendBlacklistSignature(\n      command,\n      'conversation-unblock-clients',\n      clientIds\n    );\n    const { blacklistMessage } = await this._send(command);\n    return createPartiallySuccess(blacklistMessage);\n  }\n\n  /**\n   * 查询该对话黑名单\n   * @param {Object} [options]\n   * @param {Number} [options.limit] 返回的成员数量，服务器默认值 10\n   * @param {String} [options.next] 从指定 next 开始查询，与 limit 一起使用可以完成翻页\n   * @return {PagedResults.<string>} 查询结果。其中的 cureser 存在表示还有更多结果。\n   */\n  async queryBlockedMembers({ limit, next } = {}) {\n    this._debug('query blocked: limit %O, next: %O', limit, next);\n    const command = new GenericCommand({\n      cmd: 'blacklist',\n      op: OpType.query,\n      blacklistMessage: new BlacklistCommand({\n        srcCid: this.id,\n        limit,\n        next,\n      }),\n    });\n    const {\n      blacklistMessage: { blockedPids, next: newNext },\n    } = await this._send(command);\n    return {\n      results: blockedPids,\n      next: newNext,\n    };\n  }\n\n  toFullJSON() {\n    const {\n      creator,\n      system,\n      transient,\n      createdAt,\n      updatedAt,\n      _attributes,\n    } = this;\n    return {\n      ...super.toFullJSON(),\n      creator,\n      system,\n      transient,\n      createdAt: getTime(createdAt),\n      updatedAt: getTime(updatedAt),\n      ..._attributes,\n    };\n  }\n\n  toJSON() {\n    const {\n      creator,\n      system,\n      transient,\n      muted,\n      mutedMembers,\n      createdAt,\n      updatedAt,\n      _attributes,\n    } = this;\n    return {\n      ...super.toJSON(),\n      creator,\n      system,\n      transient,\n      muted,\n      mutedMembers,\n      createdAt,\n      updatedAt,\n      ..._attributes,\n    };\n  }\n}\n\nexport default PersistentConversation;\n","import { internal } from './utils';\n\n/**\n * 对话成员角色枚举\n * @enum {String}\n * @since 4.0.0\n * @memberof module:leancloud-realtime\n */\nconst ConversationMemberRole = {\n  /** 所有者 */\n  OWNER: 'Owner',\n  /** 管理员 */\n  MANAGER: 'Manager',\n  /** 成员 */\n  MEMBER: 'Member',\n};\nObject.freeze(ConversationMemberRole);\nexport { ConversationMemberRole };\n\nexport default class ConversationMemberInfo {\n  /**\n   * 对话成员属性，保存了成员与某个对话相关的属性，对应 _ConversationMemberInfo 表\n   * @since 4.0.0\n   */\n  constructor({ conversation, memberId, role }) {\n    if (!conversation) throw new Error('conversation requried');\n    if (!memberId) throw new Error('memberId requried');\n    Object.assign(internal(this), {\n      conversation,\n      memberId,\n      role,\n    });\n  }\n\n  /**\n   * 对话 Id\n   * @type {String}\n   * @readonly\n   */\n  get conversationId() {\n    return internal(this).conversation.id;\n  }\n\n  /**\n   * 成员 Id\n   * @type {String}\n   * @readonly\n   */\n  get memberId() {\n    return internal(this).memberId;\n  }\n\n  /**\n   * 角色\n   * @type {module:leancloud-realtime.ConversationMemberRole | String}\n   * @readonly\n   */\n  get role() {\n    if (this.isOwner) return ConversationMemberRole.OWNER;\n    return internal(this).role;\n  }\n\n  /**\n   * 是否是管理员\n   * @type {Boolean}\n   * @readonly\n   */\n  get isOwner() {\n    return this.memberId === internal(this).conversation.creator;\n  }\n\n  toJSON() {\n    const { conversationId, memberId, role, isOwner } = this;\n    return {\n      conversationId,\n      memberId,\n      role,\n      isOwner,\n    };\n  }\n}\n","import PersistentConversation from './persistent-conversation';\nimport ConversationMemberInfo, {\n  ConversationMemberRole,\n} from '../conversation-member-info';\nimport { internal, union, difference } from '../utils';\nimport {\n  GenericCommand,\n  ConvCommand,\n  ConvMemberInfo,\n  OpType,\n} from '../../proto/message';\nimport { createError, ErrorCode } from '../error';\n\n/**\n * 普通对话\n *\n * 无法直接实例化，请使用 {@link IMClient#createConversation} 创建新的普通对话。\n * @extends PersistentConversation\n * @public\n */\nclass Conversation extends PersistentConversation {\n  _addMembers(members) {\n    super._addMembers(members);\n    this.members = union(this.members, members);\n    const { memberInfoMap } = internal(this);\n    if (!memberInfoMap) return;\n    members.forEach(memberId => {\n      memberInfoMap[memberId] =\n        memberInfoMap[memberId] ||\n        new ConversationMemberInfo({\n          conversation: this,\n          memberId,\n          role: ConversationMemberRole.MEMBER,\n        });\n    });\n  }\n\n  _removeMembers(members) {\n    super._removeMembers(members);\n    this.members = difference(this.members, members);\n    const { memberInfoMap } = internal(this);\n    if (!memberInfoMap) return;\n    members.forEach(memberId => {\n      delete memberInfoMap[memberId];\n    });\n  }\n\n  async _fetchAllMemberInfo() {\n    const response = await this._client._requestWithSessionToken({\n      method: 'GET',\n      path: '/classes/_ConversationMemberInfo',\n      query: {\n        where: { cid: this.id },\n      },\n    });\n    const memberInfos = response.results.map(\n      info =>\n        new ConversationMemberInfo({\n          conversation: this,\n          memberId: info.clientId,\n          role: info.role,\n        })\n    );\n    const memberInfoMap = {};\n    memberInfos.forEach(memberInfo => {\n      memberInfoMap[memberInfo.memberId] = memberInfo;\n    });\n    this.members.forEach(memberId => {\n      memberInfoMap[memberId] =\n        memberInfoMap[memberId] ||\n        new ConversationMemberInfo({\n          conversation: this,\n          memberId,\n          role: ConversationMemberRole.MEMBER,\n        });\n    });\n    internal(this).memberInfoMap = memberInfoMap;\n    return memberInfoMap;\n  }\n\n  /**\n   * 获取所有成员的对话属性\n   * @since 4.0.0\n   * @return {Promise.<ConversationMemberInfo[]>} 所有成员的对话属性列表\n   */\n  async getAllMemberInfo({ noCache = false } = {}) {\n    let { memberInfoMap } = internal(this);\n    if (!memberInfoMap || noCache) {\n      memberInfoMap = await this._fetchAllMemberInfo();\n    }\n    return this.members.map(memberId => memberInfoMap[memberId]);\n  }\n\n  /**\n   * 获取指定成员的对话属性\n   * @since 4.0.0\n   * @param {String} memberId 成员 Id\n   * @return {Promise.<ConversationMemberInfo>} 指定成员的对话属性\n   */\n  async getMemberInfo(memberId) {\n    if (this.members.indexOf(memberId) === -1)\n      throw new Error(\n        `${memberId} is not the mumber of conversation[${this.id}]`\n      );\n    const { memberInfoMap } = internal(this);\n    if (!(memberInfoMap && memberInfoMap[memberId]))\n      await this.getAllMemberInfo();\n    return internal(this).memberInfoMap[memberId];\n  }\n\n  /**\n   * 更新指定用户的角色\n   * @since 4.0.0\n   * @param {String} memberId 成员 Id\n   * @param {module:leancloud-realtime.ConversationMemberRole | String} role 角色\n   * @return {Promise.<this>} self\n   */\n  async updateMemberRole(memberId, role) {\n    this._debug('update member role');\n    if (role === ConversationMemberRole.OWNER)\n      throw createError({\n        code: ErrorCode.OWNER_PROMOTION_NOT_ALLOWED,\n      });\n    await this._send(\n      new GenericCommand({\n        op: OpType.member_info_update,\n        convMessage: new ConvCommand({\n          targetClientId: memberId,\n          info: new ConvMemberInfo({\n            pid: memberId,\n            role,\n          }),\n        }),\n      })\n    );\n    const { memberInfos } = internal(this);\n    if (memberInfos && memberInfos[memberId]) {\n      internal(memberInfos[memberId]).role = role;\n    }\n    return this;\n  }\n}\n\nexport default Conversation;\n","import PersistentConversation from './persistent-conversation';\n\n/**\n * 聊天室。\n *\n * 无法直接实例化，请使用 {@link IMClient#createChatRoom} 创建新的聊天室。\n * @since 4.0.0\n * @extends PersistentConversation\n * @public\n */\nclass ChatRoom extends PersistentConversation {}\n\nexport default ChatRoom;\n","import PersistentConversation from './persistent-conversation';\n\n/**\n * 服务号。\n *\n * 服务号不支持在客户端创建。\n * @since 4.0.0\n * @extends PersistentConversation\n * @public\n */\nclass ServiceConversation extends PersistentConversation {\n  /**\n   * 订阅该服务号\n   * @return {Promise.<this>} self\n   */\n  async subscribe() {\n    return this.join();\n  }\n\n  /**\n   * 退订该服务号\n   * @return {Promise.<this>} self\n   */\n  async unsubscribe() {\n    return this.quit();\n  }\n}\n\nexport default ServiceConversation;\n","import ConversationBase from './conversation-base';\nimport { createError, ErrorCode } from '../error';\nimport { decodeDate, getTime } from '../utils';\n\nconst transformNotFoundError = error =>\n  error.code === ErrorCode.CONVERSATION_NOT_FOUND\n    ? createError({ code: ErrorCode.TEMPORARY_CONVERSATION_EXPIRED })\n    : error;\n\n/**\n * 临时对话\n * @since 4.0.0\n * @extends ConversationBase\n * @public\n */\nclass TemporaryConversation extends ConversationBase {\n  /**\n   * 无法直接实例化，请使用 {@link IMClient#createTemporaryConversation} 创建新的临时对话。\n   */\n  constructor(data, { expiredAt }, client) {\n    super(\n      {\n        ...data,\n        expiredAt,\n      },\n      client\n    );\n  }\n\n  /**\n   * 对话失效时间\n   * @type {Date}\n   */\n  set expiredAt(value) {\n    this._expiredAt = decodeDate(value);\n  }\n\n  get expiredAt() {\n    return this._expiredAt;\n  }\n\n  /**\n   * 对话是否已失效\n   * @type {Boolean}\n   */\n  get expired() {\n    return this.expiredAt < new Date();\n  }\n\n  async _send(...args) {\n    if (this.expired)\n      throw createError({ code: ErrorCode.TEMPORARY_CONVERSATION_EXPIRED });\n    try {\n      return await super._send(...args);\n    } catch (error) {\n      throw transformNotFoundError(error);\n    }\n  }\n\n  async send(...args) {\n    try {\n      return await super.send(...args);\n    } catch (error) {\n      throw transformNotFoundError(error);\n    }\n  }\n\n  toFullJSON() {\n    const { expiredAt } = this;\n    return {\n      ...super.toFullJSON(),\n      expiredAt: getTime(expiredAt),\n    };\n  }\n\n  toJSON() {\n    const { expiredAt, expired } = this;\n    return {\n      ...super.toJSON(),\n      expiredAt,\n      expired,\n    };\n  }\n}\n\nexport default TemporaryConversation;\n","import d from 'debug';\n\nconst debug = d('LC:ConversationQuery');\n\nexport default class ConversationQuery {\n  static _encode(value) {\n    if (value instanceof Date) {\n      return { __type: 'Date', iso: value.toJSON() };\n    }\n    if (value instanceof RegExp) {\n      return value.source;\n    }\n    return value;\n  }\n\n  static _quote(s) {\n    return `\\\\Q${s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q')}\\\\E`;\n  }\n\n  static _calculateFlag(options) {\n    return ['withLastMessagesRefreshed', 'compact'].reduce(\n      // eslint-disable-next-line no-bitwise\n      (prev, key) => (prev << 1) + Boolean(options[key]),\n      0\n    );\n  }\n\n  /**\n   * 构造一个用 AND 连接所有查询的 ConversationQuery\n   * @param {...ConversationQuery} queries\n   * @return {ConversationQuery}\n   */\n  static and(...queries) {\n    if (queries.length < 2) {\n      throw new Error('The queries must contain at least two elements');\n    }\n    if (!queries.every(q => q instanceof ConversationQuery)) {\n      throw new Error(\n        'The element of queries must be an instance of ConversationQuery'\n      );\n    }\n    const combined = new ConversationQuery(queries[0]._client);\n    combined._where.$and = queries.map(q => q._where);\n    return combined;\n  }\n\n  /**\n   * 构造一个用 OR 连接所有查询的 ConversationQuery\n   * @param  {...ConversationQuery} queries\n   * @return {ConversationQuery}\n   */\n  static or(...queries) {\n    const combined = ConversationQuery.and(...queries);\n    combined._where.$or = combined._where.$and;\n    delete combined._where.$and;\n    return combined;\n  }\n\n  /**\n   * Create a ConversationQuery\n   * @param  {IMClient} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._where = {};\n    this._extraOptions = {};\n  }\n\n  _addCondition(key, condition, value) {\n    // Check if we already have a condition\n    if (!this._where[key]) {\n      this._where[key] = {};\n    }\n    this._where[key][condition] = this.constructor._encode(value);\n    return this;\n  }\n\n  toJSON() {\n    const json = {\n      where: this._where,\n      flag: this.constructor._calculateFlag(this._extraOptions),\n    };\n    if (typeof this._skip !== 'undefined') json.skip = this._skip;\n    if (typeof this._limit !== 'undefined') json.limit = this._limit;\n    if (typeof this._order !== 'undefined') json.sort = this._order;\n    debug(json);\n    return json;\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员包含某些成员即可返回\n   * @param {string[]} peerIds - 成员 ID 列表\n   * @return {ConversationQuery} self\n   */\n  containsMembers(peerIds) {\n    return this.containsAll('m', peerIds);\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员条件满足条件的才返回\n   *\n   * @param {string[]} - 成员 ID 列表\n   * @param {Boolean} includeSelf - 是否包含自己\n   * @return {ConversationQuery} self\n   */\n  withMembers(peerIds, includeSelf) {\n    const peerIdsSet = new Set(peerIds);\n    if (includeSelf) {\n      peerIdsSet.add(this._client.id);\n    }\n    this.sizeEqualTo('m', peerIdsSet.size);\n    return this.containsMembers(Array.from(peerIdsSet));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  equalTo(key, value) {\n    this._where[key] = this.constructor._encode(value);\n    return this;\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于条件时即可返回\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThan(key, value) {\n    return this._addCondition(key, '$lt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于等于条件时即可返回\n\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$lte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThan(key, value) {\n    return this._addCondition(key, '$gt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$gte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足不等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  notEqualTo(key, value) {\n    return this._addCondition(key, '$ne', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  exists(key) {\n    return this._addCondition(key, '$exists', true);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 不存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  doesNotExist(key) {\n    return this._addCondition(key, '$exists', false);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containedIn(key, values) {\n    return this._addCondition(key, '$in', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值不包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  notContainsIn(key, values) {\n    return this._addCondition(key, '$nin', values);\n  }\n\n  /**\n   * 增加查询条件，当conversation的属性中对应的字段中的元素包含所有的值才可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containsAll(key, values) {\n    return this._addCondition(key, '$all', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含此字符串即可返回\n   *\n   * @param {string} key\n   * @param {string} subString\n   * @return {ConversationQuery} self\n   */\n  contains(key, subString) {\n    return this._addCondition(\n      key,\n      '$regex',\n      ConversationQuery._quote(subString)\n    );\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串起始即可返回\n   *\n   * @param {string} key\n   * @param {string} prefix\n   * @return {ConversationQuery} self\n   */\n  startsWith(key, prefix) {\n    return this._addCondition(\n      key,\n      '$regex',\n      `^${ConversationQuery._quote(prefix)}`\n    );\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串结束即可返回\n   *\n   * @param {string} key\n   * @param {string} suffix\n   * @return {ConversationQuery} self\n   */\n  endsWith(key, suffix) {\n    return this._addCondition(\n      key,\n      '$regex',\n      `${ConversationQuery._quote(suffix)}$`\n    );\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值满足提供的正则表达式即可返回\n   *\n   * @param {string} key\n   * @param {RegExp} regex\n   * @return {ConversationQuery} self\n   */\n  matches(key, regex) {\n    this._addCondition(key, '$regex', regex);\n    // Javascript regex options support mig as inline options but store them\n    // as properties of the object. We support mi & should migrate them to\n    // modifiers\n    let _modifiers = '';\n    if (regex.ignoreCase) {\n      _modifiers += 'i';\n    }\n    if (regex.multiline) {\n      _modifiers += 'm';\n    }\n\n    if (_modifiers && _modifiers.length) {\n      this._addCondition(key, '$options', _modifiers);\n    }\n    return this;\n  }\n\n  /**\n   * 添加查询约束条件，查找 key 类型是数组，该数组的长度匹配提供的数值\n   *\n   * @param {string} key\n   * @param {Number} length\n   * @return {ConversationQuery} self\n   */\n  sizeEqualTo(key, length) {\n    return this._addCondition(key, '$size', length);\n  }\n\n  /**\n   * 设置返回集合的大小上限\n   *\n   * @param {Number} limit - 上限\n   * @return {ConversationQuery} self\n   */\n  limit(limit) {\n    this._limit = limit;\n    return this;\n  }\n\n  /**\n   * 设置返回集合的起始位置，一般用于分页\n   *\n   * @param {Number} skip - 起始位置跳过几个对象\n   * @return {ConversationQuery} self\n   */\n  skip(skip) {\n    this._skip = skip;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  ascending(key) {\n    this._order = key;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addAscending(key) {\n    if (this._order) {\n      this._order += `,${key}`;\n    } else {\n      this._order = key;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  descending(key) {\n    this._order = `-${key}`;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addDescending(key) {\n    if (this._order) {\n      this._order += `,-${key}`;\n    } else {\n      this._order = `-${key}`;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 刷新最后一条消息\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessagesRefreshed(enabled = true) {\n    this._extraOptions.withLastMessagesRefreshed = enabled;\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 为精简模式，即不含成员列表\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  compact(enabled = true) {\n    this._extraOptions.compact = enabled;\n    return this;\n  }\n\n  /**\n   * 执行查询\n   * @return {Promise.<ConversationBase[]>}\n   */\n  async find() {\n    return this._client._executeQuery(this);\n  }\n\n  /**\n   * 返回符合条件的第一个结果\n   * @return {Promise.<ConversationBase>}\n   */\n  async first() {\n    return (await this.limit(1).find())[0];\n  }\n}\n","import d from 'debug';\nimport { Expirable } from './utils';\n\nconst debug = d('LC:SessionManager');\n\nexport default class SessionManager {\n  constructor({ refresh, onBeforeGetSessionToken } = {}) {\n    this.refresh = refresh;\n    this._onBeforeGetSessionToken = onBeforeGetSessionToken;\n    this.setSessionToken(null, 0);\n  }\n\n  setSessionToken(token, ttl) {\n    debug('set session token', token, ttl);\n    const sessionToken = new Expirable(token, ttl * 1000);\n    this._sessionToken = sessionToken;\n    delete this._pendingSessionTokenPromise;\n    return sessionToken;\n  }\n\n  async setSessionTokenAsync(promise) {\n    const currentSessionToken = this._sessionToken;\n    this._pendingSessionTokenPromise = promise.catch(error => {\n      // revert, otherwise the following getSessionToken calls\n      // will all be rejected\n      this._sessionToken = currentSessionToken;\n      throw error;\n    });\n    return this.setSessionToken(...(await this._pendingSessionTokenPromise));\n  }\n\n  async getSessionToken({ autoRefresh = true } = {}) {\n    debug('get session token');\n    if (this._onBeforeGetSessionToken) {\n      this._onBeforeGetSessionToken(this);\n    }\n    const { value, originalValue } =\n      this._sessionToken || (await this._pendingSessionTokenPromise);\n    if (value === Expirable.EXPIRED && autoRefresh && this.refresh) {\n      debug('refresh expired session token');\n      const { value: newValue } = await this.setSessionTokenAsync(\n        this.refresh(this, originalValue)\n      );\n      debug('session token', newValue);\n      return newValue;\n    }\n    debug('session token', value);\n    return value;\n  }\n\n  revoke() {\n    if (this._sessionToken) this._sessionToken.expiredAt = -1;\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { decode as decodeBase64 } from 'base64-arraybuffer';\nimport remove from 'lodash/remove';\nimport values from 'lodash/values';\nimport d from 'debug';\nimport {\n  Conversation,\n  ChatRoom,\n  ServiceConversation,\n  TemporaryConversation,\n} from './conversations';\nimport ConversationBase from './conversations/conversation-base';\nimport ConversationQuery from './conversation-query';\nimport {\n  GenericCommand,\n  SessionCommand,\n  ConvCommand,\n  AckCommand,\n  JsonObjectMessage,\n  ReadCommand,\n  ReadTuple,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport * as Event from './events/im';\nimport { ErrorCode, createError } from './error';\nimport {\n  Expirable,\n  Cache,\n  keyRemap,\n  trim,\n  internal,\n  throttle,\n  encode,\n  decode,\n  decodeDate,\n  getTime,\n} from './utils';\nimport { applyDecorators, applyDispatcher } from './plugin';\nimport SessionManager from './session-manager';\nimport runSignatureFactory from './signature-factory-runner';\nimport { MessageStatus } from './messages/message';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:IMClient');\n\nconst {\n  INVITED,\n  KICKED,\n  MEMBERS_JOINED,\n  MEMBERS_LEFT,\n  MEMBER_INFO_UPDATED,\n  BLOCKED,\n  UNBLOCKED,\n  MEMBERS_BLOCKED,\n  MEMBERS_UNBLOCKED,\n  MUTED,\n  UNMUTED,\n  MEMBERS_MUTED,\n  MEMBERS_UNMUTED,\n  MESSAGE,\n  UNREAD_MESSAGES_COUNT_UPDATE,\n  CLOSE,\n  CONFLICT,\n  UNHANDLED_MESSAGE,\n  CONVERSATION_INFO_UPDATED,\n  MESSAGE_RECALL,\n  MESSAGE_UPDATE,\n  INFO_UPDATED,\n} = Event;\n\nconst isTemporaryConversatrionId = id => /^_tmp:/.test(id);\n\n/**\n * 1 patch-msg\n * 1 temp-conv-msg\n * 0 auto-bind-deviceid-and-installation\n * 1 transient-msg-ack\n * 1 keep-notification\n * 1 partial-failed-msg\n * 0 group-chat-rcp\n * 1 omit-peer-id\n * @ignore\n */\nconst configBitmap = 0b10111011;\n\nexport default class IMClient extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link Realtime#createIMClient} 创建新的 IMClient。\n   *\n   * @extends EventEmitter\n   */\n  constructor(id, options = {}, props) {\n    if (!(id === undefined || typeof id === 'string')) {\n      throw new TypeError(`Client id [${id}] is not a String`);\n    }\n    super();\n    Object.assign(\n      this,\n      {\n        /**\n         * @var id {String} 客户端 id\n         * @memberof IMClient#\n         */\n        id,\n        options,\n      },\n      props\n    );\n\n    if (!this._messageParser) {\n      throw new Error('IMClient must be initialized with a MessageParser');\n    }\n    this._conversationCache = new Cache(`client:${this.id}`);\n    this._ackMessageBuffer = {};\n    internal(this).lastPatchTime = Date.now();\n    internal(this).lastNotificationTime = undefined;\n    internal(this)._eventemitter = new EventEmitter();\n    if (debug.enabled) {\n      values(Event).forEach(event =>\n        this.on(event, (...payload) =>\n          this._debug(`${event} event emitted. %o`, payload)\n        )\n      );\n    }\n    // onIMClientCreate hook\n    applyDecorators(this._plugins.onIMClientCreate, this);\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  async _dispatchCommand(command) {\n    this._debug(trim(command), 'received');\n    if (command.serverTs && command.notificationType === 1) {\n      internal(this).lastNotificationTime = getTime(\n        decodeDate(command.serverTs)\n      );\n    }\n    switch (command.cmd) {\n      case CommandType.conv:\n        return this._dispatchConvMessage(command);\n      case CommandType.direct:\n        return this._dispatchDirectMessage(command);\n      case CommandType.session:\n        return this._dispatchSessionMessage(command);\n      case CommandType.unread:\n        return this._dispatchUnreadMessage(command);\n      case CommandType.rcp:\n        return this._dispatchRcpMessage(command);\n      case CommandType.patch:\n        return this._dispatchPatchMessage(command);\n      default:\n        return this.emit(UNHANDLED_MESSAGE, command);\n    }\n  }\n\n  async _dispatchSessionMessage(message) {\n    const {\n      sessionMessage: { code, reason },\n    } = message;\n    switch (message.op) {\n      case OpType.closed: {\n        internal(this)._eventemitter.emit('close');\n        if (code === ErrorCode.SESSION_CONFLICT) {\n          /**\n           * 用户在其他客户端登录，当前客户端被服务端强行下线。详见文档「单点登录」章节。\n           * @event IMClient#CONFLICT\n           * @param {Object} payload\n           * @param {string} payload.reason 原因\n           */\n          return this.emit(CONFLICT, {\n            reason,\n          });\n        }\n        /**\n         * 当前客户端被服务端强行下线\n         * @event IMClient#CLOSE\n         * @param {Object} payload\n         * @param {Number} payload.code 错误码\n         * @param {String} payload.reason 原因\n         */\n        return this.emit(CLOSE, {\n          code,\n          reason,\n        });\n      }\n      default:\n        this.emit(UNHANDLED_MESSAGE, message);\n        throw new Error('Unrecognized session command');\n    }\n  }\n\n  _dispatchUnreadMessage({ unreadMessage: { convs, notifTime } }) {\n    internal(this).lastUnreadNotifTime = notifTime;\n    // ensure all converstions are cached\n    return this.getConversations(convs.map(conv => conv.cid))\n      .then(() =>\n        // update conversations data\n        Promise.all(\n          convs.map(\n            ({\n              cid,\n              unread,\n              mid,\n              timestamp: ts,\n              from,\n              data,\n              binaryMsg,\n              patchTimestamp,\n              mentioned,\n            }) => {\n              const conversation = this._conversationCache.get(cid);\n              // deleted conversation\n              if (!conversation) return null;\n              let timestamp;\n              if (ts) {\n                timestamp = decodeDate(ts);\n                conversation.lastMessageAt = timestamp; // eslint-disable-line no-param-reassign\n              }\n              return (mid\n                ? this._messageParser.parse(binaryMsg || data).then(message => {\n                    const messageProps = {\n                      id: mid,\n                      cid,\n                      timestamp,\n                      updatedAt: patchTimestamp,\n                      from,\n                    };\n                    Object.assign(message, messageProps);\n                    conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n                  })\n                : Promise.resolve()\n              ).then(() => {\n                conversation._setUnreadMessagesMentioned(mentioned);\n                const countNotUpdated =\n                  unread === internal(conversation).unreadMessagesCount;\n                if (countNotUpdated) return null; // to be filtered\n                // manipulate internal property directly to skip unreadmessagescountupdate event\n                internal(conversation).unreadMessagesCount = unread;\n                return conversation;\n              });\n              // filter conversations without unread count update\n            }\n          )\n        ).then(conversations =>\n          conversations.filter(conversation => conversation)\n        )\n      )\n      .then(conversations => {\n        if (conversations.length) {\n          /**\n           * 未读消息数目更新\n           * @event IMClient#UNREAD_MESSAGES_COUNT_UPDATE\n           * @since 3.4.0\n           * @param {Conversation[]} conversations 未读消息数目有更新的对话列表\n           */\n          this.emit(UNREAD_MESSAGES_COUNT_UPDATE, conversations);\n        }\n      });\n  }\n\n  async _dispatchRcpMessage(message) {\n    const {\n      rcpMessage,\n      rcpMessage: { read },\n    } = message;\n    const conversationId = rcpMessage.cid;\n    const messageId = rcpMessage.id;\n    const timestamp = decodeDate(rcpMessage.t);\n    const conversation = this._conversationCache.get(conversationId);\n    // conversation not cached means the client does not send the message\n    // during this session\n    if (!conversation) return;\n    conversation._handleReceipt({ messageId, timestamp, read });\n  }\n\n  _dispatchPatchMessage({ patchMessage: { patches } }) {\n    // ensure all converstions are cached\n    return this.getConversations(patches.map(patch => patch.cid)).then(() =>\n      Promise.all(\n        patches.map(\n          ({\n            cid,\n            mid,\n            timestamp,\n            recall,\n            data,\n            patchTimestamp,\n            from,\n            binaryMsg,\n            mentionAll,\n            mentionPids,\n            patchCode,\n            patchReason,\n          }) => {\n            const conversation = this._conversationCache.get(cid);\n            // deleted conversation\n            if (!conversation) return null;\n            return this._messageParser\n              .parse(binaryMsg || data)\n              .then(message => {\n                const patchTime = getTime(decodeDate(patchTimestamp));\n                const messageProps = {\n                  id: mid,\n                  cid,\n                  timestamp,\n                  updatedAt: patchTime,\n                  from,\n                  mentionList: mentionPids,\n                  mentionedAll: mentionAll,\n                };\n                Object.assign(message, messageProps);\n                message._setStatus(MessageStatus.SENT);\n                message._updateMentioned(this.id);\n                if (internal(this).lastPatchTime < patchTime) {\n                  internal(this).lastPatchTime = patchTime;\n                }\n                // update conversation lastMessage\n                if (\n                  conversation.lastMessage &&\n                  conversation.lastMessage.id === mid\n                ) {\n                  conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n                }\n                let reason;\n                if (patchCode) {\n                  reason = {\n                    code: patchCode.toNumber(),\n                    detail: patchReason,\n                  };\n                }\n                if (recall) {\n                  /**\n                   * 消息被撤回\n                   * @event IMClient#MESSAGE_RECALL\n                   * @param {AVMessage} message 被撤回的消息\n                   * @param {ConversationBase} conversation 消息所在的会话\n                   * @param {PatchReason} [reason] 撤回的原因，不存在代表是发送者主动撤回\n                   */\n                  this.emit(MESSAGE_RECALL, message, conversation, reason);\n                  /**\n                   * 消息被撤回\n                   * @event ConversationBase#MESSAGE_RECALL\n                   * @param {AVMessage} message 被撤回的消息\n                   * @param {PatchReason} [reason] 撤回的原因，不存在代表是发送者主动撤回\n                   */\n                  conversation.emit(MESSAGE_RECALL, message, reason);\n                } else {\n                  /**\n                   * 消息被修改\n                   * @event IMClient#MESSAGE_UPDATE\n                   * @param {AVMessage} message 被修改的消息\n                   * @param {ConversationBase} conversation 消息所在的会话\n                   * @param {PatchReason} [reason] 修改的原因，不存在代表是发送者主动修改\n                   */\n                  this.emit(MESSAGE_UPDATE, message, conversation, reason);\n                  /**\n                   * 消息被修改\n                   * @event ConversationBase#MESSAGE_UPDATE\n                   * @param {AVMessage} message 被修改的消息\n                   * @param {PatchReason} [reason] 修改的原因，不存在代表是发送者主动修改\n                   */\n                  conversation.emit(MESSAGE_UPDATE, message, reason);\n                }\n              });\n          }\n        )\n      )\n    );\n  }\n\n  async _dispatchConvMessage(message) {\n    const {\n      convMessage,\n      convMessage: { initBy, m, info, attr },\n    } = message;\n    const conversation = await this.getConversation(convMessage.cid);\n    switch (message.op) {\n      case OpType.joined: {\n        conversation._addMembers([this.id]);\n        const payload = {\n          invitedBy: initBy,\n        };\n        /**\n         * 当前用户被添加至某个对话\n         * @event IMClient#INVITED\n         * @param {Object} payload\n         * @param {String} payload.invitedBy 邀请者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(INVITED, payload, conversation);\n        /**\n         * 当前用户被添加至当前对话\n         * @event ConversationBase#INVITED\n         * @param {Object} payload\n         * @param {String} payload.invitedBy 该移除操作的发起者 id\n         */\n        conversation.emit(INVITED, payload);\n        return;\n      }\n      case OpType.left: {\n        conversation._removeMembers([this.id]);\n        const payload = {\n          kickedBy: initBy,\n        };\n        /**\n         * 当前用户被从某个对话中移除\n         * @event IMClient#KICKED\n         * @param {Object} payload\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(KICKED, payload, conversation);\n        /**\n         * 当前用户被从当前对话中移除\n         * @event ConversationBase#KICKED\n         * @param {Object} payload\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         */\n        conversation.emit(KICKED, payload);\n        return;\n      }\n      case OpType.members_joined: {\n        conversation._addMembers(m);\n        const payload = {\n          invitedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有用户被添加至某个对话\n         * @event IMClient#MEMBERS_JOINED\n         * @param {Object} payload\n         * @param {String[]} payload.members 被添加的用户 id 列表\n         * @param {String} payload.invitedBy 邀请者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_JOINED, payload, conversation);\n        /**\n         * 有成员被添加至当前对话\n         * @event ConversationBase#MEMBERS_JOINED\n         * @param {Object} payload\n         * @param {String[]} payload.members 被添加的成员 id 列表\n         * @param {String} payload.invitedBy 邀请者 id\n         */\n        conversation.emit(MEMBERS_JOINED, payload);\n        return;\n      }\n      case OpType.members_left: {\n        conversation._removeMembers(m);\n        const payload = {\n          kickedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被从某个对话中移除\n         * @event IMClient#MEMBERS_LEFT\n         * @param {Object} payload\n         * @param {String[]} payload.members 被移除的成员 id 列表\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_LEFT, payload, conversation);\n        /**\n         * 有成员被从当前对话中移除\n         * @event ConversationBase#MEMBERS_LEFT\n         * @param {Object} payload\n         * @param {String[]} payload.members 被移除的成员 id 列表\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         */\n        conversation.emit(MEMBERS_LEFT, payload);\n        return;\n      }\n      case OpType.members_blocked: {\n        const payload = {\n          blockedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被加入某个对话的黑名单\n         * @event IMClient#MEMBERS_BLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_BLOCKED, payload, conversation);\n        /**\n         * 有成员被加入当前对话的黑名单\n         * @event ConversationBase#MEMBERS_BLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_BLOCKED, payload);\n        return;\n      }\n      case OpType.members_unblocked: {\n        const payload = {\n          unblockedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被移出某个对话的黑名单\n         * @event IMClient#MEMBERS_UNBLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_UNBLOCKED, payload, conversation);\n        /**\n         * 有成员被移出当前对话的黑名单\n         * @event ConversationBase#MEMBERS_UNBLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_UNBLOCKED, payload);\n        return;\n      }\n      case OpType.blocked: {\n        const payload = {\n          blockedBy: initBy,\n        };\n        /**\n         * 当前用户被加入某个对话的黑名单\n         * @event IMClient#BLOCKED\n         * @param {Object} payload\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(BLOCKED, payload, conversation);\n        /**\n         * 当前用户被加入当前对话的黑名单\n         * @event ConversationBase#BLOCKED\n         * @param {Object} payload\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         */\n        conversation.emit(BLOCKED, payload);\n        return;\n      }\n      case OpType.unblocked: {\n        const payload = {\n          unblockedBy: initBy,\n        };\n        /**\n         * 当前用户被移出某个对话的黑名单\n         * @event IMClient#UNBLOCKED\n         * @param {Object} payload\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(UNBLOCKED, payload, conversation);\n        /**\n         * 当前用户被移出当前对话的黑名单\n         * @event ConversationBase#UNBLOCKED\n         * @param {Object} payload\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         */\n        conversation.emit(UNBLOCKED, payload);\n        return;\n      }\n      case OpType.members_shutuped: {\n        const payload = {\n          mutedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员在某个对话中被禁言\n         * @event IMClient#MEMBERS_MUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_MUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被禁言\n         * @event ConversationBase#MEMBERS_MUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_MUTED, payload);\n        return;\n      }\n      case OpType.members_unshutuped: {\n        const payload = {\n          unmutedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员在某个对话中被解除禁言\n         * @event IMClient#MEMBERS_UNMUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_UNMUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被解除禁言\n         * @event ConversationBase#MEMBERS_UNMUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_UNMUTED, payload);\n        return;\n      }\n      case OpType.shutuped: {\n        const payload = {\n          mutedBy: initBy,\n        };\n        /**\n         * 有成员在某个对话中被禁言\n         * @event IMClient#MUTED\n         * @param {Object} payload\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被禁言\n         * @event ConversationBase#MUTED\n         * @param {Object} payload\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         */\n        conversation.emit(MUTED, payload);\n        return;\n      }\n      case OpType.unshutuped: {\n        const payload = {\n          unmutedBy: initBy,\n        };\n        /**\n         * 有成员在某个对话中被解除禁言\n         * @event IMClient#UNMUTED\n         * @param {Object} payload\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(UNMUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被解除禁言\n         * @event ConversationBase#UNMUTED\n         * @param {Object} payload\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         */\n        conversation.emit(UNMUTED, payload);\n        return;\n      }\n      case OpType.member_info_changed: {\n        const { pid, role } = info;\n        const { memberInfoMap } = internal(conversation);\n        // 如果不存在缓存，且不是 role 的更新，则不通知\n        if (!memberInfoMap && !role) return;\n        const memberInfo = await conversation.getMemberInfo(pid);\n        internal(memberInfo).role = role;\n        const payload = {\n          member: pid,\n          memberInfo,\n          updatedBy: initBy,\n        };\n        /**\n         * 有成员的对话信息被更新\n         * @event IMClient#MEMBER_INFO_UPDATED\n         * @param {Object} payload\n         * @param {String} payload.member 被更新对话信息的成员 id\n         * @param {ConversationMumberInfo} payload.memberInfo 被更新的成员对话信息\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBER_INFO_UPDATED, payload, conversation);\n        /**\n         * 有成员的对话信息被更新\n         * @event ConversationBase#MEMBER_INFO_UPDATED\n         * @param {Object} payload\n         * @param {String} payload.member 被更新对话信息的成员 id\n         * @param {ConversationMumberInfo} payload.memberInfo 被更新的成员对话信息\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBER_INFO_UPDATED, payload);\n        return;\n      }\n      case OpType.updated: {\n        const attributes = decode(JSON.parse(attr.data));\n        conversation._updateServerAttributes(attributes);\n        const payload = {\n          attributes,\n          updatedBy: initBy,\n        };\n        /**\n         * 该对话信息被更新\n         * @event IMClient#CONVERSATION_INFO_UPDATED\n         * @param {Object} payload\n         * @param {Object} payload.attributes 被更新的属性\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(CONVERSATION_INFO_UPDATED, payload, conversation);\n        /**\n         * 有对话信息被更新\n         * @event ConversationBase#INFO_UPDATED\n         * @param {Object} payload\n         * @param {Object} payload.attributes 被更新的属性\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         */\n        conversation.emit(INFO_UPDATED, payload);\n        return;\n      }\n      default:\n        this.emit(UNHANDLED_MESSAGE, message);\n        throw new Error('Unrecognized conversation command');\n    }\n  }\n\n  _dispatchDirectMessage(originalMessage) {\n    const {\n      directMessage,\n      directMessage: {\n        id,\n        cid,\n        fromPeerId,\n        timestamp,\n        transient,\n        patchTimestamp,\n        mentionPids,\n        mentionAll,\n        binaryMsg,\n        msg,\n      },\n    } = originalMessage;\n    const content = binaryMsg ? binaryMsg.toArrayBuffer() : msg;\n    return Promise.all([\n      this.getConversation(directMessage.cid),\n      this._messageParser.parse(content),\n    ]).then(([conversation, message]) => {\n      // deleted conversation\n      if (!conversation) return undefined;\n      const messageProps = {\n        id,\n        cid,\n        timestamp,\n        updatedAt: patchTimestamp,\n        from: fromPeerId,\n        mentionList: mentionPids,\n        mentionedAll: mentionAll,\n      };\n      Object.assign(message, messageProps);\n      message._updateMentioned(this.id);\n      message._setStatus(MessageStatus.SENT);\n      // filter outgoing message sent from another device\n      if (message.from !== this.id) {\n        if (!(transient || conversation.transient)) {\n          this._sendAck(message);\n        }\n      }\n      return this._dispatchParsedMessage(message, conversation);\n    });\n  }\n\n  _dispatchParsedMessage(message, conversation) {\n    // beforeMessageDispatch hook\n    return applyDispatcher(this._plugins.beforeMessageDispatch, [\n      message,\n      conversation,\n    ]).then(shouldDispatch => {\n      if (shouldDispatch === false) return;\n      conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n      conversation.lastMessageAt = message.timestamp; // eslint-disable-line no-param-reassign\n      // filter outgoing message sent from another device\n      if (message.from !== this.id) {\n        conversation.unreadMessagesCount += 1; // eslint-disable-line no-param-reassign\n        if (message.mentioned) conversation._setUnreadMessagesMentioned(true);\n      }\n      /**\n       * 当前用户收到消息\n       * @event IMClient#MESSAGE\n       * @param {Message} message\n       * @param {ConversationBase} conversation 收到消息的对话\n       */\n      this.emit(MESSAGE, message, conversation);\n      /**\n       * 当前对话收到消息\n       * @event ConversationBase#MESSAGE\n       * @param {Message} message\n       */\n      conversation.emit(MESSAGE, message);\n    });\n  }\n\n  _sendAck(message) {\n    this._debug('send ack for %O', message);\n    const { cid } = message;\n    if (!cid) {\n      throw new Error('missing cid');\n    }\n    if (!this._ackMessageBuffer[cid]) {\n      this._ackMessageBuffer[cid] = [];\n    }\n    this._ackMessageBuffer[cid].push(message);\n    return this._doSendAck();\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendAck() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    this._debug('do send ack %O', this._ackMessageBuffer);\n    Promise.all(\n      Object.keys(this._ackMessageBuffer).map(cid => {\n        const convAckMessages = this._ackMessageBuffer[cid];\n        const timestamps = convAckMessages.map(message => message.timestamp);\n        const command = new GenericCommand({\n          cmd: 'ack',\n          ackMessage: new AckCommand({\n            cid,\n            fromts: Math.min.apply(null, timestamps),\n            tots: Math.max.apply(null, timestamps),\n          }),\n        });\n        delete this._ackMessageBuffer[cid];\n        return this._send(command, false).catch(error => {\n          this._debug('send ack failed: %O', error);\n          this._ackMessageBuffer[cid] = convAckMessages;\n        });\n      })\n    );\n  }\n\n  _omitPeerId(value) {\n    internal(this).peerIdOmittable = value;\n  }\n\n  _send(cmd, ...args) {\n    const command = cmd;\n    if (!internal(this).peerIdOmittable && this.id) {\n      command.peerId = this.id;\n    }\n    return this._connection.send(command, ...args);\n  }\n\n  async _open(appId, tag, deviceId, isReconnect = false) {\n    this._debug('open session');\n    const {\n      lastUnreadNotifTime,\n      lastPatchTime,\n      lastNotificationTime,\n    } = internal(this);\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'open',\n      appId,\n      peerId: this.id,\n      sessionMessage: new SessionCommand({\n        ua: `js/${VERSION}`,\n        r: isReconnect,\n        lastUnreadNotifTime,\n        lastPatchTime,\n        configBitmap,\n      }),\n    });\n    if (!isReconnect) {\n      Object.assign(\n        command.sessionMessage,\n        trim({\n          tag,\n          deviceId,\n        })\n      );\n      if (this.options.signatureFactory) {\n        const signatureResult = await runSignatureFactory(\n          this.options.signatureFactory,\n          [this._identity]\n        );\n        Object.assign(\n          command.sessionMessage,\n          keyRemap(\n            {\n              signature: 's',\n              timestamp: 't',\n              nonce: 'n',\n            },\n            signatureResult\n          )\n        );\n      }\n    } else {\n      const sessionToken = await this._sessionManager.getSessionToken({\n        autoRefresh: false,\n      });\n      if (sessionToken && sessionToken !== Expirable.EXPIRED) {\n        Object.assign(command.sessionMessage, {\n          st: sessionToken,\n        });\n      }\n    }\n    let resCommand;\n    try {\n      resCommand = await this._send(command);\n    } catch (error) {\n      if (error.code === ErrorCode.SESSION_TOKEN_EXPIRED) {\n        if (!this._sessionManager) {\n          // let it fail if sessoinToken not cached but command rejected as token expired\n          // to prevent session openning flood\n          throw new Error('Unexpected session expiration');\n        }\n        debug('Session token expired, reopening');\n        this._sessionManager.revoke();\n        return this._open(appId, tag, deviceId, isReconnect);\n      }\n      throw error;\n    }\n    const {\n      peerId,\n      sessionMessage,\n      sessionMessage: { st: token, stTtl: tokenTTL, code },\n      serverTs,\n    } = resCommand;\n    if (code) {\n      throw createError(sessionMessage);\n    }\n    if (peerId) {\n      this.id = peerId;\n      if (!this._identity) this._identity = peerId;\n      if (token) {\n        this._sessionManager =\n          this._sessionManager || this._createSessionManager();\n        this._sessionManager.setSessionToken(token, tokenTTL);\n      }\n      const serverTime = getTime(decodeDate(serverTs));\n      if (serverTs) {\n        internal(this).lastPatchTime = serverTime;\n      }\n      if (lastNotificationTime) {\n        // Do not await for it as this is failable\n        this._syncNotifications(lastNotificationTime).catch(error =>\n          console.warn('Syncing notifications failed:', error)\n        );\n      } else {\n        // Set timestamp to now for next reconnection\n        internal(this).lastNotificationTime = serverTime;\n      }\n    } else {\n      console.warn('Unexpected session opened without peerId.');\n    }\n    return undefined;\n  }\n\n  async _syncNotifications(timestamp) {\n    const { hasMore, notifications } = await this._fetchNotifications(\n      timestamp\n    );\n    notifications.forEach(notification => {\n      const { cmd, op, serverTs, notificationType, ...payload } = notification;\n      this._dispatchCommand({\n        cmd: CommandType[cmd],\n        op: OpType[op],\n        serverTs,\n        notificationType,\n        [`${cmd}Message`]: payload,\n      });\n    });\n    if (hasMore) {\n      return this._syncNotifications(internal(this).lastNotificationTime);\n    }\n    return undefined;\n  }\n\n  async _fetchNotifications(timestamp) {\n    return this._requestWithSessionToken({\n      method: 'GET',\n      path: '/rtm/notifications',\n      query: {\n        start_ts: timestamp,\n        notification_type: 'permanent',\n      },\n    });\n  }\n\n  _createSessionManager() {\n    debug('create SessionManager');\n    return new SessionManager({\n      onBeforeGetSessionToken: this._connection.checkConnectionAvailability.bind(\n        this._connection\n      ),\n      refresh: (manager, expiredSessionToken) =>\n        manager.setSessionTokenAsync(\n          Promise.resolve(\n            new GenericCommand({\n              cmd: 'session',\n              op: 'refresh',\n              sessionMessage: new SessionCommand({\n                ua: `js/${VERSION}`,\n                st: expiredSessionToken,\n              }),\n            })\n          )\n            .then(async command => {\n              if (this.options.signatureFactory) {\n                const signatureResult = await runSignatureFactory(\n                  this.options.signatureFactory,\n                  [this._identity]\n                );\n                Object.assign(\n                  command.sessionMessage,\n                  keyRemap(\n                    {\n                      signature: 's',\n                      timestamp: 't',\n                      nonce: 'n',\n                    },\n                    signatureResult\n                  )\n                );\n              }\n              return command;\n            })\n            .then(this._send.bind(this))\n            .then(({ sessionMessage: { st: token, stTtl: ttl } }) => [\n              token,\n              ttl,\n            ])\n        ),\n    });\n  }\n\n  async _requestWithSessionToken({ headers, query, ...params }) {\n    const sessionToken = await this._sessionManager.getSessionToken();\n    return this._request({\n      headers: {\n        'X-LC-IM-Session-Token': sessionToken,\n        ...headers,\n      },\n      query: {\n        client_id: this.id,\n        ...query,\n      },\n      ...params,\n    });\n  }\n\n  /**\n   * 关闭客户端\n   * @return {Promise}\n   */\n  async close() {\n    this._debug('close session');\n    const _ee = internal(this)._eventemitter;\n    _ee.emit('beforeclose');\n    if (this._connection.is('connected')) {\n      const command = new GenericCommand({\n        cmd: 'session',\n        op: 'close',\n      });\n      await this._send(command);\n    }\n    _ee.emit('close');\n    this.emit(CLOSE, {\n      code: 0,\n    });\n  }\n\n  /**\n   * 获取 client 列表中在线的 client，每次查询最多 20 个 clientId，超出部分会被忽略\n   * @param  {String[]} clientIds 要查询的 client ids\n   * @return {Primse.<String[]>} 在线的 client ids\n   */\n  async ping(clientIds) {\n    this._debug('ping');\n    if (!(clientIds instanceof Array)) {\n      throw new TypeError(`clientIds ${clientIds} is not an Array`);\n    }\n    if (!clientIds.length) {\n      return Promise.resolve([]);\n    }\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'query',\n      sessionMessage: new SessionCommand({\n        sessionPeerIds: clientIds,\n      }),\n    });\n    const resCommand = await this._send(command);\n    return resCommand.sessionMessage.onlineSessionPeerIds;\n  }\n\n  /**\n   * 获取某个特定的对话\n   * @param  {String} id 对话 id，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<ConversationBase>} 如果 id 对应的对话不存在则返回 null\n   */\n  async getConversation(id, noCache = false) {\n    if (typeof id !== 'string') {\n      throw new TypeError(`${id} is not a String`);\n    }\n    if (!noCache) {\n      const cachedConversation = this._conversationCache.get(id);\n      if (cachedConversation) {\n        return cachedConversation;\n      }\n    }\n    if (isTemporaryConversatrionId(id)) {\n      return (await this._getTemporaryConversations([id]))[0] || null;\n    }\n    return this.getQuery()\n      .equalTo('objectId', id)\n      .find()\n      .then(conversations => conversations[0] || null);\n  }\n\n  /**\n   * 通过 id 批量获取某个特定的对话\n   * @since 3.4.0\n   * @param  {String[]} ids 对话 id 列表，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<ConversationBase[]>} 如果 id 对应的对话不存在则返回 null\n   */\n  async getConversations(ids, noCache = false) {\n    const remoteConversationIds = noCache\n      ? ids\n      : ids.filter(id => this._conversationCache.get(id) === null);\n    if (remoteConversationIds.length) {\n      const remoteTemporaryConversationIds = remove(\n        remoteConversationIds,\n        isTemporaryConversatrionId\n      );\n      const query = [];\n      if (remoteConversationIds.length) {\n        query.push(\n          this.getQuery()\n            .containedIn('objectId', remoteConversationIds)\n            .limit(999)\n            .find()\n        );\n      }\n      if (remoteTemporaryConversationIds.length) {\n        const remoteTemporaryConversationsPromise = remoteTemporaryConversationIds.map(\n          this._getTemporaryConversations.bind(this)\n        );\n        query.push(...remoteTemporaryConversationsPromise);\n      }\n      await Promise.all(query);\n    }\n    return ids.map(id => this._conversationCache.get(id));\n  }\n\n  async _getTemporaryConversations(ids) {\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand({\n        tempConvIds: ids,\n      }),\n    });\n    const resCommand = await this._send(command);\n    return this._handleQueryResults(resCommand);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询对话\n   * @return {ConversationQuery.<PersistentConversation>}\n   */\n  getQuery() {\n    return new ConversationQuery(this);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询聊天室\n   * @return {ConversationQuery.<ChatRoom>}\n   */\n  getChatRoomQuery() {\n    return this.getQuery().equalTo('tr', true);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询服务号\n   * @return {ConversationQuery.<ServiceConversation>}\n   */\n  getServiceConversationQuery() {\n    return this.getQuery().equalTo('sys', true);\n  }\n\n  async _executeQuery(query) {\n    const queryJSON = query.toJSON();\n    queryJSON.where = new JsonObjectMessage({\n      data: JSON.stringify(encode(queryJSON.where)),\n    });\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand(queryJSON),\n    });\n    const resCommand = await this._send(command);\n    return this._handleQueryResults(resCommand);\n  }\n\n  async _handleQueryResults(resCommand) {\n    let conversations;\n    try {\n      conversations = decode(JSON.parse(resCommand.convMessage.results.data));\n    } catch (error) {\n      const commandString = JSON.stringify(trim(resCommand));\n      throw new Error(\n        `Parse query result failed: ${error.message}. Command: ${commandString}`\n      );\n    }\n    conversations = await Promise.all(\n      conversations.map(this._parseConversationFromRawData.bind(this))\n    );\n    return conversations.map(this._upsertConversationToCache.bind(this));\n  }\n\n  _upsertConversationToCache(fetchedConversation) {\n    let conversation = this._conversationCache.get(fetchedConversation.id);\n    if (!conversation) {\n      conversation = fetchedConversation;\n      this._debug('no match, set cache');\n      this._conversationCache.set(fetchedConversation.id, fetchedConversation);\n    } else {\n      this._debug('update cached conversation');\n      [\n        'creator',\n        'createdAt',\n        'updatedAt',\n        'lastMessageAt',\n        'lastMessage',\n        'mutedMembers',\n        'members',\n        '_attributes',\n        'transient',\n        'muted',\n      ].forEach(key => {\n        const value = fetchedConversation[key];\n        if (value !== undefined) conversation[key] = value;\n      });\n      if (conversation._reset) conversation._reset();\n    }\n    return conversation;\n  }\n\n  /**\n   * 反序列化消息，与 {@link Message#toFullJSON} 相对。\n   * @param {Object}\n   * @return {AVMessage} 解析后的消息\n   * @since 4.0.0\n   */\n  async parseMessage({ data, bin = false, ...properties }) {\n    const content = bin ? decodeBase64(data) : data;\n    const message = await this._messageParser.parse(content);\n    Object.assign(message, properties);\n    message._updateMentioned(this.id);\n    return message;\n  }\n\n  /**\n   * 反序列化对话，与 {@link Conversation#toFullJSON} 相对。\n   * @param {Object}\n   * @return {ConversationBase} 解析后的对话\n   * @since 4.0.0\n   */\n  async parseConversation({\n    id,\n    lastMessageAt,\n    lastMessage,\n    lastDeliveredAt,\n    lastReadAt,\n    unreadMessagesCount,\n    members,\n    mentioned,\n    ...properties\n  }) {\n    const conversationData = {\n      id,\n      lastMessageAt,\n      lastMessage,\n      lastDeliveredAt,\n      lastReadAt,\n      unreadMessagesCount,\n      members,\n      mentioned,\n    };\n    if (lastMessage) {\n      conversationData.lastMessage = await this.parseMessage(lastMessage);\n      conversationData.lastMessage._setStatus(MessageStatus.SENT);\n    }\n    const { transient, system, expiredAt } = properties;\n    if (transient) return new ChatRoom(conversationData, properties, this);\n    if (system)\n      return new ServiceConversation(conversationData, properties, this);\n    if (expiredAt || isTemporaryConversatrionId(id)) {\n      return new TemporaryConversation(conversationData, { expiredAt }, this);\n    }\n    return new Conversation(conversationData, properties, this);\n  }\n\n  async _parseConversationFromRawData(rawData) {\n    const data = keyRemap(\n      {\n        objectId: 'id',\n        lm: 'lastMessageAt',\n        m: 'members',\n        tr: 'transient',\n        sys: 'system',\n        c: 'creator',\n        mu: 'mutedMembers',\n      },\n      rawData\n    );\n    if (data.msg) {\n      data.lastMessage = {\n        data: data.msg,\n        bin: data.bin,\n        from: data.msg_from,\n        id: data.msg_mid,\n        timestamp: data.msg_timestamp,\n        updatedAt: data.patch_timestamp,\n      };\n      delete data.lastMessageFrom;\n      delete data.lastMessageId;\n      delete data.lastMessageTimestamp;\n      delete data.lastMessagePatchTimestamp;\n    }\n    const { ttl } = data;\n    if (ttl) data.expiredAt = Date.now() + ttl * 1000;\n    return this.parseConversation(data);\n  }\n\n  /**\n   * 创建一个对话\n   * @param {Object} options 除了下列字段外的其他字段将被视为对话的自定义属性\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.name] 对话的名字\n   * @param {Boolean} [options.unique=true] 唯一对话，当其为 true 时，如果当前已经有相同成员的对话存在则返回该对话，否则会创建新的对话\n   * @return {Promise.<Conversation>}\n   */\n  async createConversation({\n    members: m,\n    name,\n    transient,\n    unique = true,\n    _tempConv: tempConv,\n    _tempConvTTL: tempConvTTL,\n    ...properties\n  } = {}) {\n    if (!(transient || Array.isArray(m))) {\n      throw new TypeError(`conversation members ${m} is not an array`);\n    }\n    let members = new Set(m);\n    members.add(this.id);\n    members = Array.from(members).sort();\n    let attr = properties || {};\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new TypeError(`conversation name ${name} is not a string`);\n      }\n      attr.name = name;\n    }\n    attr = new JsonObjectMessage({\n      data: JSON.stringify(encode(attr)),\n    });\n\n    const startCommandJson = {\n      m: members,\n      attr,\n      transient,\n      unique,\n      tempConv,\n      tempConvTTL,\n    };\n\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'start',\n      convMessage: new ConvCommand(startCommandJson),\n    });\n\n    if (this.options.conversationSignatureFactory) {\n      const params = [null, this._identity, members, 'create'];\n      const signatureResult = await runSignatureFactory(\n        this.options.conversationSignatureFactory,\n        params\n      );\n      Object.assign(\n        command.convMessage,\n        keyRemap(\n          {\n            signature: 's',\n            timestamp: 't',\n            nonce: 'n',\n          },\n          signatureResult\n        )\n      );\n    }\n\n    const {\n      convMessage: { cid, cdate, tempConvTTL: ttl },\n    } = await this._send(command);\n    const data = {\n      name,\n      transient,\n      unique,\n      id: cid,\n      createdAt: cdate,\n      updatedAt: cdate,\n      lastMessageAt: null,\n      creator: this.id,\n      members: transient ? [] : members,\n      ...properties,\n    };\n    if (ttl) data.expiredAt = Date.now() + ttl * 1000;\n    const conversation = await this.parseConversation(data);\n    return this._upsertConversationToCache(conversation);\n  }\n\n  /**\n   * 创建一个聊天室\n   * @since 4.0.0\n   * @param {Object} options 除了下列字段外的其他字段将被视为对话的自定义属性\n   * @param {String} [options.name] 对话的名字\n   * @return {Promise.<ChatRoom>}\n   */\n  async createChatRoom(param) {\n    return this.createConversation({\n      ...param,\n      transient: true,\n      members: null,\n      unique: false,\n      _tempConv: false,\n    });\n  }\n\n  /**\n   * 创建一个临时对话\n   * @since 4.0.0\n   * @param {Object} options\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.ttl] 对话存在时间，单位为秒，最大值与默认值均为 86400（一天），过期后该对话不再可用。\n   * @return {Promise.<TemporaryConversation>}\n   */\n  async createTemporaryConversation({ ttl: _tempConvTTL, ...param }) {\n    return this.createConversation({\n      ...param,\n      _tempConv: true,\n      _tempConvTTL,\n    });\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendRead() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    const buffer = internal(this).readConversationsBuffer;\n    const conversations = Array.from(buffer);\n    if (!conversations.length) return;\n    const ids = conversations.map(conversation => {\n      if (!(conversation instanceof ConversationBase)) {\n        throw new TypeError(`${conversation} is not a Conversation`);\n      }\n      return conversation.id;\n    });\n    this._debug(`mark [${ids}] as read`);\n    buffer.clear();\n    this._sendReadCommand(conversations).catch(error => {\n      this._debug('send read failed: %O', error);\n      conversations.forEach(buffer.add.bind(buffer));\n    });\n  }\n\n  _sendReadCommand(conversations) {\n    return this._send(\n      new GenericCommand({\n        cmd: 'read',\n        readMessage: new ReadCommand({\n          convs: conversations.map(\n            conversation =>\n              new ReadTuple({\n                cid: conversation.id,\n                mid:\n                  conversation.lastMessage &&\n                  conversation.lastMessage.from !== this.id\n                    ? conversation.lastMessage.id\n                    : undefined,\n                timestamp: (conversation.lastMessageAt || new Date()).getTime(),\n              })\n          ),\n        }),\n      }),\n      false\n    );\n  }\n}\n\n/**\n * 修改、撤回消息的原因\n * @typedef PatchReason\n * @type {Object}\n * @property {number} code 负数为内置 code，正数为开发者在 hook 中自定义的 code。比如因为敏感词过滤被修改的 code 为 -4408。\n * @property {string} [detail] 具体的原因说明。\n */\n","export {\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n} from '../websocket-plus';\n\nexport const RECONNECT_ERROR = 'reconnecterror';\n","import { encode as encodeBase64 } from 'base64-arraybuffer';\nimport Message from './message';\nimport { IE10Compatible } from './helpers';\n// jsdoc-ignore-start\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class BinaryMessage extends Message {\n  /**\n   * 二进制消息\n   * @extends Message\n   * @param {ArrayBuffer} buffer\n   * @since 4.0.0\n   */\n  constructor(buffer) {\n    if (!(buffer instanceof ArrayBuffer)) {\n      throw new TypeError(`${buffer} is not an ArrayBuffer`);\n    }\n    super(buffer);\n  }\n\n  /**\n   * @type ArrayBuffer\n   */\n  get buffer() {\n    return this.content;\n  }\n\n  set buffer(buffer) {\n    this.content = buffer;\n  }\n\n  static validate(target) {\n    return target instanceof ArrayBuffer;\n  }\n\n  toJSON() {\n    return {\n      ...super._toJSON(),\n      data: encodeBase64(this.content),\n    };\n  }\n\n  toFullJSON() {\n    return {\n      ...super.toFullJSON(),\n      bin: true,\n      data: encodeBase64(this.content),\n    };\n  }\n}\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-1)\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class TextMessage extends TypedMessage {\n  /**\n   * 文类类型消息\n   * @extends TypedMessage\n   * @param  {String} [text='']\n   * @throws {TypeError} text 不是 String 类型\n   */\n  constructor(text = '') {\n    if (typeof text !== 'string') {\n      throw new TypeError(`${text} is not a string`);\n    }\n    super();\n    this.setText(text);\n  }\n}\n\n/**\n * @name TYPE\n * @memberof TextMessage\n * @type Number\n * @static\n * @const\n */\n","import d from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { applyMiddlewares } from './plugin';\nimport { ensureArray } from './utils';\n\nconst debug = d('LC:MessageParser');\n\nconst tryParseJson = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(param) {\n    let content;\n    if (typeof param !== 'string') {\n      content = param;\n    } else {\n      try {\n        content = JSON.parse(param);\n      } catch (error) {\n        content = param;\n      }\n    }\n    return fn.call(this, content);\n  };\n};\n\nconst applyPlugins = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(json) {\n    return Promise.resolve(json)\n      .then(applyMiddlewares(this._plugins.beforeMessageParse))\n      .then(decoratedJson => fn.call(this, decoratedJson))\n      .then(applyMiddlewares(this._plugins.afterMessageParse));\n  };\n};\n\nexport default class MessageParser {\n  /**\n   * 消息解析器\n   * @param {Object} plugins 插件，插件的 messageClasses 会自动被注册，在解析时 beforeMessageParse 与 afterMessageParse Middleware 会被应用。\n   */\n  constructor(plugins = {}) {\n    this._plugins = plugins;\n    this._messageClasses = [];\n    this.register(plugins.messageClasses);\n  }\n\n  /**\n   * 注册消息类\n   *\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   * 建议继承自 {@link TypedMessage}，也可以传入一个消息类数组。\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  register(messageClasses) {\n    ensureArray(messageClasses).map(klass => this._register(klass));\n  }\n\n  _register(messageClass) {\n    if (\n      messageClass &&\n      messageClass.parse &&\n      messageClass.prototype &&\n      messageClass.prototype.getPayload\n    ) {\n      this._messageClasses.unshift(messageClass);\n    } else {\n      throw new TypeError('Invalid messageClass');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @tryParseJson\n  @applyPlugins\n  // jsdoc-ignore-end\n  /**\n   * 解析消息内容\n   * @param {Object | string | any} target 消息内容，如果是字符串会尝试 parse 为 JSON。\n   * @return {AVMessage} 解析后的消息\n   * @throws {Error} 如果不匹配任何注册的消息则抛出异常\n   */\n  parse(content) {\n    debug('parsing message: %O', content);\n    // eslint-disable-next-line\n    for (const Klass of this._messageClasses) {\n      const contentCopy = isPlainObject(content) ? { ...content } : content;\n      let valid;\n      let result;\n      try {\n        valid = Klass.validate(contentCopy);\n      } catch (error) {\n        // eslint-disable-line no-empty\n      }\n      if (valid) {\n        try {\n          result = Klass.parse(contentCopy);\n        } catch (error) {\n          console.warn('parsing a valid message content error', {\n            error,\n            Klass,\n            content: contentCopy,\n          });\n        }\n        if (result !== undefined) {\n          debug('parse result: %O', result);\n          return result;\n        }\n      }\n    }\n    throw new Error('No Message Class matched');\n  }\n}\n","/** @module leancloud-realtime */\nimport d from 'debug';\nimport uuid from 'uuid/v4';\nimport IMClient from './im-client';\nimport { RECONNECT, RECONNECT_ERROR } from './events/core';\nimport { Conversation } from './conversations';\nimport { MessageQueryDirection } from './conversations/conversation-base';\nimport Message, { MessageStatus } from './messages/message';\nimport BinaryMessage from './messages/binary-message';\nimport TextMessage from './messages/text-message';\nimport TypedMessage from './messages/typed-message';\nimport RecalledMessage from './messages/recalled-message';\nimport MessageParser from './message-parser';\nimport { trim, internal, finalize } from './utils';\n\nconst debug = d('LC:IMPlugin');\n\n/**\n * 消息优先级枚举\n * @enum {Number}\n * @since 3.3.0\n */\nconst MessagePriority = {\n  /** 高 */\n  HIGH: 1,\n  /** 普通 */\n  NORMAL: 2,\n  /** 低 */\n  LOW: 3,\n};\nObject.freeze(MessagePriority);\n\n/**\n * 为 Conversation 定义一个新属性\n * @param {String} prop 属性名\n * @param {Object} [descriptor] 属性的描述符，参见 {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor#Description getOwnPropertyDescriptor#Description - MDN}，默认为该属性名对应的 Conversation 自定义属性的 getter/setter\n * @returns void\n * @example\n *\n * conversation.get('type');\n * conversation.set('type', 1);\n *\n * // equals to\n * defineConversationProperty('type');\n * conversation.type;\n * conversation.type = 1;\n */\nconst defineConversationProperty = (\n  prop,\n  descriptor = {\n    get() {\n      return this.get(prop);\n    },\n    set(value) {\n      this.set(prop, value);\n    },\n  }\n) => {\n  Object.defineProperty(Conversation.prototype, prop, descriptor);\n};\n\nexport {\n  /**\n   * @see Message\n   */\n  Message,\n  /**\n   * @see BinaryMessage\n   */\n  BinaryMessage,\n  /**\n   * @see TypedMessage\n   */\n  TypedMessage,\n  /**\n   * @see TextMessage\n   */\n  TextMessage,\n  /**\n   * @see RecalledMessage\n   */\n  RecalledMessage,\n  MessagePriority,\n  MessageStatus,\n  MessageQueryDirection,\n  defineConversationProperty,\n};\n\nexport {\n  /**\n   * decorator，定义消息类的类型常量\n   * @function\n   * @param {Number} type 自定义类型请使用正整数\n   * @example @messageType(1)\n   * class CustomMessage extends TypedMessage {}\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   //...\n   * }\n   * messageType(1)(CustomMessage);\n   */\n  messageType,\n  /**\n   * decorator，定义消息类的自定义字段\n   * @function\n   * @param {String[]} fields 自定义字段\n   * @example @messageField(['foo'])\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   * }\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   *   //...\n   * }\n   * messageField(['foo'])(CustomMessage);\n   */\n  messageField,\n  IE10Compatible,\n} from './messages/helpers';\n\nexport { ConversationMemberRole } from './conversation-member-info';\nexport {\n  /**\n   * @see Conversation\n   */\n  Conversation,\n  /**\n   * @see ChatRoom\n   */\n  ChatRoom,\n  /**\n   * @see ServiceConversation\n   */\n  ServiceConversation,\n  /**\n   * @see TemporaryConversation\n   */\n  TemporaryConversation,\n} from './conversations';\n\nconst onRealtimeCreate = realtime => {\n  /* eslint-disable no-param-reassign */\n  const deviceId = uuid();\n  realtime._IMClients = {};\n  realtime._IMClientsCreationCount = 0;\n  const messageParser = new MessageParser(realtime._plugins);\n  realtime._messageParser = messageParser;\n\n  const signAVUser = async user =>\n    realtime._request({\n      method: 'POST',\n      path: '/rtm/sign',\n      data: {\n        session_token: user.getSessionToken(),\n      },\n    });\n\n  /**\n   * 注册消息类\n   *\n   * 在接收消息、查询消息时，会按照消息类注册顺序的逆序依次尝试解析消息内容\n   *\n   * @memberof Realtime\n   * @instance\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   * 建议继承自 {@link TypedMessage}\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  const register = messageParser.register.bind(messageParser);\n  /**\n   * 创建一个即时通讯客户端，多次创建相同 id 的客户端会返回同一个实例\n   * @memberof Realtime\n   * @instance\n   * @param  {String|AV.User} [identity] 客户端 identity，如果不指定该参数，服务端会随机生成一个字符串作为 identity，\n   * 如果传入一个已登录的 AV.User，则会使用该用户的 id 作为客户端 identity 登录。\n   * @param  {Object} [options]\n   * @param  {Function} [options.signatureFactory] open session 时的签名方法 // TODO need details\n   * @param  {Function} [options.conversationSignatureFactory] 对话创建、增减成员操作时的签名方法\n   * @param  {Function} [options.blacklistSignatureFactory] 黑名单操作时的签名方法\n   * @param  {String} [options.tag] 客户端类型标记，以支持单点登录功能\n   * @param  {String} [options.isReconnect=false] 单点登录时标记该次登录是不是应用启动时自动重新登录\n   * @return {Promise.<IMClient>}\n   */\n  const createIMClient = async (\n    identity,\n    { tag, isReconnect, ...clientOptions } = {},\n    lagecyTag\n  ) => {\n    let id;\n    const buildinOptions = {};\n    if (identity) {\n      if (typeof identity === 'string') {\n        id = identity;\n      } else if (identity.id && identity.getSessionToken) {\n        ({ id } = identity);\n        const sessionToken = identity.getSessionToken();\n        if (!sessionToken) {\n          throw new Error('User must be authenticated');\n        }\n        buildinOptions.signatureFactory = signAVUser;\n      } else {\n        throw new TypeError('Identity must be a String or an AV.User');\n      }\n      if (realtime._IMClients[id] !== undefined) {\n        return realtime._IMClients[id];\n      }\n    }\n    if (lagecyTag) {\n      console.warn(\n        'DEPRECATION createIMClient tag param: Use options.tag instead.'\n      );\n    }\n    const _tag = tag || lagecyTag;\n    const promise = realtime\n      ._open()\n      .then(connection => {\n        const client = new IMClient(\n          id,\n          { ...buildinOptions, ...clientOptions },\n          {\n            _connection: connection,\n            _request: realtime._request.bind(realtime),\n            _messageParser: messageParser,\n            _plugins: realtime._plugins,\n            _identity: identity,\n          }\n        );\n        connection.on(RECONNECT, () =>\n          client\n            ._open(realtime._options.appId, _tag, deviceId, true)\n            /**\n             * 客户端连接恢复正常，该事件通常在 {@link Realtime#event:RECONNECT} 之后发生\n             * @event IMClient#RECONNECT\n             * @see Realtime#event:RECONNECT\n             * @since 3.2.0\n             */\n            /**\n             * 客户端重新登录发生错误（网络连接已恢复，但重新登录错误）\n             * @event IMClient#RECONNECT_ERROR\n             * @since 3.2.0\n             */\n            .then(\n              () => client.emit(RECONNECT),\n              error => client.emit(RECONNECT_ERROR, error)\n            )\n        );\n        internal(client)._eventemitter.on(\n          'beforeclose',\n          () => {\n            delete realtime._IMClients[client.id];\n            if (realtime._firstIMClient === client) {\n              delete realtime._firstIMClient;\n            }\n          },\n          realtime\n        );\n        internal(client)._eventemitter.on(\n          'close',\n          () => {\n            realtime._deregister(client);\n          },\n          realtime\n        );\n        return client\n          ._open(realtime._options.appId, _tag, deviceId, isReconnect)\n          .then(() => {\n            realtime._IMClients[client.id] = client;\n            realtime._IMClientsCreationCount += 1;\n            if (realtime._IMClientsCreationCount === 1) {\n              client._omitPeerId(true);\n              realtime._firstIMClient = client;\n            } else if (\n              realtime._IMClientsCreationCount > 1 &&\n              realtime._firstIMClient\n            ) {\n              realtime._firstIMClient._omitPeerId(false);\n            }\n            realtime._register(client);\n            return client;\n          })\n          .catch(error => {\n            delete realtime._IMClients[client.id];\n            throw error;\n          });\n      })\n      .then(\n        ...finalize(() => {\n          realtime._deregisterPending(promise);\n        })\n      )\n      .catch(error => {\n        delete realtime._IMClients[id];\n        throw error;\n      });\n    if (identity) {\n      realtime._IMClients[id] = promise;\n    }\n    realtime._registerPending(promise);\n    return promise;\n  };\n  Object.assign(realtime, {\n    register,\n    createIMClient,\n  });\n  /* eslint-enable no-param-reassign */\n};\n\nconst beforeCommandDispatch = (command, realtime) => {\n  const isIMCommand = command.service === null || command.service === 2;\n  if (!isIMCommand) return true;\n  const targetClient = command.peerId\n    ? realtime._IMClients[command.peerId]\n    : realtime._firstIMClient;\n  if (targetClient) {\n    Promise.resolve(targetClient)\n      .then(client => client._dispatchCommand(command))\n      .catch(debug);\n  } else {\n    debug(\n      '[WARN] Unexpected message received without any live client match: %O',\n      trim(command)\n    );\n  }\n  return false;\n};\n\nexport const IMPlugin = {\n  name: 'leancloud-realtime-plugin-im',\n  onRealtimeCreate,\n  beforeCommandDispatch,\n  messageClasses: [Message, BinaryMessage, RecalledMessage, TextMessage],\n};\n","/** @module leancloud-realtime */\n/** core + plugins */\nimport { Realtime } from './core';\nimport { IMPlugin, defineConversationProperty } from './plugin-im';\nimport MessageParser from './message-parser';\nimport * as CoreEvent from './events/core';\nimport * as IMEvent from './events/im';\n\nRealtime.defineConversationProperty = defineConversationProperty;\nRealtime.__preRegisteredPlugins = [IMPlugin];\n\nconst Event = {\n  ...CoreEvent,\n  ...IMEvent,\n};\n\nexport {\n  /**\n   * SDK 可能会派发的事件枚举\n   * @name Event\n   * @enum {String}\n   * @since 4.0.0\n   */\n  Event,\n};\n\nexport {\n  /**\n   * 错误码，详见 [即时通讯云端错误码说明]{@link https://leancloud.cn/docs/realtime-faq.html#hash-291949329}\n   * @name ErrorCode\n   * @enum {Number}\n   * @since 3.3.0\n   */\n  ErrorCode,\n} from './error';\n\nexport * from './core';\n\nexport * from './plugin-im';\n\nexport {\n  /**\n   * @see MessageParser\n   * @since 5.0.0\n   */\n  MessageParser,\n};\n\nexport {\n  /**\n   * @see ConversationQuery\n   */\n  default as ConversationQuery,\n} from './conversation-query';\n","/** core + plugins + platform adapters */\nimport { WebSocket, request } from '@leancloud/platform-adapters-node';\nimport { setAdapters } from './im';\n\nsetAdapters({\n  WebSocket,\n  request,\n});\n\nexport * from './im';\n"],"names":["module","require","newBuilder","syntax","options","objc_class_prefix","messages","name","fields","rule","type","id","enums","values","isNamespace","build","push_server","messages2","JsonObjectMessage","UnreadTuple","LogItem","DataCommand","SessionCommand","ErrorCommand","DirectCommand","AckCommand","UnreadCommand","ConvCommand","RoomCommand","LogsCommand","RcpCommand","ReadTuple","MaxReadTuple","ReadCommand","PresenceCommand","ReportCommand","GenericCommand","BlacklistCommand","PatchCommand","PatchItem","ConvMemberInfo","CommandType","OpType","StatusType","adapters","getAdapter","adapter","undefined","Error","setAdapters","newAdapters","Object","assign","global","window","EXPIRED","Symbol","debug","d","Expirable","value","ttl","originalValue","expiredAt","Date","now","expired","Cache","_map","get","key","cache","set","enable","namespaces","disable","tryAll","promiseConstructors","promise","Promise","length","slice","tap","interceptor","finalize","callback","error","decodeDate","date","__type","iso","toNumber","getTime","decode","Array","isArray","map","isPlainObject","keys","reduce","result","encode","toJSON","keyRemap","keymap","obj","newObj","newKey","isIE10","navigator","userAgent","indexOf","getStaticProperty","klass","property","__proto__","union","a","b","from","Set","difference","bSet","filter","x","has","WeakMap","internal","object","compact","forEach","prop","removeNull","trim","message","JSON","parse","stringify","ensureArray","target","setValue","segs","split","lastSeg","pop","currentTarget","seg","isWeapp","wx","connectSocket","throttle","wait","descriptor","throttleMeta","propertyMeta","previouseTimestamp","timeout","remainingTime","apply","setTimeout","isCNApp","appId","equalBuffer","buffer1","buffer2","byteLength","Uint8Array","some","index","OPEN","DISCONNECT","RECONNECT","RETRY","SCHEDULE","OFFLINE","ONLINE","ERROR","MESSAGE","HEARTBEAT_TIME","TIMEOUT_TIME","DEFAULT_RETRY_STRATEGY","attempt","Math","min","requireConnected","requireConnectedWrapper","checkConnectionAvailability","args","call","WebSocketPlus","_urls","urls","getUrls","protocol","init","_protocol","resolve","then","_open","__postponeTimeoutTimer","_postponeTimeoutTimer","bind","addEventListener","__pause","can","pause","__resume","resume","open","_createWs","ws","first","reset","url","reject","WebSocket","binaryType","onopen","onclose","onerror","_ws","_handleClose","onmessage","_handleMessage","_destroyWs","close","onbeforeevent","event","to","payload","emit","onconnected","_startConnectionKeeper","onleaveconnected","_stopConnectionKeeper","onpause","onbeforeresume","onreconnect","ondisconnected","delay","__scheduledRetry","clearTimeout","is","retry","onretry","reconnect","fail","removeEventListener","currentState","current","console","warn","_ping","ping","_clearTimeoutTimers","_timeoutTimer","disconnect","_heartbeatTimer","setInterval","addListener","removeListener","clearInterval","code","reason","isFinished","handleClose","send","data","handleMessage","EventEmitter","StateMachine","create","prototype","initial","state","defer","terminal","events","freeze","ErrorCode","Number","createError","appCode","detail","errorMessage","err","COMMAND_TIMEOUT","EXPIRE","isIdempotentCommand","command","cmd","direct","session","op","conv","start","update","members","Connection","getUrl","format","version","protocolString","_protocolFormat","_commands","_serialId","waitingForRespond","buffer","toArrayBuffer","duplicatedCommand","find","targetBuffer","targetCommand","serialId","i","enabled","toBase64","TypeError","msg","e","goaway","echo","method","_url","query","headers","time","queryString","v","encodeURIComponent","qs","join","request","response","ok","status","checkType","middleware","param","constructor","_pluginName","applyDecorators","decorators","decorator","applyMiddlewares","middlewares","previousPromise","applyDispatcher","dispatchers","resultPromise","dispatcher","shouldDispatch","routerCache","initializedApp","Realtime","plugins","VERSION","appKey","server","_options","noBinary","ssl","RTMServerName","process","env","RTM_SERVER_NAME","_cache","_this","clients","pendingClients","mergedPlugins","__preRegisteredPlugins","plugin","_plugins","hook","hasOwnProperty","concat","onRealtimeCreate","_request","path","_getServerUrls","api","_openPromise","connection","_getRTMServers","on","_dispatchCommand","client","isFatal","APP_NOT_AVAILABLE","INVALID_LOGIN","INVALID_ORIGIN","errorCode","RTMServers","shuffle","cachedEndPoints","info","_fetchRTMServers","secondary","RTMRouter","cachedRouter","defaultProtocol","RTMRouterServer","rtm_router_server","APIServer","api_server","serverUrls","toLowerCase","domain","secure","features","_t","_close","cannot","_registerPending","add","_deregisterPending","_register","_deregister","size","beforeCommandDispatch","polyfilledPromise","UNREAD_MESSAGES_COUNT_UPDATE","CLOSE","CONFLICT","CONVERSATION_INFO_UPDATED","UNHANDLED_MESSAGE","INVITED","KICKED","MEMBERS_JOINED","MEMBERS_LEFT","MEMBER_INFO_UPDATED","BLOCKED","UNBLOCKED","MEMBERS_BLOCKED","MEMBERS_UNBLOCKED","MUTED","UNMUTED","MEMBERS_MUTED","MEMBERS_UNMUTED","MESSAGE_RECALL","MESSAGE_UPDATE","LAST_DELIVERED_AT_UPDATE","LAST_READ_AT_UPDATE","INFO_UPDATED","MessageStatus","NONE","SENDING","SENT","DELIVERED","FAILED","rMessageStatus","READ","Message","content","uuid","cid","timestamp","mentionList","mentionedAll","_mentioned","_setStatus","getPayload","_toJSON","deliveredAt","updatedAt","mentioned","toFullJSON","_updatedAt","_status","_updateMentioned","getMentionList","setMentionList","mentionAll","Boolean","validate","json","_timestamp","_deliveredAt","messageType","TYPE","_lctype","_getType","messageField","originalCustomFields","_customFields","IE10Compatible","TypedMessage","setText","text","_lctext","getText","setAttributes","attributes","_lcattrs","getAttributes","_getCustomFields","field","summary","customFields","RecalledMessage","serializeMessage","binaryMsg","ArrayBuffer","QueryDirection","NEW","OLD","MessageQueryDirection","NEW_TO_OLD","OLD_TO_NEW","ConversationBase","lastMessageAt","lastMessage","lastDeliveredAt","lastReadAt","unreadMessagesCount","properties","messagesWaitingForReceipt","_client","Event","_debug","onConversationCreate","_setUnreadMessagesMentioned","unreadMessagesMentioned","_setLastDeliveredAt","_setLastReadAt","params","_send","convMessage","sendOptions","getSendOptions","transient","receipt","priority","pushData","will","directMessage","r","dt","mentionPids","resCommand","ackMessage","uid","t","_update","newMessage","recall","patch","modify","patchMessage","patches","mid","lastPatchTime","_lastPatchTime","count","_addMembers","_removeMembers","queryMessages","beforeTime","beforeMessageId","afterTime","afterMessageId","limit","direction","startTime","startMessageId","startClosed","endTime","endMessageId","endClosed","conditions","tIncluded","tt","tmid","ttIncluded","l","lctype","logsMessage","all","logs","msgId","patchTimestamp","ackAt","readAt","bin","messageData","parseMessage","createMessagesIterator","next","prevMessages","done","read","readConversationsBuffer","_doSendRead","_handleReceipt","messageId","fetchReceiptTimestamps","system","maxReadTimestamp","maxAckTimestamp","_fetchAllReceiptTimestamps","queryAllMembers","maxReadTuples","maxReadTuple","pid","_lastMessageAt","_validateSignature","signatureResult","signature","nonce","signatureFactory","createPartiallySuccess","allowedPids","failedPids","successfulClientIds","failures","pids","clientIds","PersistentConversation","creator","createdAt","muted","mutedMembers","_attributes","_reset","currentAttributes","pendingAttributes","pendingKeys","re","RegExp","childKeys","test","k","parentKey","_buildCurrentAttributes","cloneDeep","_updateServerAttributes","save","attr","isEmpty","udate","fetch","getQuery","equalTo","mute","unmute","_appendConversationSignature","action","conversationSignatureFactory","sort","runSignatureFactory","_appendBlacklistSignature","blacklistSignatureFactory","blacklistMessage","m","remove","quit","muteMembers","add_shutup","unmuteMembers","remove_shutup","queryMutedMembers","query_shutup","newNext","results","blockMembers","block","srcCid","toPids","unblockMembers","unblock","queryBlockedMembers","blockedPids","_createdAt","ConversationMemberRole","OWNER","MANAGER","MEMBER","ConversationMemberInfo","conversation","memberId","role","conversationId","isOwner","Conversation","memberInfoMap","_fetchAllMemberInfo","_requestWithSessionToken","where","memberInfos","clientId","memberInfo","getAllMemberInfo","noCache","getMemberInfo","updateMemberRole","OWNER_PROMOTION_NOT_ALLOWED","member_info_update","targetClientId","ChatRoom","ServiceConversation","subscribe","unsubscribe","transformNotFoundError","CONVERSATION_NOT_FOUND","TEMPORARY_CONVERSATION_EXPIRED","TemporaryConversation","_expiredAt","ConversationQuery","_encode","source","_quote","s","replace","_calculateFlag","prev","and","queries","every","q","combined","_where","$and","or","$or","_extraOptions","_addCondition","condition","flag","_skip","skip","_limit","_order","containsMembers","peerIds","containsAll","withMembers","includeSelf","peerIdsSet","sizeEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","notEqualTo","exists","doesNotExist","containedIn","notContainsIn","contains","subString","startsWith","prefix","endsWith","suffix","matches","regex","_modifiers","ignoreCase","multiline","ascending","addAscending","descending","addDescending","withLastMessagesRefreshed","_executeQuery","SessionManager","refresh","onBeforeGetSessionToken","_onBeforeGetSessionToken","setSessionToken","token","sessionToken","_sessionToken","_pendingSessionTokenPromise","setSessionTokenAsync","currentSessionToken","getSessionToken","autoRefresh","newValue","revoke","isTemporaryConversatrionId","configBitmap","IMClient","props","_messageParser","_conversationCache","_ackMessageBuffer","lastNotificationTime","_eventemitter","onIMClientCreate","serverTs","notificationType","unread","rcp","_dispatchConvMessage","_dispatchDirectMessage","_dispatchSessionMessage","_dispatchUnreadMessage","_dispatchRcpMessage","_dispatchPatchMessage","sessionMessage","closed","SESSION_CONFLICT","unreadMessage","convs","notifTime","lastUnreadNotifTime","getConversations","ts","messageProps","countNotUpdated","conversations","rcpMessage","patchCode","patchReason","patchTime","initBy","getConversation","joined","left","members_joined","members_left","members_blocked","members_unblocked","blocked","unblocked","members_shutuped","members_unshutuped","shutuped","unshutuped","member_info_changed","updated","invitedBy","kickedBy","blockedBy","unblockedBy","mutedBy","unmutedBy","member","updatedBy","originalMessage","fromPeerId","_sendAck","_dispatchParsedMessage","beforeMessageDispatch","push","_doSendAck","_connection","convAckMessages","timestamps","fromts","tots","max","_omitPeerId","peerIdOmittable","peerId","tag","deviceId","isReconnect","ua","_identity","_sessionManager","st","SESSION_TOKEN_EXPIRED","tokenTTL","stTtl","_createSessionManager","serverTime","_syncNotifications","_fetchNotifications","hasMore","notifications","notification","start_ts","notification_type","manager","expiredSessionToken","client_id","_ee","sessionPeerIds","onlineSessionPeerIds","cachedConversation","_getTemporaryConversations","ids","remoteConversationIds","remoteTemporaryConversationIds","remoteTemporaryConversationsPromise","tempConvIds","_handleQueryResults","getChatRoomQuery","getServiceConversationQuery","queryJSON","commandString","_parseConversationFromRawData","_upsertConversationToCache","fetchedConversation","decodeBase64","parseConversation","conversationData","rawData","objectId","lm","tr","sys","c","mu","msg_from","msg_mid","msg_timestamp","patch_timestamp","lastMessageFrom","lastMessageId","lastMessageTimestamp","lastMessagePatchTimestamp","createConversation","unique","tempConv","_tempConv","tempConvTTL","_tempConvTTL","startCommandJson","cdate","createChatRoom","createTemporaryConversation","clear","_sendReadCommand","readMessage","RECONNECT_ERROR","BinaryMessage","encodeBase64","TextMessage","tryParseJson","fn","wrapper","applyPlugins","beforeMessageParse","decoratedJson","afterMessageParse","MessageParser","_messageClasses","register","messageClasses","messageClass","unshift","Klass","contentCopy","valid","MessagePriority","HIGH","NORMAL","LOW","defineConversationProperty","defineProperty","realtime","_IMClients","_IMClientsCreationCount","messageParser","signAVUser","user","session_token","createIMClient","identity","clientOptions","lagecyTag","buildinOptions","_tag","_firstIMClient","isIMCommand","service","targetClient","IMPlugin","CoreEvent","IMEvent"],"mappings":"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"}