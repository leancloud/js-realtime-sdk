{"version":3,"file":"im-node.js","sources":["../../proto/message-compiled.js","../../proto/message.js","../../src/adapter.js","../../src/utils/global.js","../../src/utils/expirable.js","../../src/utils/cache.js","../../src/utils/index.js","../../src/websocket-plus.js","../../src/error.js","../../src/connection.js","../../src/utils/request.js","../../src/plugin.js","../../src/realtime.js","../../src/core.js","../../src/events/im.js","../../src/messages/message.js","../../src/messages/helpers.js","../../src/messages/typed-message.js","../../src/messages/recalled-message.js","../../src/conversations/conversation-base.js","../../src/signature-factory-runner.js","../../src/conversations/persistent-conversation.js","../../src/conversation-member-info.js","../../src/conversations/conversation.js","../../src/conversations/chat-room.js","../../src/conversations/service-conversation.js","../../src/conversations/temporary-conversation.js","../../src/conversation-query.js","../../src/session-manager.js","../../src/im-client.js","../../src/events/core.js","../../src/messages/binary-message.js","../../src/messages/text-message.js","../../src/message-parser.js","../../src/plugin-im.js","../../src/im.js","../../src/im-adapted.js"],"sourcesContent":["module.exports = require('protobufjs/dist/protobuf-light')\n  .newBuilder({})\n  ['import']({\n    package: 'push_server.messages2',\n    syntax: 'proto2',\n    options: {\n      objc_class_prefix: 'AVIM',\n    },\n    messages: [\n      {\n        name: 'JsonObjectMessage',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'data',\n            id: 1,\n          },\n        ],\n      },\n      {\n        name: 'UnreadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'required',\n            type: 'int32',\n            name: 'unread',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentioned',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 10,\n          },\n        ],\n      },\n      {\n        name: 'LogItem',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'msgId',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'ackAt',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'readAt',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'bin',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 11,\n          },\n        ],\n      },\n      {\n        name: 'ConvMemberInfo',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'role',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'infoId',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'DataCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'ids',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'JsonObjectMessage',\n            name: 'msg',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'offline',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'SessionCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'ua',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'r',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'tag',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'deviceId',\n            id: 7,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'sessionPeerIds',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'onlineSessionPeerIds',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'st',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'stTtl',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'code',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'reason',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'deviceToken',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'sp',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'detail',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastUnreadNotifTime',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastPatchTime',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'configBitmap',\n            id: 19,\n          },\n        ],\n      },\n      {\n        name: 'ErrorCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'int32',\n            name: 'code',\n            id: 1,\n          },\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'reason',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'appCode',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'detail',\n            id: 4,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'pids',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appMsg',\n            id: 6,\n          },\n        ],\n      },\n      {\n        name: 'DirectCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'msg',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'fromPeerId',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'offline',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'hasMore',\n            id: 6,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toPeerIds',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'r',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'id',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'dt',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'roomId',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pushData',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'will',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 19,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 20,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 21,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 22,\n          },\n        ],\n      },\n      {\n        name: 'AckCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'code',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'reason',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uid',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'fromts',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'tots',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'type',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'ids',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'appCode',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appMsg',\n            id: 12,\n          },\n        ],\n      },\n      {\n        name: 'UnreadCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'UnreadTuple',\n            name: 'convs',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'notifTime',\n            id: 2,\n          },\n        ],\n      },\n      {\n        name: 'ConvCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'm',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'unique',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cdate',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'initBy',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'sort',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'skip',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'flag',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'count',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'udate',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'statusSub',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'statusPub',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'statusTTL',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uniqueId',\n            id: 19,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'targetClientId',\n            id: 20,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxReadTimestamp',\n            id: 21,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxAckTimestamp',\n            id: 22,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'queryAllMembers',\n            id: 23,\n          },\n          {\n            rule: 'repeated',\n            type: 'MaxReadTuple',\n            name: 'maxReadTuples',\n            id: 24,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 25,\n          },\n          {\n            rule: 'optional',\n            type: 'ConvMemberInfo',\n            name: 'info',\n            id: 26,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'tempConv',\n            id: 27,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'tempConvTTL',\n            id: 28,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'tempConvIds',\n            id: 29,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'allowedPids',\n            id: 30,\n          },\n          {\n            rule: 'repeated',\n            type: 'ErrorCommand',\n            name: 'failedPids',\n            id: 31,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'next',\n            id: 40,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'results',\n            id: 100,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'where',\n            id: 101,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'attr',\n            id: 103,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'attrModified',\n            id: 104,\n          },\n        ],\n      },\n      {\n        name: 'RoomCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'roomId',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 5,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'roomPeerIds',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'byPeerId',\n            id: 7,\n          },\n        ],\n      },\n      {\n        name: 'LogsCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'l',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'tt',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'tmid',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'checksum',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'stored',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'QueryDirection',\n            name: 'direction',\n            id: 10,\n            options: {\n              default: 'OLD',\n            },\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'tIncluded',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'ttIncluded',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'lctype',\n            id: 13,\n          },\n          {\n            rule: 'repeated',\n            type: 'LogItem',\n            name: 'logs',\n            id: 105,\n          },\n        ],\n        enums: [\n          {\n            name: 'QueryDirection',\n            syntax: 'proto2',\n            values: [\n              {\n                name: 'OLD',\n                id: 1,\n              },\n              {\n                name: 'NEW',\n                id: 2,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        name: 'RcpCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'id',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'read',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 5,\n          },\n        ],\n      },\n      {\n        name: 'ReadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'MaxReadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxAckTimestamp',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxReadTimestamp',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'ReadCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 2,\n          },\n          {\n            rule: 'repeated',\n            type: 'ReadTuple',\n            name: 'convs',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'PresenceCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'StatusType',\n            name: 'status',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'sessionPeerIds',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'ReportCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'initiative',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'type',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'PatchItem',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'recall',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchCode',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'patchReason',\n            id: 12,\n          },\n        ],\n      },\n      {\n        name: 'PatchCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'PatchItem',\n            name: 'patches',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastPatchTime',\n            id: 2,\n          },\n        ],\n      },\n      {\n        name: 'PubsubCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'topic',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'subtopic',\n            id: 4,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'topics',\n            id: 5,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'subtopics',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'results',\n            id: 7,\n          },\n        ],\n      },\n      {\n        name: 'BlacklistCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'srcCid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toPids',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'srcPid',\n            id: 3,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toCids',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'next',\n            id: 6,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'blockedPids',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'blockedCids',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'allowedPids',\n            id: 10,\n          },\n          {\n            rule: 'repeated',\n            type: 'ErrorCommand',\n            name: 'failedPids',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 14,\n          },\n        ],\n      },\n      {\n        name: 'GenericCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'CommandType',\n            name: 'cmd',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'OpType',\n            name: 'op',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appId',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'peerId',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'i',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'installationId',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'priority',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'service',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'serverTs',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'clientTs',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'notificationType',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'DataCommand',\n            name: 'dataMessage',\n            id: 101,\n          },\n          {\n            rule: 'optional',\n            type: 'SessionCommand',\n            name: 'sessionMessage',\n            id: 102,\n          },\n          {\n            rule: 'optional',\n            type: 'ErrorCommand',\n            name: 'errorMessage',\n            id: 103,\n          },\n          {\n            rule: 'optional',\n            type: 'DirectCommand',\n            name: 'directMessage',\n            id: 104,\n          },\n          {\n            rule: 'optional',\n            type: 'AckCommand',\n            name: 'ackMessage',\n            id: 105,\n          },\n          {\n            rule: 'optional',\n            type: 'UnreadCommand',\n            name: 'unreadMessage',\n            id: 106,\n          },\n          {\n            rule: 'optional',\n            type: 'ReadCommand',\n            name: 'readMessage',\n            id: 107,\n          },\n          {\n            rule: 'optional',\n            type: 'RcpCommand',\n            name: 'rcpMessage',\n            id: 108,\n          },\n          {\n            rule: 'optional',\n            type: 'LogsCommand',\n            name: 'logsMessage',\n            id: 109,\n          },\n          {\n            rule: 'optional',\n            type: 'ConvCommand',\n            name: 'convMessage',\n            id: 110,\n          },\n          {\n            rule: 'optional',\n            type: 'RoomCommand',\n            name: 'roomMessage',\n            id: 111,\n          },\n          {\n            rule: 'optional',\n            type: 'PresenceCommand',\n            name: 'presenceMessage',\n            id: 112,\n          },\n          {\n            rule: 'optional',\n            type: 'ReportCommand',\n            name: 'reportMessage',\n            id: 113,\n          },\n          {\n            rule: 'optional',\n            type: 'PatchCommand',\n            name: 'patchMessage',\n            id: 114,\n          },\n          {\n            rule: 'optional',\n            type: 'PubsubCommand',\n            name: 'pubsubMessage',\n            id: 115,\n          },\n          {\n            rule: 'optional',\n            type: 'BlacklistCommand',\n            name: 'blacklistMessage',\n            id: 116,\n          },\n        ],\n      },\n    ],\n    enums: [\n      {\n        name: 'CommandType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'session',\n            id: 0,\n          },\n          {\n            name: 'conv',\n            id: 1,\n          },\n          {\n            name: 'direct',\n            id: 2,\n          },\n          {\n            name: 'ack',\n            id: 3,\n          },\n          {\n            name: 'rcp',\n            id: 4,\n          },\n          {\n            name: 'unread',\n            id: 5,\n          },\n          {\n            name: 'logs',\n            id: 6,\n          },\n          {\n            name: 'error',\n            id: 7,\n          },\n          {\n            name: 'login',\n            id: 8,\n          },\n          {\n            name: 'data',\n            id: 9,\n          },\n          {\n            name: 'room',\n            id: 10,\n          },\n          {\n            name: 'read',\n            id: 11,\n          },\n          {\n            name: 'presence',\n            id: 12,\n          },\n          {\n            name: 'report',\n            id: 13,\n          },\n          {\n            name: 'echo',\n            id: 14,\n          },\n          {\n            name: 'loggedin',\n            id: 15,\n          },\n          {\n            name: 'logout',\n            id: 16,\n          },\n          {\n            name: 'loggedout',\n            id: 17,\n          },\n          {\n            name: 'patch',\n            id: 18,\n          },\n          {\n            name: 'pubsub',\n            id: 19,\n          },\n          {\n            name: 'blacklist',\n            id: 20,\n          },\n          {\n            name: 'goaway',\n            id: 21,\n          },\n        ],\n      },\n      {\n        name: 'OpType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'open',\n            id: 1,\n          },\n          {\n            name: 'add',\n            id: 2,\n          },\n          {\n            name: 'remove',\n            id: 3,\n          },\n          {\n            name: 'close',\n            id: 4,\n          },\n          {\n            name: 'opened',\n            id: 5,\n          },\n          {\n            name: 'closed',\n            id: 6,\n          },\n          {\n            name: 'query',\n            id: 7,\n          },\n          {\n            name: 'query_result',\n            id: 8,\n          },\n          {\n            name: 'conflict',\n            id: 9,\n          },\n          {\n            name: 'added',\n            id: 10,\n          },\n          {\n            name: 'removed',\n            id: 11,\n          },\n          {\n            name: 'refresh',\n            id: 12,\n          },\n          {\n            name: 'refreshed',\n            id: 13,\n          },\n          {\n            name: 'start',\n            id: 30,\n          },\n          {\n            name: 'started',\n            id: 31,\n          },\n          {\n            name: 'joined',\n            id: 32,\n          },\n          {\n            name: 'members_joined',\n            id: 33,\n          },\n          {\n            name: 'left',\n            id: 39,\n          },\n          {\n            name: 'members_left',\n            id: 40,\n          },\n          {\n            name: 'results',\n            id: 42,\n          },\n          {\n            name: 'count',\n            id: 43,\n          },\n          {\n            name: 'result',\n            id: 44,\n          },\n          {\n            name: 'update',\n            id: 45,\n          },\n          {\n            name: 'updated',\n            id: 46,\n          },\n          {\n            name: 'mute',\n            id: 47,\n          },\n          {\n            name: 'unmute',\n            id: 48,\n          },\n          {\n            name: 'status',\n            id: 49,\n          },\n          {\n            name: 'members',\n            id: 50,\n          },\n          {\n            name: 'max_read',\n            id: 51,\n          },\n          {\n            name: 'is_member',\n            id: 52,\n          },\n          {\n            name: 'member_info_update',\n            id: 53,\n          },\n          {\n            name: 'member_info_updated',\n            id: 54,\n          },\n          {\n            name: 'member_info_changed',\n            id: 55,\n          },\n          {\n            name: 'join',\n            id: 80,\n          },\n          {\n            name: 'invite',\n            id: 81,\n          },\n          {\n            name: 'leave',\n            id: 82,\n          },\n          {\n            name: 'kick',\n            id: 83,\n          },\n          {\n            name: 'reject',\n            id: 84,\n          },\n          {\n            name: 'invited',\n            id: 85,\n          },\n          {\n            name: 'kicked',\n            id: 86,\n          },\n          {\n            name: 'upload',\n            id: 100,\n          },\n          {\n            name: 'uploaded',\n            id: 101,\n          },\n          {\n            name: 'subscribe',\n            id: 120,\n          },\n          {\n            name: 'subscribed',\n            id: 121,\n          },\n          {\n            name: 'unsubscribe',\n            id: 122,\n          },\n          {\n            name: 'unsubscribed',\n            id: 123,\n          },\n          {\n            name: 'is_subscribed',\n            id: 124,\n          },\n          {\n            name: 'modify',\n            id: 150,\n          },\n          {\n            name: 'modified',\n            id: 151,\n          },\n          {\n            name: 'block',\n            id: 170,\n          },\n          {\n            name: 'unblock',\n            id: 171,\n          },\n          {\n            name: 'blocked',\n            id: 172,\n          },\n          {\n            name: 'unblocked',\n            id: 173,\n          },\n          {\n            name: 'members_blocked',\n            id: 174,\n          },\n          {\n            name: 'members_unblocked',\n            id: 175,\n          },\n          {\n            name: 'check_block',\n            id: 176,\n          },\n          {\n            name: 'check_result',\n            id: 177,\n          },\n          {\n            name: 'add_shutup',\n            id: 180,\n          },\n          {\n            name: 'remove_shutup',\n            id: 181,\n          },\n          {\n            name: 'query_shutup',\n            id: 182,\n          },\n          {\n            name: 'shutup_added',\n            id: 183,\n          },\n          {\n            name: 'shutup_removed',\n            id: 184,\n          },\n          {\n            name: 'shutup_result',\n            id: 185,\n          },\n          {\n            name: 'shutuped',\n            id: 186,\n          },\n          {\n            name: 'unshutuped',\n            id: 187,\n          },\n          {\n            name: 'members_shutuped',\n            id: 188,\n          },\n          {\n            name: 'members_unshutuped',\n            id: 189,\n          },\n          {\n            name: 'check_shutup',\n            id: 190,\n          },\n        ],\n      },\n      {\n        name: 'StatusType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'on',\n            id: 1,\n          },\n          {\n            name: 'off',\n            id: 2,\n          },\n        ],\n      },\n    ],\n    isNamespace: true,\n  })\n  .build();\n","import messages from './message-compiled';\n\nconst {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  BlacklistCommand,\n  PatchCommand,\n  PatchItem,\n  ConvMemberInfo,\n  CommandType,\n  OpType,\n  StatusType,\n} = messages.push_server.messages2;\n\nexport {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  BlacklistCommand,\n  PatchCommand,\n  PatchItem,\n  ConvMemberInfo,\n  CommandType,\n  OpType,\n  StatusType,\n};\n","const adapters = {};\n\nconst getAdapter = name => {\n  const adapter = adapters[name];\n  if (adapter === undefined) {\n    throw new Error(`${name} adapter is not configured`);\n  }\n  return adapter;\n};\n\n/**\n * 指定 Adapters\n * @function\n * @memberof module:leancloud-realtime\n * @param {Adapters} newAdapters Adapters 的类型请参考 {@link https://url.leanapp.cn/adapter-type-definitions @leancloud/adapter-types} 中的定义\n */\nconst setAdapters = newAdapters => {\n  Object.assign(adapters, newAdapters);\n};\n\nexport { getAdapter, setAdapters };\n","/* eslint-disable */\nexport default (typeof global !== 'undefined'\n  ? global\n  : typeof window !== 'undefined' ? window : {});\n","import d from 'debug';\n\nconst EXPIRED = Symbol('expired');\nconst debug = d('LC:Expirable');\nexport default class Expirable {\n  constructor(value, ttl) {\n    this.originalValue = value;\n    if (typeof ttl === 'number') {\n      this.expiredAt = Date.now() + ttl;\n    }\n  }\n\n  get value() {\n    const expired = this.expiredAt && this.expiredAt <= Date.now();\n    if (expired) debug(`expired: ${this.originalValue}`);\n    return expired ? EXPIRED : this.originalValue;\n  }\n}\nExpirable.EXPIRED = EXPIRED;\n","import d from 'debug';\nimport Expirable from './expirable';\n\nconst debug = d('LC:Cache');\nexport default class Cache {\n  constructor(name = 'anonymous') {\n    this.name = name;\n    this._map = {};\n  }\n\n  get(key) {\n    const cache = this._map[key];\n    if (cache) {\n      const { value } = cache;\n      if (value !== Expirable.EXPIRED) {\n        debug('[%s] hit: %s', this.name, key);\n        return value;\n      }\n      delete this._map[key];\n    }\n    debug(`[${this.name}] missed: ${key}`);\n    return null;\n  }\n\n  set(key, value, ttl) {\n    debug('[%s] set: %s %d', this.name, key, ttl);\n    this._map[key] = new Expirable(value, ttl);\n  }\n}\n","import isPlainObject from 'lodash/isPlainObject';\nimport d from 'debug';\nimport global from './global';\n\nexport { global };\n\n/**\n * 调试日志控制器\n * @const\n * @memberof module:leancloud-realtime\n * @example\n * debug.enable();  // 启用调试日志\n * debug.disable(); // 关闭调试日志\n */\nconst debug = {\n  enable: (namespaces = 'LC*') => d.enable(namespaces),\n  disable: d.disable,\n};\nexport { debug };\n\nexport const tryAll = promiseConstructors => {\n  const promise = new Promise(promiseConstructors[0]);\n  if (promiseConstructors.length === 1) {\n    return promise;\n  }\n  return promise.catch(() => tryAll(promiseConstructors.slice(1)));\n};\n\n// eslint-disable-next-line no-sequences\nexport const tap = interceptor => value => (interceptor(value), value);\n\nexport const finalize = callback => [\n  // eslint-disable-next-line no-sequences\n  value => (callback(), value),\n  error => {\n    callback();\n    throw error;\n  },\n];\n\nexport { default as Expirable } from './expirable';\nexport { default as Cache } from './cache';\n\n/**\n * 将对象转换为 Date，支持 string、number、ProtoBuf Long 以及 LeanCloud 的 Date 类型，\n * 其他情况下（包括对象为 falsy）返回原值。\n * @private\n */\nexport const decodeDate = date => {\n  if (!date) return date;\n  if (typeof date === 'string' || typeof date === 'number') {\n    return new Date(date);\n  }\n  if (date.__type === 'Date' && date.iso) {\n    return new Date(date.iso);\n  }\n  // Long\n  if (typeof date.toNumber === 'function') {\n    return new Date(date.toNumber());\n  }\n  return date;\n};\n/**\n * 获取 Date 的毫秒数，如果不是一个 Date 返回 undefined。\n * @private\n */\nexport const getTime = date =>\n  date && date.getTime ? date.getTime() : undefined;\n\n/**\n * 解码对象中的 LeanCloud 数据结构。\n * 目前仅会处理 Date 类型。\n * @private\n */\nexport const decode = value => {\n  if (!value) return value;\n  if (value.__type === 'Date' && value.iso) {\n    return new Date(value.iso);\n  }\n  if (Array.isArray(value)) {\n    return value.map(decode);\n  }\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(\n      (result, key) => ({\n        ...result,\n        [key]: decode(value[key]),\n      }),\n      {}\n    );\n  }\n  return value;\n};\n/**\n * 将对象中的特殊类型编码为 LeanCloud 数据结构。\n * 目前仅会处理 Date 类型。\n * @private\n */\nexport const encode = value => {\n  if (value instanceof Date) return { __type: 'Date', iso: value.toJSON() };\n  if (Array.isArray(value)) {\n    return value.map(encode);\n  }\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(\n      (result, key) => ({\n        ...result,\n        [key]: encode(value[key]),\n      }),\n      {}\n    );\n  }\n  return value;\n};\n\nexport const keyRemap = (keymap, obj) =>\n  Object.keys(obj).reduce((newObj, key) => {\n    const newKey = keymap[key] || key;\n    return Object.assign(newObj, {\n      [newKey]: obj[key],\n    });\n  }, {});\n\nexport const isIE10 =\n  global.navigator &&\n  global.navigator.userAgent &&\n  global.navigator.userAgent.indexOf('MSIE 10.') !== -1;\n\n/* eslint-disable no-proto */\nexport const getStaticProperty = (klass, property) =>\n  klass[property] ||\n  (klass.__proto__ ? getStaticProperty(klass.__proto__, property) : undefined);\n/* eslint-enable no-proto */\n\nexport const union = (a, b) => Array.from(new Set([...a, ...b]));\nexport const difference = (a, b) =>\n  Array.from((bSet => new Set(a.filter(x => !bSet.has(x))))(new Set(b)));\n\nconst map = new WeakMap();\n\n// protected property helper\nexport const internal = object => {\n  if (!map.has(object)) {\n    map.set(object, {});\n  }\n  return map.get(object);\n};\n\nexport const compact = (obj, filter) => {\n  if (!isPlainObject(obj)) return obj;\n  const object = { ...obj };\n  Object.keys(object).forEach(prop => {\n    const value = object[prop];\n    if (value === filter) {\n      delete object[prop];\n    } else {\n      object[prop] = compact(value, filter);\n    }\n  });\n  return object;\n};\n\n// debug utility\nconst removeNull = obj => compact(obj, null);\nexport const trim = message => removeNull(JSON.parse(JSON.stringify(message)));\n\nexport const ensureArray = target => {\n  if (Array.isArray(target)) {\n    return target;\n  }\n  if (target === undefined || target === null) {\n    return [];\n  }\n  return [target];\n};\n\nexport const setValue = (target, key, value) => {\n  // '.' is not allowed in Class keys, escaping is not in concern now.\n  const segs = key.split('.');\n  const lastSeg = segs.pop();\n  let currentTarget = target;\n  segs.forEach(seg => {\n    if (currentTarget[seg] === undefined) currentTarget[seg] = {};\n    currentTarget = currentTarget[seg];\n  });\n  currentTarget[lastSeg] = value;\n  return target;\n};\n\nexport const isWeapp =\n  // eslint-disable-next-line no-undef\n  typeof wx === 'object' && typeof wx.connectSocket === 'function';\n\n// throttle decorator\nexport const throttle = wait => (target, property, descriptor) => {\n  const callback = descriptor.value;\n  // very naive, internal use only\n  if (callback.length) {\n    throw new Error('throttled function should not accept any arguments');\n  }\n  return {\n    ...descriptor,\n    value() {\n      let { throttleMeta } = internal(this);\n      if (!throttleMeta) {\n        throttleMeta = {};\n        internal(this).throttleMeta = throttleMeta;\n      }\n      let { [property]: propertyMeta } = throttleMeta;\n      if (!propertyMeta) {\n        propertyMeta = {};\n        throttleMeta[property] = propertyMeta;\n      }\n      const { previouseTimestamp = 0, timeout } = propertyMeta;\n      const now = Date.now();\n      const remainingTime = wait - (now - previouseTimestamp);\n      if (remainingTime <= 0) {\n        throttleMeta[property].previouseTimestamp = now;\n        callback.apply(this);\n      } else if (!timeout) {\n        propertyMeta.timeout = setTimeout(() => {\n          propertyMeta.previouseTimestamp = Date.now();\n          delete propertyMeta.timeout;\n          callback.apply(this);\n        }, remainingTime);\n      }\n    },\n  };\n};\n\nexport const isCNApp = appId => appId.slice(-9) !== '-MdYXbMMI';\n\nexport const equalBuffer = (buffer1, buffer2) => {\n  if (!buffer1 || !buffer2) return false;\n  if (buffer1.byteLength !== buffer2.byteLength) return false;\n  const a = new Uint8Array(buffer1);\n  const b = new Uint8Array(buffer2);\n  return !a.some((value, index) => value !== b[index]);\n};\n","// WebSocket with auto reconnecting feature, backup endpoint and EventEmitter interface.\n\nimport d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport StateMachine from 'javascript-state-machine';\nimport { getAdapter } from './adapter';\nimport { ensureArray, tryAll, global } from './utils';\n\nconst debug = d('LC:WebSocketPlus');\n\nexport const OPEN = 'open';\nexport const DISCONNECT = 'disconnect';\nexport const RECONNECT = 'reconnect';\nexport const RETRY = 'retry';\nexport const SCHEDULE = 'schedule';\nexport const OFFLINE = 'offline';\nexport const ONLINE = 'online';\nexport const ERROR = 'error';\nexport const MESSAGE = 'message';\n\nconst HEARTBEAT_TIME = 180000;\nconst TIMEOUT_TIME = 380000;\n\nconst DEFAULT_RETRY_STRATEGY = attempt => Math.min(1000 * 2 ** attempt, 300000);\n\nconst requireConnected = (target, name, descriptor) => ({\n  ...descriptor,\n  value: function requireConnectedWrapper(...args) {\n    this.checkConnectionAvailability(name);\n    return descriptor.value.call(this, ...args);\n  },\n});\n\nclass WebSocketPlus extends EventEmitter {\n  get urls() {\n    return this._urls;\n  }\n\n  set urls(urls) {\n    this._urls = ensureArray(urls);\n  }\n\n  constructor(getUrls, protocol) {\n    super();\n    this.init();\n    this._protocol = protocol;\n    Promise.resolve(typeof getUrls === 'function' ? getUrls() : getUrls)\n      .then(ensureArray)\n      .then(urls => {\n        this._urls = urls;\n        return this._open();\n      })\n      .then(() => {\n        this.__postponeTimeoutTimer = this._postponeTimeoutTimer.bind(this);\n        if (global.addEventListener) {\n          this.__pause = () => {\n            if (this.can('pause')) this.pause();\n          };\n          this.__resume = () => {\n            if (this.can('resume')) this.resume();\n          };\n          global.addEventListener('offline', this.__pause);\n          global.addEventListener('online', this.__resume);\n        }\n        this.open();\n      })\n      .catch(this.throw.bind(this));\n  }\n\n  _open() {\n    return this._createWs(this._urls, this._protocol).then(ws => {\n      const [first, ...reset] = this._urls;\n      this._urls = [...reset, first];\n      return ws;\n    });\n  }\n\n  _createWs(urls, protocol) {\n    return tryAll(\n      urls.map(url => (resolve, reject) => {\n        debug(`connect [${url}] ${protocol}`);\n        const WebSocket = getAdapter('WebSocket');\n        const ws = protocol ? new WebSocket(url, protocol) : new WebSocket(url);\n        ws.binaryType = this.binaryType || 'arraybuffer';\n        ws.onopen = () => resolve(ws);\n        ws.onclose = error => {\n          if (error instanceof Error) {\n            return reject(error);\n          }\n          // in browser, error event is useless\n          return reject(new Error(`Failed to connect [${url}]`));\n        };\n        ws.onerror = ws.onclose;\n      })\n    ).then(ws => {\n      this._ws = ws;\n      this._ws.onclose = this._handleClose.bind(this);\n      this._ws.onmessage = this._handleMessage.bind(this);\n      return ws;\n    });\n  }\n\n  _destroyWs() {\n    const ws = this._ws;\n    if (!ws) return;\n    ws.onopen = null;\n    ws.onclose = null;\n    ws.onerror = null;\n    ws.onmessage = null;\n    this._ws = null;\n    ws.close();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onbeforeevent(event, from, to, ...payload) {\n    debug(`${event}: ${from} -> ${to} %o`, payload);\n  }\n\n  onopen() {\n    this.emit(OPEN);\n  }\n\n  onconnected() {\n    this._startConnectionKeeper();\n  }\n\n  onleaveconnected(event, from, to) {\n    this._stopConnectionKeeper();\n    this._destroyWs();\n    if (to === 'offline' || to === 'disconnected') {\n      this.emit(DISCONNECT);\n    }\n  }\n\n  onpause() {\n    this.emit(OFFLINE);\n  }\n\n  onbeforeresume() {\n    this.emit(ONLINE);\n  }\n\n  onreconnect() {\n    this.emit(RECONNECT);\n  }\n\n  ondisconnected(event, from, to, attempt = 0) {\n    const delay =\n      from === OFFLINE ? 0 : DEFAULT_RETRY_STRATEGY.call(null, attempt);\n    debug(`schedule attempt=${attempt} delay=${delay}`);\n    this.emit(SCHEDULE, attempt, delay);\n    if (this.__scheduledRetry) {\n      clearTimeout(this.__scheduledRetry);\n    }\n    this.__scheduledRetry = setTimeout(() => {\n      if (this.is('disconnected')) {\n        this.retry(attempt);\n      }\n    }, delay);\n  }\n\n  onretry(event, from, to, attempt = 0) {\n    this.emit(RETRY, attempt);\n    this._open().then(\n      () => this.can('reconnect') && this.reconnect(),\n      () => this.can('fail') && this.fail(attempt + 1)\n    );\n  }\n\n  onerror(event, from, to, error) {\n    this.emit(ERROR, error);\n  }\n\n  onclose() {\n    if (global.removeEventListener) {\n      if (this.__pause) global.removeEventListener('offline', this.__pause);\n      if (this.__resume) global.removeEventListener('online', this.__resume);\n    }\n  }\n\n  checkConnectionAvailability(name = 'API') {\n    if (!this.is('connected')) {\n      const currentState = this.current;\n      console.warn(\n        `${name} should not be called when the connection is ${currentState}`\n      );\n      if (this.is('disconnected') || this.is('reconnecting')) {\n        console.warn(\n          'disconnect and reconnect event should be handled to avoid such calls.'\n        );\n      }\n      throw new Error('Connection unavailable');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  _ping() {\n    debug('ping');\n    try {\n      this.ping();\n    } catch (error) {\n      console.warn(`websocket ping error: ${error.message}`);\n    }\n  }\n\n  ping() {\n    if (this._ws.ping) {\n      this._ws.ping();\n    } else {\n      console.warn(`The WebSocket implement does not support sending ping frame.\n        Override ping method to use application defined ping/pong mechanism.`);\n    }\n  }\n\n  _postponeTimeoutTimer() {\n    debug('_postponeTimeoutTimer');\n    this._clearTimeoutTimers();\n    this._timeoutTimer = setTimeout(() => {\n      debug('timeout');\n      this.disconnect();\n    }, TIMEOUT_TIME);\n  }\n\n  _clearTimeoutTimers() {\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n    }\n  }\n\n  _startConnectionKeeper() {\n    debug('start connection keeper');\n    this._heartbeatTimer = setInterval(this._ping.bind(this), HEARTBEAT_TIME);\n    const addListener = this._ws.addListener || this._ws.addEventListener;\n    if (!addListener) {\n      debug('connection keeper disabled due to the lack of #addEventListener.');\n      return;\n    }\n    addListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n    addListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n    this._postponeTimeoutTimer();\n  }\n\n  _stopConnectionKeeper() {\n    debug('stop connection keeper');\n    // websockets/ws#489\n    const removeListener =\n      this._ws.removeListener || this._ws.removeEventListener;\n    if (removeListener) {\n      removeListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n      removeListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n      this._clearTimeoutTimers();\n    }\n    if (this._heartbeatTimer) {\n      clearInterval(this._heartbeatTimer);\n    }\n  }\n\n  _handleClose(event) {\n    debug(`ws closed [${event.code}] ${event.reason}`);\n    // socket closed manually, ignore close event.\n    if (this.isFinished()) return;\n    this.handleClose(event);\n  }\n\n  handleClose() {\n    // reconnect\n    this.disconnect();\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  send(data) {\n    debug('send', data);\n    this._ws.send(data);\n  }\n\n  _handleMessage(event) {\n    debug('message', event.data);\n    this.handleMessage(event.data);\n  }\n\n  handleMessage(message) {\n    this.emit(MESSAGE, message);\n  }\n}\n\nStateMachine.create({\n  target: WebSocketPlus.prototype,\n  initial: {\n    state: 'initialized',\n    event: 'init',\n    defer: true,\n  },\n  terminal: 'closed',\n  events: [\n    {\n      name: 'open',\n      from: 'initialized',\n      to: 'connected',\n    },\n    {\n      name: 'disconnect',\n      from: 'connected',\n      to: 'disconnected',\n    },\n    {\n      name: 'retry',\n      from: 'disconnected',\n      to: 'reconnecting',\n    },\n    {\n      name: 'fail',\n      from: 'reconnecting',\n      to: 'disconnected',\n    },\n    {\n      name: 'reconnect',\n      from: 'reconnecting',\n      to: 'connected',\n    },\n    {\n      name: 'pause',\n      from: ['connected', 'disconnected', 'reconnecting'],\n      to: 'offline',\n    },\n    {},\n    {\n      name: 'resume',\n      from: 'offline',\n      to: 'disconnected',\n    },\n    {\n      name: 'close',\n      from: ['connected', 'disconnected', 'reconnecting', 'offline'],\n      to: 'closed',\n    },\n    {\n      name: 'throw',\n      from: '*',\n      to: 'error',\n    },\n  ],\n});\n\nexport default WebSocketPlus;\n","export const error = Object.freeze({\n  1000: {\n    name: 'CLOSE_NORMAL',\n  },\n  1006: {\n    name: 'CLOSE_ABNORMAL',\n  },\n  4100: {\n    name: 'APP_NOT_AVAILABLE',\n    message: 'App not exists or realtime message service is disabled.',\n  },\n  4102: {\n    name: 'SIGNATURE_FAILED',\n    message: 'Login signature mismatch.',\n  },\n  4103: {\n    name: 'INVALID_LOGIN',\n    message: 'Malformed clientId.',\n  },\n  4105: {\n    name: 'SESSION_REQUIRED',\n    message: 'Message sent before session opened.',\n  },\n  4107: {\n    name: 'READ_TIMEOUT',\n  },\n  4108: {\n    name: 'LOGIN_TIMEOUT',\n  },\n  4109: {\n    name: 'FRAME_TOO_LONG',\n  },\n  4110: {\n    name: 'INVALID_ORIGIN',\n    message: 'Access denied by domain whitelist.',\n  },\n  4111: {\n    name: 'SESSION_CONFLICT',\n  },\n  4112: {\n    name: 'SESSION_TOKEN_EXPIRED',\n  },\n  4113: {\n    name: 'APP_QUOTA_EXCEEDED',\n    message: 'The daily active users limit exceeded.',\n  },\n  4116: {\n    name: 'MESSAGE_SENT_QUOTA_EXCEEDED',\n    message: 'Command sent too fast.',\n  },\n  4200: {\n    name: 'INTERNAL_ERROR',\n    message: 'Internal error, please contact LeanCloud for support.',\n  },\n  4301: {\n    name: 'CONVERSATION_API_FAILED',\n    message: 'Upstream Conversatoin API failed, see error.detail for details.',\n  },\n  4302: {\n    name: 'CONVERSATION_SIGNATURE_FAILED',\n    message: 'Conversation action signature mismatch.',\n  },\n  4303: {\n    name: 'CONVERSATION_NOT_FOUND',\n  },\n  4304: {\n    name: 'CONVERSATION_FULL',\n  },\n  4305: {\n    name: 'CONVERSATION_REJECTED_BY_APP',\n    message: 'Conversation action rejected by hook.',\n  },\n  4306: {\n    name: 'CONVERSATION_UPDATE_FAILED',\n  },\n  4307: {\n    name: 'CONVERSATION_READ_ONLY',\n  },\n  4308: {\n    name: 'CONVERSATION_NOT_ALLOWED',\n  },\n  4309: {\n    name: 'CONVERSATION_UPDATE_REJECTED',\n    message: 'Conversation update rejected because the client is not a member.',\n  },\n  4310: {\n    name: 'CONVERSATION_QUERY_FAILED',\n    message: 'Conversation query failed because it is too expansive.',\n  },\n  4311: {\n    name: 'CONVERSATION_LOG_FAILED',\n  },\n  4312: {\n    name: 'CONVERSATION_LOG_REJECTED',\n    message:\n      'Message query rejected because the client is not a member of the conversation.',\n  },\n  4313: {\n    name: 'SYSTEM_CONVERSATION_REQUIRED',\n  },\n  4314: {\n    name: 'NORMAL_CONVERSATION_REQUIRED',\n  },\n  4315: {\n    name: 'CONVERSATION_BLACKLISTED',\n    message: 'Blacklisted in the conversation.',\n  },\n  4316: {\n    name: 'TRANSIENT_CONVERSATION_REQUIRED',\n  },\n  4317: {\n    name: 'CONVERSATION_MEMBERSHIP_REQUIRED',\n  },\n  4318: {\n    name: 'CONVERSATION_API_QUOTA_EXCEEDED',\n    message: 'LeanCloud API quota exceeded. You may upgrade your plan.',\n  },\n  4323: {\n    name: 'TEMPORARY_CONVERSATION_EXPIRED',\n    message: 'Temporary conversation expired or does not exist.',\n  },\n  4401: {\n    name: 'INVALID_MESSAGING_TARGET',\n    message: 'Conversation does not exist or client is not a member.',\n  },\n  4402: {\n    name: 'MESSAGE_REJECTED_BY_APP',\n    message: 'Message rejected by hook.',\n  },\n  4403: {\n    name: 'MESSAGE_OWNERSHIP_REQUIRED',\n  },\n  4404: {\n    name: 'MESSAGE_NOT_FOUND',\n  },\n  4405: {\n    name: 'MESSAGE_UPDATE_REJECTED_BY_APP',\n    message: 'Message update rejected by hook.',\n  },\n  4406: {\n    name: 'MESSAGE_EDIT_DISABLED',\n  },\n  4407: {\n    name: 'MESSAGE_RECALL_DISABLED',\n  },\n  5130: {\n    name: 'OWNER_PROMOTION_NOT_ALLOWED',\n    message: \"Updating a member's role to owner is not allowed.\",\n  },\n});\n\nexport const ErrorCode = Object.freeze(\n  Object.keys(error).reduce(\n    (result, code) =>\n      Object.assign(result, {\n        [error[code].name]: Number(code),\n      }),\n    {}\n  )\n);\n\nexport const createError = ({\n  code,\n  reason,\n  appCode,\n  detail,\n  error: errorMessage,\n}) => {\n  let message = reason || detail || errorMessage;\n  let name = reason;\n  if (!message && error[code]) {\n    ({ name } = error[code]);\n    message = error[code].message || name;\n  }\n  if (!message) {\n    message = `Unknow Error: ${code}`;\n  }\n  const err = new Error(message);\n  return Object.assign(err, {\n    code,\n    appCode,\n    detail,\n    name,\n  });\n};\n","import d from 'debug';\nimport values from 'lodash/values';\nimport WebSocketPlus, {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n} from './websocket-plus';\nimport { createError } from './error';\nimport { GenericCommand, CommandType, OpType } from '../proto/message';\nimport { trim, equalBuffer } from './utils';\n\nconst debug = d('LC:Connection');\n\nconst COMMAND_TIMEOUT = 20000;\n\nconst EXPIRE = Symbol('expire');\n\nconst isIdempotentCommand = command =>\n  !(\n    command.cmd === CommandType.direct ||\n    (command.cmd === CommandType.session && command.op === OpType.open) ||\n    (command.cmd === CommandType.conv &&\n      (command.op === OpType.start ||\n        command.op === OpType.update ||\n        command.op === OpType.members))\n  );\n\nexport {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n  EXPIRE,\n};\n\nexport default class Connection extends WebSocketPlus {\n  constructor(getUrl, { format, version }) {\n    debug('initializing Connection');\n    const protocolString = `lc.${format}.${version}`;\n    super(getUrl, protocolString);\n    this._protocolFormat = format;\n    this._commands = {};\n    this._serialId = 0;\n  }\n\n  async send(command, waitingForRespond = true) {\n    let buffer;\n    let serialId;\n    if (waitingForRespond) {\n      if (isIdempotentCommand(command)) {\n        buffer = command.toArrayBuffer();\n        const duplicatedCommand = values(this._commands).find(\n          ({ buffer: targetBuffer, command: targetCommand }) =>\n            targetCommand.cmd === command.cmd &&\n            targetCommand.op === command.op &&\n            equalBuffer(targetBuffer, buffer)\n        );\n        if (duplicatedCommand) {\n          console.warn(\n            `Duplicated command [cmd:${command.cmd} op:${command.op}] is throttled.`\n          );\n          return duplicatedCommand.promise;\n        }\n      }\n\n      this._serialId += 1;\n      serialId = this._serialId;\n      command.i = serialId; // eslint-disable-line no-param-reassign\n    }\n    if (debug.enabled) debug('↑ %O sent', trim(command));\n\n    let message;\n    if (this._protocolFormat === 'proto2base64') {\n      message = command.toBase64();\n    } else if (command.toArrayBuffer) {\n      message = command.toArrayBuffer();\n    }\n    if (!message) {\n      throw new TypeError(`${command} is not a GenericCommand`);\n    }\n\n    super.send(message);\n\n    if (!waitingForRespond) return undefined;\n    const promise = new Promise((resolve, reject) => {\n      this._commands[serialId] = {\n        command,\n        buffer,\n        resolve,\n        reject,\n        timeout: setTimeout(() => {\n          if (this._commands[serialId]) {\n            if (debug.enabled) debug('✗ %O timeout', trim(command));\n            reject(\n              createError({\n                error: `Command Timeout [cmd:${command.cmd} op:${command.op}]`,\n                name: 'COMMAND_TIMEOUT',\n              })\n            );\n            delete this._commands[serialId];\n          }\n        }, COMMAND_TIMEOUT),\n      };\n    });\n    this._commands[serialId].promise = promise;\n    return promise;\n  }\n\n  handleMessage(msg) {\n    let message;\n    try {\n      message = GenericCommand.decode(msg);\n      if (debug.enabled) debug('↓ %O received', trim(message));\n    } catch (e) {\n      console.warn('Decode message failed:', e.message, msg);\n      return;\n    }\n    const serialId = message.i;\n    if (serialId) {\n      if (this._commands[serialId]) {\n        clearTimeout(this._commands[serialId].timeout);\n        if (message.cmd === CommandType.error) {\n          this._commands[serialId].reject(createError(message.errorMessage));\n        } else {\n          this._commands[serialId].resolve(message);\n        }\n        delete this._commands[serialId];\n      } else {\n        console.warn(`Unexpected command received with serialId [${serialId}],\n         which have timed out or never been requested.`);\n      }\n    } else {\n      switch (message.cmd) {\n        case CommandType.error: {\n          this.emit(ERROR, createError(message.errorMessage));\n          return;\n        }\n        case CommandType.goaway: {\n          this.emit(EXPIRE);\n          return;\n        }\n        default: {\n          this.emit(MESSAGE, message);\n        }\n      }\n    }\n  }\n\n  ping() {\n    return this.send(\n      new GenericCommand({\n        cmd: CommandType.echo,\n      })\n    ).catch(error => debug('ping failed:', error));\n  }\n}\n","import d from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { timeout } from 'promise-timeout';\nimport { getAdapter } from '../adapter';\nimport { createError } from '../error';\n\nconst debug = d('LC:request');\n\nexport default ({\n  method = 'GET',\n  url: _url,\n  query,\n  headers,\n  data,\n  timeout: time,\n}) => {\n  let url = _url;\n  if (query) {\n    const queryString = Object.keys(query)\n      .map(key => {\n        const value = query[key];\n        if (value === undefined) return undefined;\n        const v = isPlainObject(value) ? JSON.stringify(value) : value;\n        return `${encodeURIComponent(key)}=${encodeURIComponent(v)}`;\n      })\n      .filter(qs => qs)\n      .join('&');\n    url = `${url}?${queryString}`;\n  }\n  debug('Req: %O %O %O', method, url, { headers, data });\n  const request = getAdapter('request');\n  const promise = request(url, { method, headers, data })\n    .then(response => {\n      if (response.ok === false) {\n        const error = createError(response.data);\n        error.response = response;\n        throw error;\n      }\n      debug('Res: %O %O %O', url, response.status, response.data);\n      return response.data;\n    })\n    .catch(error => {\n      if (error.response) {\n        debug(\n          'Error: %O %O %O',\n          url,\n          error.response.status,\n          error.response.data\n        );\n      }\n      throw error;\n    });\n  return time ? timeout(promise, time) : promise;\n};\n","/* eslint-disable max-len */\n\n/**\n * 插件接口\n *\n * <p>\n * 插件是由一个或多个扩展点组成的字典。SDK 的扩展点可以分为两类：\n * <p>\n * 第一类扩展点是类实例化之后的回调，包括 <code>Realtime</code>、<code>IMClient</code> 与 <code>Conversation</code>。这些扩展点可以通过一个同步的 Decorator 进行扩展。Decorator 接受一个对应的实例并对其进行一些操作。\n * 特别的，由于注册自定义消息类这个需求特别的常用，额外定义一个 messageClasses 扩展点来做这件事情。\n * <p>\n * 第二类扩展点是在某些事件处理前、后可以注入逻辑的点。\n * 其中 <code>beforeMessageParse</code>，<code>afterMessageParse</code> 可以通过一个异步的 Middleware 进行扩展。Middleware 接受一个对象，返回一个同类型对象或同类型对象的 Promise。\n * <code>beforeMessageDispatch</code> 可以通过返回一个 boolean 类型的 shouldDispatch 值来控制是否要继续派发收到的消息。\n * <p>\n * 如果使用了多个插件，这些 hook 会按照插件数组的顺序依次执行。前一个 Middleware 的返回值会作为参数传给后一个 Middleware。\n *\n * @interface Plugin\n * @since 3.1.0\n */\n\n/* eslint-enable max-len */\n\n/**\n * 插件名称，用于在日志中显示异常的插件\n *\n * @name Plugin.name\n * @type string\n */\n\n/**\n * 插件注册的消息类型\n *\n * @name Plugin.messageClasses\n * @type AVMessage[]\n */\n\n/**\n * 在 Realtime 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Realtime 实例。\n *\n * @name Plugin.onRealtimeCreate\n * @type Function\n */\n\n/**\n * 在 IMClient 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 IMClient 实例。\n *\n * @name Plugin.onIMClientCreate\n * @type Function\n */\n\n/**\n * 在 Conversation 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Conversation 实例。\n * 需要注意的是，该扩展点并不是在 <code>{@link IMClient#createConversation}</code> 方法创建成功后调用的 hook，\n * 而是所有的 Conversation 实例化的时候（包括但不限于 query 时）调用的 hook。\n *\n * @name Plugin.onConversationCreate\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之前，对原始消息进行修改。\n * <p>\n * 接受一个参数为原始消息，是某个消息的内容，一般是一个 JSON 对象。\n * 该方法需要返回一个 JSON 对象。如果这个结果是异步得到的，也可以返回一个 Promise(fulfilled with a JSON)。\n *\n * @name Plugin.beforeMessageParse\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之后，对消息实例进行修改。\n * <p>\n * 接受一个参数为消息实例，一般是一个已注册的 Message 类或其子类的实例。\n * 该方法需要返回一个同类型的消息实例。如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.afterMessageParse\n * @type Function\n */\n\n/**\n * 在收到消息之后，派发消息之前，控制是否派发这条消息。\n * <p>\n * 接受参数为 message 与 conversation。\n * 该方法需要返回 boolean 类型的值，如果返回 false 则 SDK 不再派发这条消息，后续的 beforeMessageDispatch 也不会执行。\n * 如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.beforeMessageDispatch\n * @type Function\n * @since 3.4.0\n */\n\nimport { ensureArray, tap } from './utils';\n\nconst checkType = middleware => param => {\n  const { constructor } = param;\n  return Promise.resolve(param)\n    .then(middleware)\n    .then(\n      tap(result => {\n        if (result === undefined || result === null) {\n          // eslint-disable-next-line max-len\n          return console.warn(\n            `Middleware[${middleware._pluginName ||\n              'anonymous plugin'}:${middleware.name ||\n              'anonymous middleware'}] param/return types not match. It returns ${result} while a ${\n              param.constructor.name\n            } expected.`\n          );\n        }\n        if (!(result instanceof constructor)) {\n          // eslint-disable-next-line max-len\n          return console.warn(\n            `Middleware[${middleware._pluginName ||\n              'anonymous plugin'}:${middleware.name ||\n              'anonymous middleware'}] param/return types not match. It returns a ${\n              result.constructor.name\n            } while a ${param.constructor.name} expected.`\n          );\n        }\n        return 0;\n      })\n    );\n};\n\nexport const applyDecorators = (decorators, target) => {\n  if (decorators) {\n    decorators.forEach(decorator => {\n      try {\n        decorator(target);\n      } catch (error) {\n        if (decorator._pluginName) {\n          error.message += `[${decorator._pluginName}]`;\n        }\n        throw error;\n      }\n    });\n  }\n};\n\nexport const applyMiddlewares = middlewares => target =>\n  ensureArray(middlewares).reduce(\n    (previousPromise, middleware) =>\n      previousPromise.then(checkType(middleware)).catch(error => {\n        if (middleware._pluginName) {\n          // eslint-disable-next-line no-param-reassign\n          error.message += `[${middleware._pluginName}]`;\n        }\n        throw error;\n      }),\n    Promise.resolve(target)\n  );\n\nexport const applyDispatcher = (dispatchers, payload) =>\n  ensureArray(dispatchers).reduce(\n    (resultPromise, dispatcher) =>\n      resultPromise\n        .then(\n          shouldDispatch =>\n            shouldDispatch === false ? false : dispatcher(...payload)\n        )\n        .catch(error => {\n          if (dispatcher._pluginName) {\n            // eslint-disable-next-line no-param-reassign\n            error.message += `[${dispatcher._pluginName}]`;\n          }\n          throw error;\n        }),\n    Promise.resolve(true)\n  );\n","// eslint-disable-next-line max-classes-per-file\nimport d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport shuffle from 'lodash/shuffle';\nimport Connection, {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n  EXPIRE,\n} from './connection';\nimport { ErrorCode, createError } from './error';\nimport {\n  tap,\n  Cache,\n  trim,\n  internal,\n  ensureArray,\n  isWeapp,\n  isCNApp,\n} from './utils';\nimport request from './utils/request';\nimport { applyDecorators, applyDispatcher } from './plugin';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:Realtime');\nconst routerCache = new Cache('push-router');\n\nconst initializedApp = {};\n\nexport default class Realtime extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @param  {Object} options\n   * @param  {String} options.appId\n   * @param  {String} options.appKey （since 4.0.0）\n   * @param  {String|Object} [options.server] 指定服务器域名，中国节点应用此参数必填（since 4.0.0）\n   * @param  {Boolean} [options.noBinary=false] 设置 WebSocket 使用字符串格式收发消息（默认为二进制格式）。\n   *                                            适用于 WebSocket 实现不支持二进制数据格式的情况\n   * @param  {Boolean} [options.ssl=true] 使用 wss 进行连接\n   * @param  {String|String[]} [options.RTMServers] 指定私有部署的 RTM 服务器地址（since 4.0.0）\n   * @param  {Plugin[]} [options.plugins] 加载插件（since 3.1.0）\n   */\n  constructor({ plugins, ...options }) {\n    debug('initializing Realtime %s %O', VERSION, options);\n    super();\n    const { appId } = options;\n    if (typeof appId !== 'string') {\n      throw new TypeError(`appId [${appId}] is not a string`);\n    }\n    if (initializedApp[appId]) {\n      throw new Error(`App [${appId}] is already initialized.`);\n    }\n    initializedApp[appId] = true;\n    if (typeof options.appKey !== 'string') {\n      throw new TypeError(`appKey [${options.appKey}] is not a string`);\n    }\n    if (isCNApp(appId)) {\n      if (!options.server) {\n        throw new TypeError(\n          `server option is required for apps from CN region`\n        );\n      }\n    }\n    this._options = {\n      appId: undefined,\n      appKey: undefined,\n      noBinary: false,\n      ssl: true,\n      RTMServerName:\n        typeof process !== 'undefined'\n          ? process.env.RTM_SERVER_NAME\n          : undefined, // undocumented on purpose, internal use only\n      ...options,\n    };\n    this._cache = new Cache('endpoints');\n    const _this = internal(this);\n    _this.clients = new Set();\n    _this.pendingClients = new Set();\n    const mergedPlugins = [\n      ...ensureArray(Realtime.__preRegisteredPlugins),\n      ...ensureArray(plugins),\n    ];\n    debug(\n      'Using plugins %o',\n      mergedPlugins.map(plugin => plugin.name)\n    );\n    this._plugins = mergedPlugins.reduce((result, plugin) => {\n      Object.keys(plugin).forEach(hook => {\n        if ({}.hasOwnProperty.call(plugin, hook) && hook !== 'name') {\n          if (plugin.name) {\n            ensureArray(plugin[hook]).forEach(value => {\n              // eslint-disable-next-line no-param-reassign\n              value._pluginName = plugin.name;\n            });\n          }\n          // eslint-disable-next-line no-param-reassign\n          result[hook] = ensureArray(result[hook]).concat(plugin[hook]);\n        }\n      });\n      return result;\n    }, {});\n    // onRealtimeCreate hook\n    applyDecorators(this._plugins.onRealtimeCreate, this);\n  }\n\n  async _request({\n    method,\n    url: _url,\n    version = '1.1',\n    path,\n    query,\n    headers,\n    data,\n  }) {\n    let url = _url;\n    if (!url) {\n      const { appId, server } = this._options;\n      const { api } = await this.constructor._getServerUrls({\n        appId,\n        server,\n      });\n      url = `${api}/${version}${path}`;\n    }\n    return request({\n      url,\n      method,\n      query,\n      headers: {\n        'X-LC-Id': this._options.appId,\n        'X-LC-Key': this._options.appKey,\n        ...headers,\n      },\n      data,\n    });\n  }\n\n  _open() {\n    if (this._openPromise) return this._openPromise;\n\n    let format = 'protobuf2';\n    if (this._options.noBinary) {\n      // 不发送 binary data，fallback to base64 string\n      format = 'proto2base64';\n    }\n    const version = 3;\n    const protocol = {\n      format,\n      version,\n    };\n    this._openPromise = new Promise((resolve, reject) => {\n      debug('No connection established, create a new one.');\n      const connection = new Connection(\n        () => this._getRTMServers(this._options),\n        protocol\n      );\n      connection\n        .on(OPEN, () => resolve(connection))\n        .on(ERROR, error => {\n          delete this._openPromise;\n          reject(error);\n        })\n        .on(EXPIRE, async () => {\n          debug('Connection expired. Refresh endpoints.');\n          this._cache.set('endpoints', null, 0);\n          connection.urls = await this._getRTMServers(this._options);\n          connection.disconnect();\n        })\n        .on(MESSAGE, this._dispatchCommand.bind(this));\n      /**\n       * 连接断开。\n       * 连接断开可能是因为 SDK 进入了离线状态（see {@link Realtime#event:OFFLINE}），或长时间没有收到服务器心跳。\n       * 连接断开后所有的网络操作都会失败，请在连接断开后禁用相关的 UI 元素。\n       * @event Realtime#DISCONNECT\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event Realtime#SCHEDULE\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       */\n      /**\n       * 正在尝试重新连接\n       * @event Realtime#RETRY\n       * @param {Number} attempt 尝试重连的次数\n       */\n      /**\n       * 连接恢复正常。\n       * 请重新启用在 {@link Realtime#event:DISCONNECT} 事件中禁用的相关 UI 元素\n       * @event Realtime#RECONNECT\n       */\n\n      /**\n       * 客户端连接断开\n       * @event IMClient#DISCONNECT\n       * @see Realtime#event:DISCONNECT\n       * @since 3.2.0\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event IMClient#SCHEDULE\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       * @since 3.2.0\n       */\n      /**\n       * 正在尝试重新连接\n       * @event IMClient#RETRY\n       * @param {Number} attempt 尝试重连的次数\n       * @since 3.2.0\n       */\n\n      /**\n       * 客户端进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event Realtime#OFFLINE\n       * @since 3.4.0\n       */\n      /**\n       * 客户端恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event Realtime#ONLINE\n       * @since 3.4.0\n       */\n      /**\n       * 进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event IMClient#OFFLINE\n       * @since 3.4.0\n       */\n      /**\n       * 恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event IMClient#ONLINE\n       * @since 3.4.0\n       */\n\n      // event proxy\n      [DISCONNECT, RECONNECT, RETRY, SCHEDULE, OFFLINE, ONLINE].forEach(event =>\n        connection.on(event, (...payload) => {\n          debug(`${event} event emitted. %o`, payload);\n          this.emit(event, ...payload);\n          if (event !== RECONNECT) {\n            internal(this).clients.forEach(client => {\n              client.emit(event, ...payload);\n            });\n          }\n        })\n      );\n      // override handleClose\n      connection.handleClose = function handleClose(event) {\n        const isFatal = [\n          ErrorCode.APP_NOT_AVAILABLE,\n          ErrorCode.INVALID_LOGIN,\n          ErrorCode.INVALID_ORIGIN,\n        ].some(errorCode => errorCode === event.code);\n        if (isFatal) {\n          // in these cases, SDK should throw.\n          this.throw(createError(event));\n        } else {\n          // reconnect\n          this.disconnect();\n        }\n      };\n      internal(this).connection = connection;\n    });\n\n    return this._openPromise;\n  }\n\n  async _getRTMServers(options) {\n    if (options.RTMServers) return shuffle(ensureArray(options.RTMServers));\n    let info;\n    const cachedEndPoints = this._cache.get('endpoints');\n    if (cachedEndPoints) {\n      info = cachedEndPoints;\n    } else {\n      info = await this.constructor._fetchRTMServers(options);\n      const { server, secondary, ttl } = info;\n      if (\n        typeof server !== 'string' &&\n        typeof secondary !== 'string' &&\n        typeof ttl !== 'number'\n      ) {\n        throw new Error(\n          `malformed RTM route response: ${JSON.stringify(info)}`\n        );\n      }\n      this._cache.set('endpoints', info, info.ttl * 1000);\n    }\n    debug('endpoint info: %O', info);\n    return [info.server, info.secondary];\n  }\n\n  static async _getServerUrls({ appId, server }) {\n    debug('fetch server urls');\n    if (server) {\n      if (typeof server !== 'string') return server;\n      return {\n        RTMRouter: server,\n        api: server,\n      };\n    }\n    const cachedRouter = routerCache.get(appId);\n    if (cachedRouter) return cachedRouter;\n    const defaultProtocol = 'https://';\n    return request({\n      url: 'https://app-router.com/2/route',\n      query: {\n        appId,\n      },\n      timeout: 20000,\n    })\n      .then(tap(debug))\n      .then(\n        ({\n          rtm_router_server: RTMRouterServer,\n          api_server: APIServer,\n          ttl = 3600,\n        }) => {\n          if (!RTMRouterServer) {\n            throw new Error('rtm router not exists');\n          }\n          const serverUrls = {\n            RTMRouter: `${defaultProtocol}${RTMRouterServer}`,\n            api: `${defaultProtocol}${APIServer}`,\n          };\n          routerCache.set(appId, serverUrls, ttl * 1000);\n          return serverUrls;\n        }\n      )\n      .catch(() => {\n        const id = appId.slice(0, 8).toLowerCase();\n        const domain = 'lncldglobal.com';\n        return {\n          RTMRouter: `${defaultProtocol}${id}.rtm.${domain}`,\n          api: `${defaultProtocol}${id}.api.${domain}`,\n        };\n      });\n  }\n\n  static _fetchRTMServers({ appId, ssl, server, RTMServerName }) {\n    debug('fetch endpoint info');\n    return this._getServerUrls({ appId, server })\n      .then(tap(debug))\n      .then(({ RTMRouter }) =>\n        request({\n          url: `${RTMRouter}/v1/route`,\n          query: {\n            appId,\n            secure: ssl,\n            features: isWeapp ? 'wechat' : undefined,\n            server: RTMServerName,\n            _t: Date.now(),\n          },\n          timeout: 20000,\n        }).then(tap(debug))\n      );\n  }\n\n  _close() {\n    if (this._openPromise) {\n      this._openPromise.then(connection => connection.close());\n    }\n    delete this._openPromise;\n  }\n\n  /**\n   * 手动进行重连。\n   * SDK 在网络出现异常时会自动按照一定的时间间隔尝试重连，调用该方法会立即尝试重连并重置重连尝试计数器。\n   * 只能在 `SCHEDULE` 事件之后，`RETRY` 事件之前调用，如果当前网络正常或者正在进行重连，调用该方法会抛异常。\n   */\n  retry() {\n    const { connection } = internal(this);\n    if (!connection) {\n      throw new Error('no connection established');\n    }\n    if (connection.cannot('retry')) {\n      throw new Error(\n        `retrying not allowed when not disconnected. the connection is now ${connection.current}`\n      );\n    }\n    return connection.retry();\n  }\n\n  /**\n   * 暂停，使 SDK 进入离线状态。\n   * 你可以在网络断开、应用进入后台等时刻调用该方法让 SDK 进入离线状态，离线状态下不会尝试重连。\n   * 在浏览器中 SDK 会自动监听网络变化，因此无需手动调用该方法。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:OFFLINE\n   */\n  pause() {\n    // 这个方法常常在网络断开、进入后台时被调用，此时 connection 可能没有建立或者已经 close。\n    // 因此不像 retry，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('pause')) connection.pause();\n  }\n\n  /**\n   * 恢复在线状态。\n   * 你可以在网络恢复、应用回到前台等时刻调用该方法让 SDK 恢复在线状态，恢复在线状态后 SDK 会开始尝试重连。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:ONLINE\n   */\n  resume() {\n    // 与 pause 一样，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('resume')) connection.resume();\n  }\n\n  _registerPending(value) {\n    internal(this).pendingClients.add(value);\n  }\n\n  _deregisterPending(client) {\n    internal(this).pendingClients.delete(client);\n  }\n\n  _register(client) {\n    internal(this).clients.add(client);\n  }\n\n  _deregister(client) {\n    const _this = internal(this);\n    _this.clients.delete(client);\n    if (_this.clients.size + _this.pendingClients.size === 0) {\n      this._close();\n    }\n  }\n\n  _dispatchCommand(command) {\n    return applyDispatcher(this._plugins.beforeCommandDispatch, [\n      command,\n      this,\n    ]).then(shouldDispatch => {\n      // no plugin handled this command\n      if (shouldDispatch)\n        return debug('[WARN] Unexpected message received: %O', trim(command));\n      return false;\n    });\n  }\n}\n\n// For test purpose only\n// SHOULD NOT be public\nexport class MultitonRealtime extends Realtime {\n  constructor({ appId, ...rest }) {\n    delete initializedApp[appId];\n    super({\n      appId,\n      ...rest,\n    });\n  }\n}\n","import * as Protocols from '../proto/message';\n\nexport {\n  Protocols,\n  // misspelling\n  Protocols as Protocals,\n};\n\nexport { default as EventEmitter } from 'eventemitter3';\n\nconst polyfilledPromise = Promise;\nexport { polyfilledPromise as Promise };\n\nexport {\n  /**\n   * @name Realtime\n   * @memberof module:leancloud-realtime\n   * @see Realtime\n   */\n  default as Realtime,\n} from './realtime';\n\nexport * from './adapter';\n\nexport { debug } from './utils';\n","// IMClient\nexport const UNREAD_MESSAGES_COUNT_UPDATE = 'unreadmessagescountupdate';\nexport const CLOSE = 'close';\nexport const CONFLICT = 'conflict';\nexport const CONVERSATION_INFO_UPDATED = 'conversationinfoupdated';\nexport const UNHANDLED_MESSAGE = 'unhandledmessage';\n\n// shared\nexport const INVITED = 'invited';\nexport const KICKED = 'kicked';\nexport const MEMBERS_JOINED = 'membersjoined';\nexport const MEMBERS_LEFT = 'membersleft';\nexport const MEMBER_INFO_UPDATED = 'memberinfoupdated';\nexport const BLOCKED = 'blocked';\nexport const UNBLOCKED = 'unblocked';\nexport const MEMBERS_BLOCKED = 'membersblocked';\nexport const MEMBERS_UNBLOCKED = 'membersunblocked';\nexport const MUTED = 'muted';\nexport const UNMUTED = 'unmuted';\nexport const MEMBERS_MUTED = 'membersmuted';\nexport const MEMBERS_UNMUTED = 'membersunmuted';\nexport const MESSAGE = 'message';\nexport const MESSAGE_RECALL = 'messagerecall';\nexport const MESSAGE_UPDATE = 'messageupdate';\n\n// Conversation\nexport const LAST_DELIVERED_AT_UPDATE = 'lastdeliveredatupdate';\nexport const LAST_READ_AT_UPDATE = 'lastreadatupdate';\nexport const INFO_UPDATED = 'infoupdated';\n","import uuid from 'uuid/v4';\nimport { ensureArray, decodeDate, getTime } from '../utils';\n\n/**\n * 消息状态枚举\n * @enum {Symbol}\n * @since 3.2.0\n * @memberof module:leancloud-realtime\n */\nconst MessageStatus = {\n  /** 初始状态、未知状态 */\n  NONE: Symbol('none'),\n  /** 正在发送 */\n  SENDING: Symbol('sending'),\n  /** 已发送 */\n  SENT: Symbol('sent'),\n  /** 已送达 */\n  DELIVERED: Symbol('delivered'),\n  /** 发送失败 */\n  FAILED: Symbol('failed'),\n};\nObject.freeze(MessageStatus);\n\nconst rMessageStatus = {\n  [MessageStatus.NONE]: true,\n  [MessageStatus.SENDING]: true,\n  [MessageStatus.SENT]: true,\n  [MessageStatus.DELIVERED]: true,\n  [MessageStatus.READ]: true,\n  [MessageStatus.FAILED]: true,\n};\n\nexport { MessageStatus };\nexport default class Message {\n  /**\n   * @implements AVMessage\n   * @param  {Object|String|ArrayBuffer} content 消息内容\n   */\n  constructor(content) {\n    Object.assign(\n      this,\n      { content },\n      {\n        /**\n         * @type {String}\n         * @memberof Message#\n         */\n        id: uuid(),\n        /**\n         * 消息所在的 conversation id\n         * @memberof Message#\n         * @type {String?}\n         */\n        cid: null,\n        /**\n         * 消息发送时间\n         * @memberof Message#\n         * @type {Date}\n         */\n        timestamp: new Date(),\n        /**\n         * 消息发送者\n         * @memberof Message#\n         * @type {String}\n         */\n        from: undefined,\n        /**\n         * 消息提及的用户\n         * @since 4.0.0\n         * @memberof Message#\n         * @type {String[]}\n         */\n        mentionList: [],\n        /**\n         * 消息是否提及了所有人\n         * @since 4.0.0\n         * @memberof Message#\n         * @type {Boolean}\n         */\n        mentionedAll: false,\n        _mentioned: false,\n      }\n    );\n    this._setStatus(MessageStatus.NONE);\n  }\n\n  /**\n   * 将当前消息的内容序列化为 JSON 对象\n   * @private\n   * @return {Object}\n   */\n  getPayload() {\n    return this.content;\n  }\n\n  _toJSON() {\n    const {\n      id,\n      cid,\n      from,\n      timestamp,\n      deliveredAt,\n      updatedAt,\n      mentionList,\n      mentionedAll,\n      mentioned,\n    } = this;\n    return {\n      id,\n      cid,\n      from,\n      timestamp,\n      deliveredAt,\n      updatedAt,\n      mentionList,\n      mentionedAll,\n      mentioned,\n    };\n  }\n\n  /**\n   * 返回 JSON 格式的消息\n   * @return {Object} 返回值是一个 plain Object\n   */\n  toJSON() {\n    return {\n      ...this._toJSON(),\n      data: this.content,\n    };\n  }\n\n  /**\n   * 返回 JSON 格式的消息，与 toJSON 不同的是，该对象包含了完整的信息，可以通过 {@link IMClient#parseMessage} 反序列化。\n   * @return {Object} 返回值是一个 plain Object\n   * @since 4.0.0\n   */\n  toFullJSON() {\n    const {\n      content,\n      id,\n      cid,\n      from,\n      timestamp,\n      deliveredAt,\n      _updatedAt,\n      mentionList,\n      mentionedAll,\n    } = this;\n    return {\n      data: content,\n      id,\n      cid,\n      from,\n      timestamp: getTime(timestamp),\n      deliveredAt: getTime(deliveredAt),\n      updatedAt: getTime(_updatedAt),\n      mentionList,\n      mentionedAll,\n    };\n  }\n\n  /**\n   * 消息状态，值为 {@link module:leancloud-realtime.MessageStatus} 之一\n   * @type {Symbol}\n   * @readonly\n   * @since 3.2.0\n   */\n  get status() {\n    return this._status;\n  }\n\n  _setStatus(status) {\n    if (!rMessageStatus[status]) {\n      throw new Error('Invalid message status');\n    }\n    this._status = status;\n  }\n\n  get timestamp() {\n    return this._timestamp;\n  }\n\n  set timestamp(value) {\n    this._timestamp = decodeDate(value);\n  }\n\n  /**\n   * 消息送达时间\n   * @type {?Date}\n   */\n  get deliveredAt() {\n    return this._deliveredAt;\n  }\n\n  set deliveredAt(value) {\n    this._deliveredAt = decodeDate(value);\n  }\n\n  /**\n   * 消息修改或撤回时间，可以通过比较其与消息的 timestamp 是否相等判断消息是否被修改过或撤回过。\n   * @type {Date}\n   * @since 3.5.0\n   */\n  get updatedAt() {\n    return this._updatedAt || this.timestamp;\n  }\n\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n\n  /**\n   * 当前用户是否在该消息中被提及\n   * @type {Boolean}\n   * @readonly\n   * @since 4.0.0\n   */\n  get mentioned() {\n    return this._mentioned;\n  }\n\n  _updateMentioned(client) {\n    this._mentioned =\n      this.from !== client &&\n      (this.mentionedAll || this.mentionList.indexOf(client) > -1);\n  }\n\n  /**\n   * 获取提及用户列表\n   * @since 4.0.0\n   * @return {String[]} 提及用户的 id 列表\n   */\n  getMentionList() {\n    return this.mentionList;\n  }\n\n  /**\n   * 设置提及用户列表\n   * @since 4.0.0\n   * @param {String[]} clients 提及用户的 id 列表\n   * @return {this} self\n   */\n  setMentionList(clients) {\n    this.mentionList = ensureArray(clients);\n    return this;\n  }\n\n  /**\n   * 设置是否提及所有人\n   * @since 4.0.0\n   * @param {Boolean} [value=true]\n   * @return {this} self\n   */\n  mentionAll(value = true) {\n    this.mentionedAll = Boolean(value);\n    return this;\n  }\n\n  /**\n   * 判断给定的内容是否是有效的 Message，\n   * 该方法始终返回 true\n   * @private\n   * @returns {Boolean}\n   * @implements AVMessage.validate\n   */\n  static validate() {\n    return true;\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 如果子类提供了 message，返回该 message\n   * 如果没有提供，将 json 作为 content 实例化一个 Message\n   * @private\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {Message} message 子类提供的 message\n   * @return {Message}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message) {\n    return message || new this(json);\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// documented in ../index.js\nexport const messageType = type => {\n  if (typeof type !== 'number') {\n    throw new TypeError(`${type} is not a Number`);\n  }\n  return target => {\n    target.TYPE = type;\n    target.validate = json => json._lctype === type;\n    target.prototype._getType = () => ({ _lctype: type });\n  };\n};\n\n// documented in ../plugin-im.js\nexport const messageField = fields => {\n  if (typeof fields !== 'string') {\n    if (!Array.isArray(fields)) {\n      throw new TypeError(`${fields} is not an Array`);\n    } else if (fields.some(value => typeof value !== 'string')) {\n      throw new TypeError('fields contains non-string typed member');\n    }\n  }\n  return target => {\n    // IE10 Hack:\n    // static properties in IE10 will not be inherited from super\n    // search for parse method and assign it manually\n    let originalCustomFields = isIE10\n      ? getStaticProperty(target, '_customFields')\n      : target._customFields;\n    originalCustomFields = Array.isArray(originalCustomFields)\n      ? originalCustomFields\n      : [];\n    target._customFields = originalCustomFields.concat(fields);\n  };\n};\n\n// IE10 Hack:\n// static properties in IE10 will not be inherited from super\n// search for parse method and assign it manually\n\nexport const IE10Compatible = target => {\n  if (isIE10) {\n    target.parse = getStaticProperty(target, 'parse');\n  }\n};\n","import Message from './message';\nimport { messageField } from './helpers';\nimport { getStaticProperty, isIE10, compact } from '../utils';\n\n// jsdoc-ignore-start\n@messageField(['_lctext', '_lcattrs'])\n// jsdoc-ignore-end\n/**\n * 所有内置的富媒体消息均继承自本类\n * @extends Message\n */\nclass TypedMessage extends Message {\n  /**\n   * @type {Number}\n   * @readonly\n   */\n  get type() {\n    return this.constructor.TYPE;\n  }\n\n  /** @type {String} */\n  set text(text) {\n    return this.setText(text);\n  }\n\n  get text() {\n    return this.getText();\n  }\n\n  /** @type {Object} */\n  set attributes(attributes) {\n    return this.setAttributes(attributes);\n  }\n\n  get attributes() {\n    return this.getAttributes();\n  }\n\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，\n   * 如 <code>[红包] 新春快乐</code>。\n   * 默认值为消息的 text。\n   * @type {String}\n   * @readonly\n   */\n  get summary() {\n    return this.text;\n  }\n\n  /**\n   * @param {String} text\n   * @return {this} self\n   */\n  setText(text) {\n    this._lctext = text;\n    return this;\n  }\n\n  /**\n   * @return {String}\n   */\n  getText() {\n    return this._lctext;\n  }\n\n  /**\n   * @param {Object} attributes\n   * @return {this} self\n   */\n  setAttributes(attributes) {\n    this._lcattrs = attributes;\n    return this;\n  }\n\n  /**\n   * @return {Object}\n   */\n  getAttributes() {\n    return this._lcattrs;\n  }\n\n  _getCustomFields() {\n    const fields = Array.isArray(this.constructor._customFields)\n      ? this.constructor._customFields\n      : [];\n    return fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = this[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n  }\n\n  /* eslint-disable class-methods-use-this */\n  _getType() {\n    throw new Error('not implemented');\n  }\n  /* eslint-enable class-methods-use-this */\n\n  getPayload() {\n    return compact({\n      _lctext: this.getText(),\n      _lcattrs: this.getAttributes(),\n      ...this._getCustomFields(),\n      ...this._getType(),\n    });\n  }\n\n  toJSON() {\n    const { type, text, attributes, summary } = this;\n    return {\n      ...super._toJSON(),\n      type,\n      text,\n      attributes,\n      summary,\n    };\n  }\n\n  toFullJSON() {\n    return {\n      ...super.toFullJSON(),\n      data: this.getPayload(),\n    };\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 为给定的 message 设置 text 与 attributes 属性，返回该 message\n   * 如果子类没有提供 message，new this()\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {TypedMessage} message 子类提供的 message\n   * @return {TypedMessage}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message = new this()) {\n    message.content = json; // eslint-disable-line no-param-reassign\n    const customFields = isIE10\n      ? getStaticProperty(message.constructor, '_customFields')\n      : message.constructor._customFields;\n    let fields = Array.isArray(customFields) ? customFields : [];\n    fields = fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = json[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n    Object.assign(message, fields);\n    return super.parse(json, message);\n  }\n}\n\nexport default TypedMessage;\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-127)\n@IE10Compatible\n// jsdoc-ignore-end\n/**\n * 已撤回类型消息，当消息被撤回时，SDK 会使用该类型的消息替代原始消息\n * @extends TypedMessage\n */\nclass RecalledMessage extends TypedMessage {\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，值为 <code>[该消息已撤回]</code>\n   * @type {String}\n   * @readonly\n   */\n  // eslint-disable-next-line class-methods-use-this\n  get summary() {\n    return '[该消息已撤回]';\n  }\n}\nexport default RecalledMessage;\n","/* eslint class-methods-use-this: [\"error\", { \"exceptMethods\": [\"_addMembers\", \"_removeMembers\"] }] */\nimport EventEmitter from 'eventemitter3';\nimport values from 'lodash/values';\nimport d from 'debug';\nimport { decodeDate, getTime, internal } from '../utils';\nimport { applyDecorators } from '../plugin';\nimport {\n  GenericCommand,\n  ConvCommand,\n  DirectCommand,\n  LogsCommand,\n  PatchCommand,\n  PatchItem,\n  CommandType,\n  OpType,\n} from '../../proto/message';\nimport * as Event from '../events/im';\nimport { createError } from '../error';\nimport Message, { MessageStatus } from '../messages/message';\nimport RecalledMessage from '../messages/recalled-message';\n\nconst debug = d('LC:Conversation');\n\nconst serializeMessage = message => {\n  const content = message.getPayload();\n  let msg;\n  let binaryMsg;\n  if (content instanceof ArrayBuffer) {\n    binaryMsg = content;\n  } else if (typeof content !== 'string') {\n    msg = JSON.stringify(content);\n  } else {\n    msg = content;\n  }\n  return { msg, binaryMsg };\n};\n\nconst { NEW, OLD } = LogsCommand.QueryDirection;\n\n/**\n * 历史消息查询方向枚举\n * @enum {Number}\n * @since 4.0.0\n * @memberof module:leancloud-realtime\n */\nconst MessageQueryDirection = {\n  /** 从后向前 */\n  NEW_TO_OLD: OLD,\n  /** 从前向后 */\n  OLD_TO_NEW: NEW,\n};\nObject.freeze(MessageQueryDirection);\n\nexport { MessageQueryDirection };\n\nexport default class ConversationBase extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @private\n   * @abstract\n   */\n  constructor(\n    {\n      id,\n      lastMessageAt,\n      lastMessage,\n      lastDeliveredAt,\n      lastReadAt,\n      unreadMessagesCount = 0,\n      members = [],\n      mentioned = false,\n      ...properties\n    },\n    client\n  ) {\n    super();\n    Object.assign(this, {\n      /**\n       * 对话 id，对应 _Conversation 表中的 objectId\n       * @memberof ConversationBase#\n       * @type {String}\n       */\n      id,\n      /**\n       * 最后一条消息时间\n       * @memberof ConversationBase#\n       * @type {?Date}\n       */\n      lastMessageAt,\n      /**\n       * 最后一条消息\n       * @memberof ConversationBase#\n       * @type {?Message}\n       */\n      lastMessage,\n      /**\n       * 参与该对话的用户列表\n       * @memberof ConversationBase#\n       * @type {String[]}\n       */\n      members,\n      // other properties provided by subclasses\n      ...properties,\n    });\n    this.members = Array.from(new Set(this.members));\n    Object.assign(internal(this), {\n      messagesWaitingForReceipt: {},\n      lastDeliveredAt,\n      lastReadAt,\n      unreadMessagesCount,\n      mentioned,\n    });\n    this._client = client;\n    if (debug.enabled) {\n      values(Event).forEach(event =>\n        this.on(event, (...payload) =>\n          this._debug(`${event} event emitted. %o`, payload)\n        )\n      );\n    }\n    // onConversationCreate hook\n    applyDecorators(this._client._plugins.onConversationCreate, this);\n  }\n\n  /**\n   * 当前用户是否在该对话的未读消息中被提及\n   * @type {Boolean}\n   * @since 4.0.0\n   */\n  get unreadMessagesMentioned() {\n    return internal(this).unreadMessagesMentioned;\n  }\n\n  _setUnreadMessagesMentioned(value) {\n    internal(this).unreadMessagesMentioned = Boolean(value);\n  }\n\n  set unreadMessagesCount(value) {\n    if (value !== this.unreadMessagesCount) {\n      internal(this).unreadMessagesCount = value;\n      this._client.emit(Event.UNREAD_MESSAGES_COUNT_UPDATE, [this]);\n    }\n  }\n\n  /**\n   * 当前用户在该对话的未读消息数\n   * @type {Number}\n   */\n  get unreadMessagesCount() {\n    return internal(this).unreadMessagesCount;\n  }\n\n  set lastMessageAt(value) {\n    const time = decodeDate(value);\n    if (time <= this._lastMessageAt) return;\n    this._lastMessageAt = time;\n  }\n\n  get lastMessageAt() {\n    return this._lastMessageAt;\n  }\n\n  /**\n   * 最后消息送达时间，常用来实现消息的「已送达」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastDeliveredAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastDeliveredAt;\n  }\n\n  _setLastDeliveredAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastDeliveredAt)) {\n      internal(this).lastDeliveredAt = date;\n      /**\n       * 最后消息送达时间更新\n       * @event ConversationBase#LAST_DELIVERED_AT_UPDATE\n       * @since 3.4.0\n       */\n      this.emit(Event.LAST_DELIVERED_AT_UPDATE);\n    }\n  }\n\n  /**\n   * 最后消息被阅读时间，常用来实现发送消息的「已读」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastReadAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastReadAt;\n  }\n\n  _setLastReadAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastReadAt)) {\n      internal(this).lastReadAt = date;\n      /**\n       * 最后消息被阅读时间更新\n       * @event ConversationBase#LAST_READ_AT_UPDATE\n       * @since 3.4.0\n       */\n      this.emit(Event.LAST_READ_AT_UPDATE);\n    }\n  }\n\n  /**\n   * 返回 JSON 格式的对话，与 toJSON 不同的是，该对象包含了完整的信息，可以通过 {@link IMClient#parseConversation} 反序列化。\n   * @return {Object} 返回值是一个 plain Object\n   * @since 4.0.0\n   */\n  toFullJSON() {\n    const {\n      id,\n      members,\n      lastMessageAt,\n      lastDeliveredAt,\n      lastReadAt,\n      lastMessage,\n      unreadMessagesCount,\n    } = this;\n    return {\n      id,\n      members,\n      lastMessageAt: getTime(lastMessageAt),\n      lastDeliveredAt: getTime(lastDeliveredAt),\n      lastReadAt: getTime(lastReadAt),\n      lastMessage: lastMessage ? lastMessage.toFullJSON() : undefined,\n      unreadMessagesCount,\n    };\n  }\n\n  /**\n   * 返回 JSON 格式的对话\n   * @return {Object} 返回值是一个 plain Object\n   * @since 4.0.0\n   */\n  toJSON() {\n    const {\n      id,\n      members,\n      lastMessageAt,\n      lastDeliveredAt,\n      lastReadAt,\n      lastMessage,\n      unreadMessagesCount,\n      unreadMessagesMentioned,\n    } = this;\n    return {\n      id,\n      members,\n      lastMessageAt,\n      lastDeliveredAt,\n      lastReadAt,\n      lastMessage: lastMessage ? lastMessage.toJSON() : undefined,\n      unreadMessagesCount,\n      unreadMessagesMentioned,\n    };\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  _send(command, ...args) {\n    /* eslint-disable no-param-reassign */\n    if (command.cmd === null) {\n      command.cmd = 'conv';\n    }\n    if (command.cmd === 'conv' && command.convMessage === null) {\n      command.convMessage = new ConvCommand();\n    }\n    if (command.convMessage && command.convMessage.cid === null) {\n      command.convMessage.cid = this.id;\n    }\n    /* eslint-enable no-param-reassign */\n    return this._client._send(command, ...args);\n  }\n\n  /**\n   * 发送消息\n   * @param  {Message} message 消息，Message 及其子类的实例\n   * @param {Object} [options] since v3.3.0，发送选项\n   * @param {Boolean} [options.transient] since v3.3.1，是否作为暂态消息发送\n   * @param {Boolean} [options.receipt] 是否需要回执，仅在普通对话中有效\n   * @param {Boolean} [options.will] since v3.4.0，是否指定该消息作为「掉线消息」发送，\n   * 「掉线消息」会延迟到当前用户掉线后发送，常用来实现「下线通知」功能\n   * @param {MessagePriority} [options.priority] 消息优先级，仅在暂态对话中有效，\n   * see: {@link module:leancloud-realtime.MessagePriority MessagePriority}\n   * @param {Object} [options.pushData] 消息对应的离线推送内容，如果消息接收方不在线，会推送指定的内容。其结构说明参见: {@link https://url.leanapp.cn/pushData 推送消息内容}\n   * @return {Promise.<Message>} 发送的消息\n   */\n  async send(message, options) {\n    this._debug(message, 'send');\n    if (!(message instanceof Message)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    const { transient, receipt, priority, pushData, will } = {\n      // support Message static property: sendOptions\n      ...message.constructor.sendOptions,\n      // support Message static property: getSendOptions\n      ...(typeof message.constructor.getSendOptions === 'function'\n        ? message.constructor.getSendOptions(message)\n        : {}),\n      ...options,\n    };\n    if (receipt) {\n      if (this.transient) {\n        console.warn(\n          'receipt option is ignored as the conversation is transient.'\n        );\n      } else if (transient) {\n        console.warn(\n          'receipt option is ignored as the message is sent transiently.'\n        );\n      } else if (this.members.length > 2) {\n        console.warn(\n          'receipt option is recommended to be used in one-on-one conversation.'\n        ); // eslint-disable-line max-len\n      }\n    }\n    if (priority && !this.transient) {\n      console.warn(\n        'priority option is ignored as the conversation is not transient.'\n      );\n    }\n    Object.assign(message, {\n      cid: this.id,\n      from: this._client.id,\n    });\n    message._setStatus(MessageStatus.SENDING);\n    const { msg, binaryMsg } = serializeMessage(message);\n    const command = new GenericCommand({\n      cmd: 'direct',\n      directMessage: new DirectCommand({\n        msg,\n        binaryMsg,\n        cid: this.id,\n        r: receipt,\n        transient,\n        dt: message.id,\n        pushData: JSON.stringify(pushData),\n        will,\n        mentionPids: message.mentionList,\n        mentionAll: message.mentionedAll,\n      }),\n      priority,\n    });\n    try {\n      const resCommand = await this._send(command);\n      const {\n        ackMessage: { uid, t, code, reason, appCode },\n      } = resCommand;\n      if (code !== null) {\n        throw createError({\n          code,\n          reason,\n          appCode,\n        });\n      }\n      Object.assign(message, {\n        id: uid,\n        timestamp: t,\n      });\n      if (!transient) {\n        this.lastMessage = message;\n        this.lastMessageAt = message.timestamp;\n      }\n      message._setStatus(MessageStatus.SENT);\n      if (receipt) {\n        internal(this).messagesWaitingForReceipt[message.id] = message;\n      }\n      return message;\n    } catch (error) {\n      message._setStatus(MessageStatus.FAILED);\n      throw error;\n    }\n  }\n\n  async _update(message, newMessage, recall) {\n    this._debug('patch %O %O %O', message, newMessage, recall);\n    if (message instanceof Message) {\n      if (message.from !== this._client.id) {\n        throw new Error('Updating message from others is not allowed');\n      }\n      if (\n        message.status !== MessageStatus.SENT &&\n        message.status !== MessageStatus.DELIVERED\n      ) {\n        throw new Error('Message is not sent');\n      }\n    } else if (!(message.id && message.timestamp)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    let msg;\n    let binaryMsg;\n    if (!recall) {\n      const content = serializeMessage(newMessage);\n      ({ msg, binaryMsg } = content);\n    }\n    await this._send(\n      new GenericCommand({\n        cmd: CommandType.patch,\n        op: OpType.modify,\n        patchMessage: new PatchCommand({\n          patches: [\n            new PatchItem({\n              cid: this.id,\n              mid: message.id,\n              timestamp: Number(message.timestamp),\n              recall,\n              data: msg,\n              binaryMsg,\n              mentionPids: newMessage.mentionList,\n              mentionAll: newMessage.mentionedAll,\n            }),\n          ],\n          lastPatchTime: this._client._lastPatchTime,\n        }),\n      })\n    );\n    const { id, cid, timestamp, from, _status } = message;\n    Object.assign(newMessage, {\n      id,\n      cid,\n      timestamp,\n      from,\n      _status,\n    });\n    if (this.lastMessage && this.lastMessage.id === newMessage.id) {\n      this.lastMessage = newMessage;\n    }\n    return newMessage;\n  }\n\n  /**\n   * 获取对话人数，或暂态对话的在线人数\n   * @return {Promise.<Number>}\n   */\n  async count() {\n    this._debug('count');\n    const resCommand = await this._send(\n      new GenericCommand({\n        op: 'count',\n      })\n    );\n    return resCommand.convMessage.count;\n  }\n\n  /**\n   * 应用增加成员的操作，产生副作用\n   * @param {string[]} members\n   * @abstract\n   * @private\n   */\n  _addMembers() {}\n\n  /**\n   * 应用减少成员的操作，产生副作用\n   * @param {string[]} members\n   * @abstract\n   * @private\n   */\n  _removeMembers() {}\n\n  /**\n   * 修改已发送的消息\n   * @param {AVMessage} message 要修改的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   * @param {AVMessage} newMessage 新的消息\n   * @return {Promise.<AVMessage>} 更新后的消息\n   */\n  async update(message, newMessage) {\n    if (!(newMessage instanceof Message)) {\n      throw new TypeError(`${newMessage} is not a Message`);\n    }\n    return this._update(message, newMessage, false);\n  }\n\n  /**\n   * 撤回已发送的消息\n   * @param {AVMessage} message 要撤回的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   * @return {Promise.<RecalledMessage>} 一条已撤回的消息\n   */\n  async recall(message) {\n    return this._update(message, new RecalledMessage(), true);\n  }\n\n  /**\n   * 查询消息记录\n   * 如果仅需实现消息向前记录翻页查询需求，建议使用 {@link Conversation#createMessagesIterator}。\n   * 不论何种方向，获得的消息都是按照时间升序排列的。\n   * startClosed 与 endClosed 用于指定查询区间的开闭。\n   *\n   * @param  {Object} [options]\n   * @param  {Number} [options.limit] 限制查询结果的数量，目前服务端默认为 20\n   * @param  {Number}   [options.type] 指定查询的富媒体消息类型，不指定则查询所有消息。\n   * @param  {MessageQueryDirection} [options.direction] 查询的方向。\n   * 在不指定的情况下如果 startTime 大于 endTime，则为从新到旧查询，可以实现加载聊天记录等场景。\n   * 如果 startTime 小于 endTime，则为从旧到新查询，可以实现弹幕等场景。\n   * @param  {Date}   [options.startTime] 从该时间开始查询，不传则从当前时间开始查询\n   * @param  {String} [options.startMessageId] 从该消息之前开始查询，需要与 startTime 同时使用，为防止某时刻有重复消息\n   * @param  {Boolean}[options.startClosed] 指定查询范围是否包括开始的时间点，默认不包括\n   * @param  {Date}   [options.endTime] 查询到该时间为止，不传则查询最早消息为止\n   * @param  {String} [options.endMessageId] 查询到该消息为止，需要与 endTime 同时使用，为防止某时刻有重复消息\n   * @param  {Boolean}[options.endClosed] 指定查询范围是否包括结束的时间点，默认不包括\n   *\n   * @param  {Date}   [options.beforeTime] DEPRECATED: 使用 startTime 代替。限制查询结果为小于该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] DEPRECATED: 使用 startMessageId 代替。\n   * 限制查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Date}   [options.afterTime] DEPRECATED: 使用 endTime 代替。限制查询结果为大于该时间之前的消息\n   * @param  {String} [options.afterMessageId] DEPRECATED: 使用 endMessageId 代替。\n   * 限制查询结果为该消息之后的消息，需要与 afterTime 同时使用，为防止某时刻有重复消息\n   * @return {Promise.<Message[]>} 消息列表\n   */\n  async queryMessages(options = {}) {\n    this._debug('query messages %O', options);\n    const {\n      beforeTime,\n      beforeMessageId,\n      afterTime,\n      afterMessageId,\n      limit,\n      direction,\n      type,\n      startTime,\n      startMessageId,\n      startClosed,\n      endTime,\n      endMessageId,\n      endClosed,\n    } = options;\n    if (beforeMessageId || beforeTime || afterMessageId || afterTime) {\n      console.warn(\n        'DEPRECATION: queryMessages options beforeTime, beforeMessageId, afterTime and afterMessageId are deprecated in favor of startTime, startMessageId, endTime and endMessageId.'\n      );\n      return this.queryMessages({\n        startTime: beforeTime,\n        startMessageId: beforeMessageId,\n        endTime: afterTime,\n        endMessageId: afterMessageId,\n        limit,\n      });\n    }\n    if (startMessageId && !startTime) {\n      throw new Error(\n        'query option startMessageId must be used with option startTime'\n      );\n    }\n    if (endMessageId && !endTime) {\n      throw new Error(\n        'query option endMessageId must be used with option endTime'\n      );\n    }\n    const conditions = {\n      t: startTime,\n      mid: startMessageId,\n      tIncluded: startClosed,\n      tt: endTime,\n      tmid: endMessageId,\n      ttIncluded: endClosed,\n      l: limit,\n      lctype: type,\n    };\n    if (conditions.t instanceof Date) {\n      conditions.t = conditions.t.getTime();\n    }\n    if (conditions.tt instanceof Date) {\n      conditions.tt = conditions.tt.getTime();\n    }\n    if (direction !== undefined) {\n      conditions.direction = direction;\n    } else if (conditions.tt > conditions.t) {\n      conditions.direction = MessageQueryDirection.OLD_TO_NEW;\n    }\n    const resCommand = await this._send(\n      new GenericCommand({\n        cmd: 'logs',\n        logsMessage: new LogsCommand(\n          Object.assign(conditions, {\n            cid: this.id,\n          })\n        ),\n      })\n    );\n    return Promise.all(\n      resCommand.logsMessage.logs.map(\n        async ({\n          msgId,\n          timestamp,\n          patchTimestamp,\n          from,\n          ackAt,\n          readAt,\n          data,\n          mentionAll,\n          mentionPids,\n          bin,\n        }) => {\n          const messageData = {\n            data,\n            bin,\n            id: msgId,\n            cid: this.id,\n            timestamp,\n            from,\n            deliveredAt: ackAt,\n            updatedAt: patchTimestamp,\n            mentionList: mentionPids,\n            mentionedAll: mentionAll,\n          };\n          const message = await this._client.parseMessage(messageData);\n          let status = MessageStatus.SENT;\n          if (this.members.length === 2) {\n            if (ackAt) status = MessageStatus.DELIVERED;\n            if (ackAt) this._setLastDeliveredAt(ackAt);\n            if (readAt) this._setLastReadAt(readAt);\n          }\n          message._setStatus(status);\n          return message;\n        }\n      )\n    );\n  }\n\n  /**\n   * 获取消息翻页迭代器\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制起始查询结果为小于该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制起始查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制每页查询结果的数量，目前服务端默认为 20\n   * @return {AsyncIterater.<Promise.<IteratorResult<Message[]>>>} [AsyncIterator]{@link https://github.com/tc39/proposal-async-iteration}，调用其 next 方法返回获取下一页消息的 Promise\n   * @example\n   * var messageIterator = conversation.createMessagesIterator({ limit: 10 });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message1, ..., message10],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message11, ..., message20],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // No more messages\n   *   // result: { value: [], done: true }\n   * });\n   */\n  createMessagesIterator({ beforeTime, beforeMessageId, limit } = {}) {\n    let promise;\n    return {\n      next: () => {\n        if (promise === undefined) {\n          // first call\n          promise = this.queryMessages({\n            limit,\n            startTime: beforeTime,\n            startMessageId: beforeMessageId,\n          });\n        } else {\n          promise = promise.then(prevMessages => {\n            if (prevMessages.length === 0 || prevMessages.length < limit) {\n              // no more messages\n              return [];\n            }\n            return this.queryMessages({\n              startTime: prevMessages[0].timestamp,\n              startMessageId: prevMessages[0].id,\n              limit,\n            });\n          });\n        }\n        return promise.then(value => ({\n          value: Array.from(value),\n          done: value.length === 0 || value.length < limit,\n        }));\n      },\n    };\n  }\n\n  /**\n   * 将该会话标记为已读\n   * @return {Promise.<this>} self\n   */\n  async read() {\n    this.unreadMessagesCount = 0;\n    this._setUnreadMessagesMentioned(false);\n    // 跳过暂态会话\n    if (this.transient) return this;\n    const client = this._client;\n    if (!internal(client).readConversationsBuffer) {\n      internal(client).readConversationsBuffer = new Set();\n    }\n    internal(client).readConversationsBuffer.add(this);\n    client._doSendRead();\n    return this;\n  }\n\n  _handleReceipt({ messageId, timestamp, read }) {\n    if (read) {\n      this._setLastReadAt(timestamp);\n    } else {\n      this._setLastDeliveredAt(timestamp);\n    }\n    const { messagesWaitingForReceipt } = internal(this);\n    const message = messagesWaitingForReceipt[messageId];\n    if (!message) return;\n    message._setStatus(MessageStatus.DELIVERED);\n    message.deliveredAt = timestamp;\n    delete messagesWaitingForReceipt[messageId];\n  }\n\n  /**\n   * 更新对话的最新回执时间戳（lastDeliveredAt、lastReadAt）\n   * @since 3.4.0\n   * @return {Promise.<this>} this\n   */\n  async fetchReceiptTimestamps() {\n    // 暂态/系统会话不支持回执\n    if (this.transient || this.system) return this;\n    const {\n      convMessage: { maxReadTimestamp, maxAckTimestamp },\n    } = await this._send(\n      new GenericCommand({\n        op: 'max_read',\n      })\n    );\n    this._setLastDeliveredAt(maxAckTimestamp);\n    this._setLastReadAt(maxReadTimestamp);\n    return this;\n  }\n\n  _fetchAllReceiptTimestamps() {\n    // 暂态/系统会话不支持回执\n    if (this.transient || this.system) return this;\n    const convMessage = new ConvCommand({\n      queryAllMembers: true,\n    });\n    return this._send(\n      new GenericCommand({\n        op: 'max_read',\n        convMessage,\n      })\n    ).then(({ convMessage: { maxReadTuples } }) =>\n      maxReadTuples\n        .filter(\n          maxReadTuple =>\n            maxReadTuple.maxAckTimestamp || maxReadTuple.maxReadTimestamp\n        )\n        .map(({ pid, maxAckTimestamp, maxReadTimestamp }) => ({\n          pid,\n          lastDeliveredAt: decodeDate(maxAckTimestamp),\n          lastReadAt: decodeDate(maxReadTimestamp),\n        }))\n    );\n  }\n}\n","import d from 'debug';\nimport { tap } from './utils';\n\nconst debug = d('LC:SignatureFactoryRunner');\n\nfunction _validateSignature(signatureResult = {}) {\n  const { signature, timestamp, nonce } = signatureResult;\n  if (\n    typeof signature !== 'string' ||\n    typeof timestamp !== 'number' ||\n    typeof nonce !== 'string'\n  ) {\n    throw new Error('malformed signature');\n  }\n  return {\n    signature,\n    timestamp,\n    nonce,\n  };\n}\n\nexport default (signatureFactory, params) =>\n  Promise.resolve()\n    .then(() => {\n      debug('call signatureFactory with %O', params);\n      return signatureFactory(...params);\n    })\n    .then(\n      tap(signatureResult => debug('sign result %O', signatureResult)),\n      error => {\n        // eslint-disable-next-line no-param-reassign\n        error.message = `sign error: ${error.message}`;\n        debug(error);\n        throw error;\n      }\n    )\n    .then(_validateSignature);\n","import isEmpty from 'lodash/isEmpty';\nimport cloneDeep from 'lodash/cloneDeep';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport ConversationBase from './conversation-base';\nimport {\n  decodeDate,\n  getTime,\n  encode,\n  keyRemap,\n  union,\n  difference,\n  internal,\n  setValue,\n  ensureArray,\n} from '../utils';\nimport {\n  GenericCommand,\n  ConvCommand,\n  JsonObjectMessage,\n  BlacklistCommand,\n  OpType,\n} from '../../proto/message';\nimport runSignatureFactory from '../signature-factory-runner';\nimport { createError } from '../error';\n\n/**\n * 部分失败异常\n * @typedef OperationFailureError\n * @type {Error}\n * @property {string} message 异常信息\n * @property {string[]} clientIds 因为该原因失败的 client id 列表\n * @property {number} [code] 错误码\n * @property {string} [detail] 详细信息\n */\n\n/**\n * 部分成功的结果\n * @typedef PartiallySuccess\n * @type {Object}\n * @property {string[]} successfulClientIds 成功的 client id 列表\n * @property {OperationFailureError[]} failures 失败的异常列表\n */\n\n/**\n * 分页查询结果\n * @typedef PagedResults\n * @type {Object}\n * @property {T[]} results 查询结果\n * @property {string} [next] 存在表示还有更多结果，在下次查询中带上可实现翻页。\n */\n\nconst createPartiallySuccess = ({ allowedPids, failedPids }) => ({\n  successfulClientIds: allowedPids,\n  failures: failedPids.map(({ pids, ...error }) =>\n    Object.assign(createError(error), { clientIds: pids })\n  ),\n});\n\n/**\n * @extends ConversationBase\n * @private\n * @abstract\n */\nclass PersistentConversation extends ConversationBase {\n  constructor(\n    data,\n    {\n      creator,\n      createdAt,\n      updatedAt,\n      transient = false,\n      system = false,\n      muted = false,\n      mutedMembers = [],\n      ...attributes\n    },\n    client\n  ) {\n    super(\n      {\n        ...data,\n        /**\n         * 对话创建者\n         * @memberof PersistentConversation#\n         * @type {String}\n         */\n        creator,\n        /**\n         * 对话创建时间\n         * @memberof PersistentConversation#\n         * @type {Date}\n         */\n        createdAt,\n        /**\n         * 对话更新时间\n         * @memberof PersistentConversation#\n         * @type {Date}\n         */\n        updatedAt,\n        /**\n         * 对该对话设置了静音的用户列表\n         * @memberof PersistentConversation#\n         * @type {?String[]}\n         */\n        mutedMembers,\n        /**\n         * 暂态对话标记\n         * @memberof PersistentConversation#\n         * @type {Boolean}\n         */\n        transient,\n        /**\n         * 系统对话标记\n         * @memberof PersistentConversation#\n         * @type {Boolean}\n         * @since 3.3.0\n         */\n        system,\n        /**\n         * 当前用户静音该对话标记\n         * @memberof PersistentConversation#\n         * @type {Boolean}\n         */\n        muted,\n        _attributes: attributes,\n      },\n      client\n    );\n    this._reset();\n  }\n\n  set createdAt(value) {\n    this._createdAt = decodeDate(value);\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  /**\n   * 对话名字，对应 _Conversation 表中的 name\n   * @type {String}\n   */\n  get name() {\n    return this.get('name');\n  }\n\n  set name(value) {\n    this.set('name', value);\n  }\n\n  /**\n   * 获取对话的自定义属性\n   * @since 3.2.0\n   * @param  {String} key key 属性的键名，'x' 对应 Conversation 表中的 x 列\n   * @return {Any} 属性的值\n   */\n  get(key) {\n    return get(internal(this).currentAttributes, key);\n  }\n\n  /**\n   * 设置对话的自定义属性\n   * @since 3.2.0\n   * @param {String} key 属性的键名，'x' 对应 Conversation 表中的 x 列，支持使用 'x.y.z' 来修改对象的部分字段。\n   * @param {Any} value 属性的值\n   * @return {this} self\n   * @example\n   *\n   * // 设置对话的 color 属性\n   * conversation.set('color', {\n   *   text: '#000',\n   *   background: '#DDD',\n   * });\n   * // 设置对话的 color.text 属性\n   * conversation.set('color.text', '#333');\n   */\n  set(key, value) {\n    this._debug(`set [${key}]: ${value}`);\n    const { pendingAttributes } = internal(this);\n    const pendingKeys = Object.keys(pendingAttributes);\n    // suppose pendingAttributes = { 'a.b': {} }\n    // set 'a' or 'a.b': delete 'a.b'\n    const re = new RegExp(`^${key}`);\n    const childKeys = pendingKeys.filter(re.test.bind(re));\n    childKeys.forEach(k => {\n      delete pendingAttributes[k];\n    });\n    if (childKeys.length) {\n      pendingAttributes[key] = value;\n    } else {\n      // set 'a.c': nothing to do\n      // set 'a.b.c.d': assign c: { d: {} } to 'a.b'\n      const parentKey = find(pendingKeys, k => key.indexOf(k) === 0); // 'a.b'\n      if (parentKey) {\n        setValue(\n          pendingAttributes[parentKey],\n          key.slice(parentKey.length + 1),\n          value\n        );\n      } else {\n        pendingAttributes[key] = value;\n      }\n    }\n    this._buildCurrentAttributes();\n    return this;\n  }\n\n  _buildCurrentAttributes() {\n    const { pendingAttributes } = internal(this);\n    internal(this).currentAttributes = Object.keys(pendingAttributes).reduce(\n      (target, k) => setValue(target, k, pendingAttributes[k]),\n      cloneDeep(this._attributes)\n    );\n  }\n\n  _updateServerAttributes(attributes) {\n    Object.keys(attributes).forEach(key =>\n      setValue(this._attributes, key, attributes[key])\n    );\n    this._buildCurrentAttributes();\n  }\n\n  _reset() {\n    Object.assign(internal(this), {\n      pendingAttributes: {},\n      currentAttributes: this._attributes,\n    });\n  }\n\n  /**\n   * 保存当前对话的属性至服务器\n   * @return {Promise.<this>} self\n   */\n  async save() {\n    this._debug('save');\n    const attr = internal(this).pendingAttributes;\n    if (isEmpty(attr)) {\n      this._debug('nothing touched, resolve with self');\n      return this;\n    }\n    this._debug('attr: %O', attr);\n    const convMessage = new ConvCommand({\n      attr: new JsonObjectMessage({\n        data: JSON.stringify(encode(attr)),\n      }),\n    });\n    const resCommand = await this._send(\n      new GenericCommand({\n        op: 'update',\n        convMessage,\n      })\n    );\n    this.updatedAt = resCommand.convMessage.udate;\n    this._attributes = internal(this).currentAttributes;\n    internal(this).pendingAttributes = {};\n    return this;\n  }\n\n  /**\n   * 从服务器更新对话的属性\n   * @return {Promise.<this>} self\n   */\n  async fetch() {\n    const query = this._client.getQuery().equalTo('objectId', this.id);\n    await query.find();\n    return this;\n  }\n\n  /**\n   * 静音，客户端拒绝收到服务器端的离线推送通知\n   * @return {Promise.<this>} self\n   */\n  async mute() {\n    this._debug('mute');\n    await this._send(\n      new GenericCommand({\n        op: 'mute',\n      })\n    );\n    if (!this.transient) {\n      this.muted = true;\n      this.mutedMembers = union(this.mutedMembers, [this._client.id]);\n    }\n    return this;\n  }\n\n  /**\n   * 取消静音\n   * @return {Promise.<this>} self\n   */\n  async unmute() {\n    this._debug('unmute');\n    await this._send(\n      new GenericCommand({\n        op: 'unmute',\n      })\n    );\n    if (!this.transient) {\n      this.muted = false;\n      this.mutedMembers = difference(this.mutedMembers, [this._client.id]);\n    }\n    return this;\n  }\n\n  async _appendConversationSignature(command, action, clientIds) {\n    if (this._client.options.conversationSignatureFactory) {\n      const params = [this.id, this._client.id, clientIds.sort(), action];\n      const signatureResult = await runSignatureFactory(\n        this._client.options.conversationSignatureFactory,\n        params\n      );\n      Object.assign(\n        command.convMessage,\n        keyRemap(\n          {\n            signature: 's',\n            timestamp: 't',\n            nonce: 'n',\n          },\n          signatureResult\n        )\n      );\n    }\n  }\n\n  async _appendBlacklistSignature(command, action, clientIds) {\n    if (this._client.options.blacklistSignatureFactory) {\n      const params = [this.id, this._client.id, clientIds.sort(), action];\n      const signatureResult = await runSignatureFactory(\n        this._client.options.blacklistSignatureFactory,\n        params\n      );\n      Object.assign(\n        command.blacklistMessage,\n        keyRemap(\n          {\n            signature: 's',\n            timestamp: 't',\n            nonce: 'n',\n          },\n          signatureResult\n        )\n      );\n    }\n  }\n\n  /**\n   * 增加成员\n   * @param {String|String[]} clientIds 新增成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async add(clientIds) {\n    this._debug('add', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const command = new GenericCommand({\n      op: 'add',\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    await this._appendConversationSignature(command, 'invite', clientIds);\n    const {\n      convMessage,\n      convMessage: { allowedPids },\n    } = await this._send(command);\n    this._addMembers(allowedPids);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * 剔除成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async remove(clientIds) {\n    this._debug('remove', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const command = new GenericCommand({\n      op: 'remove',\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    await this._appendConversationSignature(command, 'kick', clientIds);\n    const {\n      convMessage,\n      convMessage: { allowedPids },\n    } = await this._send(command);\n    this._removeMembers(allowedPids);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * （当前用户）加入该对话\n   * @return {Promise.<this>} self\n   */\n  async join() {\n    this._debug('join');\n    return this.add(this._client.id).then(({ failures }) => {\n      if (failures[0]) throw failures[0];\n      return this;\n    });\n  }\n\n  /**\n   * （当前用户）退出该对话\n   * @return {Promise.<this>} self\n   */\n  async quit() {\n    this._debug('quit');\n    return this.remove(this._client.id).then(({ failures }) => {\n      if (failures[0]) throw failures[0];\n      return this;\n    });\n  }\n\n  /**\n   * 在该对话中禁言成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async muteMembers(clientIds) {\n    this._debug('mute', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      op: OpType.add_shutup,\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    const { convMessage } = await this._send(command);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * 在该对话中解除成员禁言\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async unmuteMembers(clientIds) {\n    this._debug('unmute', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      op: OpType.remove_shutup,\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    const { convMessage } = await this._send(command);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * 查询该对话禁言成员列表\n   * @param {Object} [options]\n   * @param {Number} [options.limit] 返回的成员数量，服务器默认值 10\n   * @param {String} [options.next] 从指定 next 开始查询，与 limit 一起使用可以完成翻页。\n   * @return {PagedResults.<string>} 查询结果。其中的 cureser 存在表示还有更多结果。\n   */\n  async queryMutedMembers({ limit, next } = {}) {\n    this._debug('query muted: limit %O, next: %O', limit, next);\n    const command = new GenericCommand({\n      op: OpType.query_shutup,\n      convMessage: new ConvCommand({\n        limit,\n        next,\n      }),\n    });\n    const {\n      convMessage: { m, next: newNext },\n    } = await this._send(command);\n    return {\n      results: m,\n      next: newNext,\n    };\n  }\n\n  /**\n   * 将用户加入该对话黑名单\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async blockMembers(clientIds) {\n    this._debug('block', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      cmd: 'blacklist',\n      op: OpType.block,\n      blacklistMessage: new BlacklistCommand({\n        srcCid: this.id,\n        toPids: clientIds,\n      }),\n    });\n    await this._appendBlacklistSignature(\n      command,\n      'conversation-block-clients',\n      clientIds\n    );\n    const { blacklistMessage } = await this._send(command);\n    return createPartiallySuccess(blacklistMessage);\n  }\n\n  /**\n   * 将用户移出该对话黑名单\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async unblockMembers(clientIds) {\n    this._debug('unblock', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      cmd: 'blacklist',\n      op: OpType.unblock,\n      blacklistMessage: new BlacklistCommand({\n        srcCid: this.id,\n        toPids: clientIds,\n      }),\n    });\n    await this._appendBlacklistSignature(\n      command,\n      'conversation-unblock-clients',\n      clientIds\n    );\n    const { blacklistMessage } = await this._send(command);\n    return createPartiallySuccess(blacklistMessage);\n  }\n\n  /**\n   * 查询该对话黑名单\n   * @param {Object} [options]\n   * @param {Number} [options.limit] 返回的成员数量，服务器默认值 10\n   * @param {String} [options.next] 从指定 next 开始查询，与 limit 一起使用可以完成翻页\n   * @return {PagedResults.<string>} 查询结果。其中的 cureser 存在表示还有更多结果。\n   */\n  async queryBlockedMembers({ limit, next } = {}) {\n    this._debug('query blocked: limit %O, next: %O', limit, next);\n    const command = new GenericCommand({\n      cmd: 'blacklist',\n      op: OpType.query,\n      blacklistMessage: new BlacklistCommand({\n        srcCid: this.id,\n        limit,\n        next,\n      }),\n    });\n    const {\n      blacklistMessage: { blockedPids, next: newNext },\n    } = await this._send(command);\n    return {\n      results: blockedPids,\n      next: newNext,\n    };\n  }\n\n  toFullJSON() {\n    const {\n      creator,\n      system,\n      transient,\n      createdAt,\n      updatedAt,\n      _attributes,\n    } = this;\n    return {\n      ...super.toFullJSON(),\n      creator,\n      system,\n      transient,\n      createdAt: getTime(createdAt),\n      updatedAt: getTime(updatedAt),\n      ..._attributes,\n    };\n  }\n\n  toJSON() {\n    const {\n      creator,\n      system,\n      transient,\n      muted,\n      mutedMembers,\n      createdAt,\n      updatedAt,\n      _attributes,\n    } = this;\n    return {\n      ...super.toJSON(),\n      creator,\n      system,\n      transient,\n      muted,\n      mutedMembers,\n      createdAt,\n      updatedAt,\n      ..._attributes,\n    };\n  }\n}\n\nexport default PersistentConversation;\n","import { internal } from './utils';\n\n/**\n * 对话成员角色枚举\n * @enum {String}\n * @since 4.0.0\n * @memberof module:leancloud-realtime\n */\nconst ConversationMemberRole = {\n  /** 所有者 */\n  OWNER: 'Owner',\n  /** 管理员 */\n  MANAGER: 'Manager',\n  /** 成员 */\n  MEMBER: 'Member',\n};\nObject.freeze(ConversationMemberRole);\nexport { ConversationMemberRole };\n\nexport default class ConversationMemberInfo {\n  /**\n   * 对话成员属性，保存了成员与某个对话相关的属性，对应 _ConversationMemberInfo 表\n   * @since 4.0.0\n   */\n  constructor({ conversation, memberId, role }) {\n    if (!conversation) throw new Error('conversation requried');\n    if (!memberId) throw new Error('memberId requried');\n    Object.assign(internal(this), {\n      conversation,\n      memberId,\n      role,\n    });\n  }\n\n  /**\n   * 对话 Id\n   * @type {String}\n   * @readonly\n   */\n  get conversationId() {\n    return internal(this).conversation.id;\n  }\n\n  /**\n   * 成员 Id\n   * @type {String}\n   * @readonly\n   */\n  get memberId() {\n    return internal(this).memberId;\n  }\n\n  /**\n   * 角色\n   * @type {module:leancloud-realtime.ConversationMemberRole | String}\n   * @readonly\n   */\n  get role() {\n    if (this.isOwner) return ConversationMemberRole.OWNER;\n    return internal(this).role;\n  }\n\n  /**\n   * 是否是管理员\n   * @type {Boolean}\n   * @readonly\n   */\n  get isOwner() {\n    return this.memberId === internal(this).conversation.creator;\n  }\n\n  toJSON() {\n    const { conversationId, memberId, role, isOwner } = this;\n    return {\n      conversationId,\n      memberId,\n      role,\n      isOwner,\n    };\n  }\n}\n","import PersistentConversation from './persistent-conversation';\nimport ConversationMemberInfo, {\n  ConversationMemberRole,\n} from '../conversation-member-info';\nimport { internal, union, difference } from '../utils';\nimport {\n  GenericCommand,\n  ConvCommand,\n  ConvMemberInfo,\n  OpType,\n} from '../../proto/message';\nimport { createError, ErrorCode } from '../error';\n\n/**\n * 普通对话\n *\n * 无法直接实例化，请使用 {@link IMClient#createConversation} 创建新的普通对话。\n * @extends PersistentConversation\n * @public\n */\nclass Conversation extends PersistentConversation {\n  _addMembers(members) {\n    super._addMembers(members);\n    this.members = union(this.members, members);\n    const { memberInfoMap } = internal(this);\n    if (!memberInfoMap) return;\n    members.forEach(memberId => {\n      memberInfoMap[memberId] =\n        memberInfoMap[memberId] ||\n        new ConversationMemberInfo({\n          conversation: this,\n          memberId,\n          role: ConversationMemberRole.MEMBER,\n        });\n    });\n  }\n\n  _removeMembers(members) {\n    super._removeMembers(members);\n    this.members = difference(this.members, members);\n    const { memberInfoMap } = internal(this);\n    if (!memberInfoMap) return;\n    members.forEach(memberId => {\n      delete memberInfoMap[memberId];\n    });\n  }\n\n  async _fetchAllMemberInfo() {\n    const response = await this._client._requestWithSessionToken({\n      method: 'GET',\n      path: '/classes/_ConversationMemberInfo',\n      query: {\n        where: { cid: this.id },\n      },\n    });\n    const memberInfos = response.results.map(\n      info =>\n        new ConversationMemberInfo({\n          conversation: this,\n          memberId: info.clientId,\n          role: info.role,\n        })\n    );\n    const memberInfoMap = {};\n    memberInfos.forEach(memberInfo => {\n      memberInfoMap[memberInfo.memberId] = memberInfo;\n    });\n    this.members.forEach(memberId => {\n      memberInfoMap[memberId] =\n        memberInfoMap[memberId] ||\n        new ConversationMemberInfo({\n          conversation: this,\n          memberId,\n          role: ConversationMemberRole.MEMBER,\n        });\n    });\n    internal(this).memberInfoMap = memberInfoMap;\n    return memberInfoMap;\n  }\n\n  /**\n   * 获取所有成员的对话属性\n   * @since 4.0.0\n   * @return {Promise.<ConversationMemberInfo[]>} 所有成员的对话属性列表\n   */\n  async getAllMemberInfo({ noCache = false } = {}) {\n    let { memberInfoMap } = internal(this);\n    if (!memberInfoMap || noCache) {\n      memberInfoMap = await this._fetchAllMemberInfo();\n    }\n    return this.members.map(memberId => memberInfoMap[memberId]);\n  }\n\n  /**\n   * 获取指定成员的对话属性\n   * @since 4.0.0\n   * @param {String} memberId 成员 Id\n   * @return {Promise.<ConversationMemberInfo>} 指定成员的对话属性\n   */\n  async getMemberInfo(memberId) {\n    if (this.members.indexOf(memberId) === -1)\n      throw new Error(\n        `${memberId} is not the mumber of conversation[${this.id}]`\n      );\n    const { memberInfoMap } = internal(this);\n    if (!(memberInfoMap && memberInfoMap[memberId]))\n      await this.getAllMemberInfo();\n    return internal(this).memberInfoMap[memberId];\n  }\n\n  /**\n   * 更新指定用户的角色\n   * @since 4.0.0\n   * @param {String} memberId 成员 Id\n   * @param {module:leancloud-realtime.ConversationMemberRole | String} role 角色\n   * @return {Promise.<this>} self\n   */\n  async updateMemberRole(memberId, role) {\n    this._debug('update member role');\n    if (role === ConversationMemberRole.OWNER)\n      throw createError({\n        code: ErrorCode.OWNER_PROMOTION_NOT_ALLOWED,\n      });\n    await this._send(\n      new GenericCommand({\n        op: OpType.member_info_update,\n        convMessage: new ConvCommand({\n          targetClientId: memberId,\n          info: new ConvMemberInfo({\n            pid: memberId,\n            role,\n          }),\n        }),\n      })\n    );\n    const { memberInfos } = internal(this);\n    if (memberInfos && memberInfos[memberId]) {\n      internal(memberInfos[memberId]).role = role;\n    }\n    return this;\n  }\n}\n\nexport default Conversation;\n","import PersistentConversation from './persistent-conversation';\n\n/**\n * 聊天室。\n *\n * 无法直接实例化，请使用 {@link IMClient#createChatRoom} 创建新的聊天室。\n * @since 4.0.0\n * @extends PersistentConversation\n * @public\n */\nclass ChatRoom extends PersistentConversation {}\n\nexport default ChatRoom;\n","import PersistentConversation from './persistent-conversation';\n\n/**\n * 服务号。\n *\n * 服务号不支持在客户端创建。\n * @since 4.0.0\n * @extends PersistentConversation\n * @public\n */\nclass ServiceConversation extends PersistentConversation {\n  /**\n   * 订阅该服务号\n   * @return {Promise.<this>} self\n   */\n  async subscribe() {\n    return this.join();\n  }\n\n  /**\n   * 退订该服务号\n   * @return {Promise.<this>} self\n   */\n  async unsubscribe() {\n    return this.quit();\n  }\n}\n\nexport default ServiceConversation;\n","import ConversationBase from './conversation-base';\nimport { createError, ErrorCode } from '../error';\nimport { decodeDate, getTime } from '../utils';\n\nconst transformNotFoundError = error =>\n  error.code === ErrorCode.CONVERSATION_NOT_FOUND\n    ? createError({ code: ErrorCode.TEMPORARY_CONVERSATION_EXPIRED })\n    : error;\n\n/**\n * 临时对话\n * @since 4.0.0\n * @extends ConversationBase\n * @public\n */\nclass TemporaryConversation extends ConversationBase {\n  /**\n   * 无法直接实例化，请使用 {@link IMClient#createTemporaryConversation} 创建新的临时对话。\n   */\n  constructor(data, { expiredAt }, client) {\n    super(\n      {\n        ...data,\n        expiredAt,\n      },\n      client\n    );\n  }\n\n  /**\n   * 对话失效时间\n   * @type {Date}\n   */\n  set expiredAt(value) {\n    this._expiredAt = decodeDate(value);\n  }\n\n  get expiredAt() {\n    return this._expiredAt;\n  }\n\n  /**\n   * 对话是否已失效\n   * @type {Boolean}\n   */\n  get expired() {\n    return this.expiredAt < new Date();\n  }\n\n  async _send(...args) {\n    if (this.expired)\n      throw createError({ code: ErrorCode.TEMPORARY_CONVERSATION_EXPIRED });\n    try {\n      return await super._send(...args);\n    } catch (error) {\n      throw transformNotFoundError(error);\n    }\n  }\n\n  async send(...args) {\n    try {\n      return await super.send(...args);\n    } catch (error) {\n      throw transformNotFoundError(error);\n    }\n  }\n\n  toFullJSON() {\n    const { expiredAt } = this;\n    return {\n      ...super.toFullJSON(),\n      expiredAt: getTime(expiredAt),\n    };\n  }\n\n  toJSON() {\n    const { expiredAt, expired } = this;\n    return {\n      ...super.toJSON(),\n      expiredAt,\n      expired,\n    };\n  }\n}\n\nexport default TemporaryConversation;\n","import d from 'debug';\n\nconst debug = d('LC:ConversationQuery');\n\nexport default class ConversationQuery {\n  static _encode(value) {\n    if (value instanceof Date) {\n      return { __type: 'Date', iso: value.toJSON() };\n    }\n    if (value instanceof RegExp) {\n      return value.source;\n    }\n    return value;\n  }\n\n  static _quote(s) {\n    return `\\\\Q${s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q')}\\\\E`;\n  }\n\n  static _calculateFlag(options) {\n    return ['withLastMessagesRefreshed', 'compact'].reduce(\n      // eslint-disable-next-line no-bitwise\n      (prev, key) => (prev << 1) + Boolean(options[key]),\n      0\n    );\n  }\n\n  /**\n   * 构造一个用 AND 连接所有查询的 ConversationQuery\n   * @param {...ConversationQuery} queries\n   * @return {ConversationQuery}\n   */\n  static and(...queries) {\n    if (queries.length < 2) {\n      throw new Error('The queries must contain at least two elements');\n    }\n    if (!queries.every(q => q instanceof ConversationQuery)) {\n      throw new Error(\n        'The element of queries must be an instance of ConversationQuery'\n      );\n    }\n    const combined = new ConversationQuery(queries[0]._client);\n    combined._where.$and = queries.map(q => q._where);\n    return combined;\n  }\n\n  /**\n   * 构造一个用 OR 连接所有查询的 ConversationQuery\n   * @param  {...ConversationQuery} queries\n   * @return {ConversationQuery}\n   */\n  static or(...queries) {\n    const combined = ConversationQuery.and(...queries);\n    combined._where.$or = combined._where.$and;\n    delete combined._where.$and;\n    return combined;\n  }\n\n  /**\n   * Create a ConversationQuery\n   * @param  {IMClient} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._where = {};\n    this._extraOptions = {};\n  }\n\n  _addCondition(key, condition, value) {\n    // Check if we already have a condition\n    if (!this._where[key]) {\n      this._where[key] = {};\n    }\n    this._where[key][condition] = this.constructor._encode(value);\n    return this;\n  }\n\n  toJSON() {\n    const json = {\n      where: this._where,\n      flag: this.constructor._calculateFlag(this._extraOptions),\n    };\n    if (typeof this._skip !== 'undefined') json.skip = this._skip;\n    if (typeof this._limit !== 'undefined') json.limit = this._limit;\n    if (typeof this._order !== 'undefined') json.sort = this._order;\n    debug(json);\n    return json;\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员包含某些成员即可返回\n   * @param {string[]} peerIds - 成员 ID 列表\n   * @return {ConversationQuery} self\n   */\n  containsMembers(peerIds) {\n    return this.containsAll('m', peerIds);\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员条件满足条件的才返回\n   *\n   * @param {string[]} - 成员 ID 列表\n   * @param {Boolean} includeSelf - 是否包含自己\n   * @return {ConversationQuery} self\n   */\n  withMembers(peerIds, includeSelf) {\n    const peerIdsSet = new Set(peerIds);\n    if (includeSelf) {\n      peerIdsSet.add(this._client.id);\n    }\n    this.sizeEqualTo('m', peerIdsSet.size);\n    return this.containsMembers(Array.from(peerIdsSet));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  equalTo(key, value) {\n    this._where[key] = this.constructor._encode(value);\n    return this;\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于条件时即可返回\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThan(key, value) {\n    return this._addCondition(key, '$lt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于等于条件时即可返回\n\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$lte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThan(key, value) {\n    return this._addCondition(key, '$gt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$gte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足不等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  notEqualTo(key, value) {\n    return this._addCondition(key, '$ne', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  exists(key) {\n    return this._addCondition(key, '$exists', true);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 不存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  doesNotExist(key) {\n    return this._addCondition(key, '$exists', false);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containedIn(key, values) {\n    return this._addCondition(key, '$in', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值不包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  notContainsIn(key, values) {\n    return this._addCondition(key, '$nin', values);\n  }\n\n  /**\n   * 增加查询条件，当conversation的属性中对应的字段中的元素包含所有的值才可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containsAll(key, values) {\n    return this._addCondition(key, '$all', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含此字符串即可返回\n   *\n   * @param {string} key\n   * @param {string} subString\n   * @return {ConversationQuery} self\n   */\n  contains(key, subString) {\n    return this._addCondition(\n      key,\n      '$regex',\n      ConversationQuery._quote(subString)\n    );\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串起始即可返回\n   *\n   * @param {string} key\n   * @param {string} prefix\n   * @return {ConversationQuery} self\n   */\n  startsWith(key, prefix) {\n    return this._addCondition(\n      key,\n      '$regex',\n      `^${ConversationQuery._quote(prefix)}`\n    );\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串结束即可返回\n   *\n   * @param {string} key\n   * @param {string} suffix\n   * @return {ConversationQuery} self\n   */\n  endsWith(key, suffix) {\n    return this._addCondition(\n      key,\n      '$regex',\n      `${ConversationQuery._quote(suffix)}$`\n    );\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值满足提供的正则表达式即可返回\n   *\n   * @param {string} key\n   * @param {RegExp} regex\n   * @return {ConversationQuery} self\n   */\n  matches(key, regex) {\n    this._addCondition(key, '$regex', regex);\n    // Javascript regex options support mig as inline options but store them\n    // as properties of the object. We support mi & should migrate them to\n    // modifiers\n    let _modifiers = '';\n    if (regex.ignoreCase) {\n      _modifiers += 'i';\n    }\n    if (regex.multiline) {\n      _modifiers += 'm';\n    }\n\n    if (_modifiers && _modifiers.length) {\n      this._addCondition(key, '$options', _modifiers);\n    }\n    return this;\n  }\n\n  /**\n   * 添加查询约束条件，查找 key 类型是数组，该数组的长度匹配提供的数值\n   *\n   * @param {string} key\n   * @param {Number} length\n   * @return {ConversationQuery} self\n   */\n  sizeEqualTo(key, length) {\n    return this._addCondition(key, '$size', length);\n  }\n\n  /**\n   * 设置返回集合的大小上限\n   *\n   * @param {Number} limit - 上限\n   * @return {ConversationQuery} self\n   */\n  limit(limit) {\n    this._limit = limit;\n    return this;\n  }\n\n  /**\n   * 设置返回集合的起始位置，一般用于分页\n   *\n   * @param {Number} skip - 起始位置跳过几个对象\n   * @return {ConversationQuery} self\n   */\n  skip(skip) {\n    this._skip = skip;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  ascending(key) {\n    this._order = key;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addAscending(key) {\n    if (this._order) {\n      this._order += `,${key}`;\n    } else {\n      this._order = key;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  descending(key) {\n    this._order = `-${key}`;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addDescending(key) {\n    if (this._order) {\n      this._order += `,-${key}`;\n    } else {\n      this._order = `-${key}`;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 刷新最后一条消息\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessagesRefreshed(enabled = true) {\n    this._extraOptions.withLastMessagesRefreshed = enabled;\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 为精简模式，即不含成员列表\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  compact(enabled = true) {\n    this._extraOptions.compact = enabled;\n    return this;\n  }\n\n  /**\n   * 执行查询\n   * @return {Promise.<ConversationBase[]>}\n   */\n  async find() {\n    return this._client._executeQuery(this);\n  }\n\n  /**\n   * 返回符合条件的第一个结果\n   * @return {Promise.<ConversationBase>}\n   */\n  async first() {\n    return (await this.limit(1).find())[0];\n  }\n}\n","import d from 'debug';\nimport { Expirable } from './utils';\n\nconst debug = d('LC:SessionManager');\n\nexport default class SessionManager {\n  constructor({ refresh, onBeforeGetSessionToken } = {}) {\n    this.refresh = refresh;\n    this._onBeforeGetSessionToken = onBeforeGetSessionToken;\n    this.setSessionToken(null, 0);\n  }\n\n  setSessionToken(token, ttl) {\n    debug('set session token', token, ttl);\n    const sessionToken = new Expirable(token, ttl * 1000);\n    this._sessionToken = sessionToken;\n    delete this._pendingSessionTokenPromise;\n    return sessionToken;\n  }\n\n  async setSessionTokenAsync(promise) {\n    const currentSessionToken = this._sessionToken;\n    this._pendingSessionTokenPromise = promise.catch(error => {\n      // revert, otherwise the following getSessionToken calls\n      // will all be rejected\n      this._sessionToken = currentSessionToken;\n      throw error;\n    });\n    return this.setSessionToken(...(await this._pendingSessionTokenPromise));\n  }\n\n  async getSessionToken({ autoRefresh = true } = {}) {\n    debug('get session token');\n    if (this._onBeforeGetSessionToken) {\n      this._onBeforeGetSessionToken(this);\n    }\n    const { value, originalValue } =\n      this._sessionToken || (await this._pendingSessionTokenPromise);\n    if (value === Expirable.EXPIRED && autoRefresh && this.refresh) {\n      debug('refresh expired session token');\n      const { value: newValue } = await this.setSessionTokenAsync(\n        this.refresh(this, originalValue)\n      );\n      debug('session token', newValue);\n      return newValue;\n    }\n    debug('session token', value);\n    return value;\n  }\n\n  revoke() {\n    if (this._sessionToken) this._sessionToken.expiredAt = -1;\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { decode as decodeBase64 } from 'base64-arraybuffer';\nimport remove from 'lodash/remove';\nimport values from 'lodash/values';\nimport d from 'debug';\nimport {\n  Conversation,\n  ChatRoom,\n  ServiceConversation,\n  TemporaryConversation,\n} from './conversations';\nimport ConversationBase from './conversations/conversation-base';\nimport ConversationQuery from './conversation-query';\nimport {\n  GenericCommand,\n  SessionCommand,\n  ConvCommand,\n  AckCommand,\n  JsonObjectMessage,\n  ReadCommand,\n  ReadTuple,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport * as Event from './events/im';\nimport { ErrorCode, createError } from './error';\nimport {\n  Expirable,\n  Cache,\n  keyRemap,\n  trim,\n  internal,\n  throttle,\n  encode,\n  decode,\n  decodeDate,\n  getTime,\n} from './utils';\nimport { applyDecorators, applyDispatcher } from './plugin';\nimport SessionManager from './session-manager';\nimport runSignatureFactory from './signature-factory-runner';\nimport { MessageStatus } from './messages/message';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:IMClient');\n\nconst {\n  INVITED,\n  KICKED,\n  MEMBERS_JOINED,\n  MEMBERS_LEFT,\n  MEMBER_INFO_UPDATED,\n  BLOCKED,\n  UNBLOCKED,\n  MEMBERS_BLOCKED,\n  MEMBERS_UNBLOCKED,\n  MUTED,\n  UNMUTED,\n  MEMBERS_MUTED,\n  MEMBERS_UNMUTED,\n  MESSAGE,\n  UNREAD_MESSAGES_COUNT_UPDATE,\n  CLOSE,\n  CONFLICT,\n  UNHANDLED_MESSAGE,\n  CONVERSATION_INFO_UPDATED,\n  MESSAGE_RECALL,\n  MESSAGE_UPDATE,\n  INFO_UPDATED,\n} = Event;\n\nconst isTemporaryConversatrionId = id => /^_tmp:/.test(id);\n\n/**\n * 1 patch-msg\n * 1 temp-conv-msg\n * 0 auto-bind-deviceid-and-installation\n * 1 transient-msg-ack\n * 1 keep-notification\n * 1 partial-failed-msg\n * 0 group-chat-rcp\n * 1 omit-peer-id\n * @ignore\n */\nconst configBitmap = 0b10111011;\n\nexport default class IMClient extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link Realtime#createIMClient} 创建新的 IMClient。\n   *\n   * @extends EventEmitter\n   */\n  constructor(id, options = {}, props) {\n    if (!(id === undefined || typeof id === 'string')) {\n      throw new TypeError(`Client id [${id}] is not a String`);\n    }\n    super();\n    Object.assign(\n      this,\n      {\n        /**\n         * @var id {String} 客户端 id\n         * @memberof IMClient#\n         */\n        id,\n        options,\n      },\n      props\n    );\n\n    if (!this._messageParser) {\n      throw new Error('IMClient must be initialized with a MessageParser');\n    }\n    this._conversationCache = new Cache(`client:${this.id}`);\n    this._ackMessageBuffer = {};\n    internal(this).lastPatchTime = Date.now();\n    internal(this).lastNotificationTime = undefined;\n    internal(this)._eventemitter = new EventEmitter();\n    if (debug.enabled) {\n      values(Event).forEach(event =>\n        this.on(event, (...payload) =>\n          this._debug(`${event} event emitted. %o`, payload)\n        )\n      );\n    }\n    // onIMClientCreate hook\n    applyDecorators(this._plugins.onIMClientCreate, this);\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  async _dispatchCommand(command) {\n    this._debug(trim(command), 'received');\n    if (command.serverTs && command.notificationType === 1) {\n      internal(this).lastNotificationTime = getTime(\n        decodeDate(command.serverTs)\n      );\n    }\n    switch (command.cmd) {\n      case CommandType.conv:\n        return this._dispatchConvMessage(command);\n      case CommandType.direct:\n        return this._dispatchDirectMessage(command);\n      case CommandType.session:\n        return this._dispatchSessionMessage(command);\n      case CommandType.unread:\n        return this._dispatchUnreadMessage(command);\n      case CommandType.rcp:\n        return this._dispatchRcpMessage(command);\n      case CommandType.patch:\n        return this._dispatchPatchMessage(command);\n      default:\n        return this.emit(UNHANDLED_MESSAGE, command);\n    }\n  }\n\n  async _dispatchSessionMessage(message) {\n    const {\n      sessionMessage: { code, reason },\n    } = message;\n    switch (message.op) {\n      case OpType.closed: {\n        internal(this)._eventemitter.emit('close');\n        if (code === ErrorCode.SESSION_CONFLICT) {\n          /**\n           * 用户在其他客户端登录，当前客户端被服务端强行下线。详见文档「单点登录」章节。\n           * @event IMClient#CONFLICT\n           * @param {Object} payload\n           * @param {string} payload.reason 原因\n           */\n          return this.emit(CONFLICT, {\n            reason,\n          });\n        }\n        /**\n         * 当前客户端被服务端强行下线\n         * @event IMClient#CLOSE\n         * @param {Object} payload\n         * @param {Number} payload.code 错误码\n         * @param {String} payload.reason 原因\n         */\n        return this.emit(CLOSE, {\n          code,\n          reason,\n        });\n      }\n      default:\n        this.emit(UNHANDLED_MESSAGE, message);\n        throw new Error('Unrecognized session command');\n    }\n  }\n\n  _dispatchUnreadMessage({ unreadMessage: { convs, notifTime } }) {\n    internal(this).lastUnreadNotifTime = notifTime;\n    // ensure all converstions are cached\n    return this.getConversations(convs.map(conv => conv.cid))\n      .then(() =>\n        // update conversations data\n        Promise.all(\n          convs.map(\n            ({\n              cid,\n              unread,\n              mid,\n              timestamp: ts,\n              from,\n              data,\n              binaryMsg,\n              patchTimestamp,\n              mentioned,\n            }) => {\n              const conversation = this._conversationCache.get(cid);\n              // deleted conversation\n              if (!conversation) return null;\n              let timestamp;\n              if (ts) {\n                timestamp = decodeDate(ts);\n                conversation.lastMessageAt = timestamp; // eslint-disable-line no-param-reassign\n              }\n              return (mid\n                ? this._messageParser.parse(binaryMsg || data).then(message => {\n                    const messageProps = {\n                      id: mid,\n                      cid,\n                      timestamp,\n                      updatedAt: patchTimestamp,\n                      from,\n                    };\n                    Object.assign(message, messageProps);\n                    conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n                  })\n                : Promise.resolve()\n              ).then(() => {\n                conversation._setUnreadMessagesMentioned(mentioned);\n                const countNotUpdated =\n                  unread === internal(conversation).unreadMessagesCount;\n                if (countNotUpdated) return null; // to be filtered\n                // manipulate internal property directly to skip unreadmessagescountupdate event\n                internal(conversation).unreadMessagesCount = unread;\n                return conversation;\n              });\n              // filter conversations without unread count update\n            }\n          )\n        ).then(conversations =>\n          conversations.filter(conversation => conversation)\n        )\n      )\n      .then(conversations => {\n        if (conversations.length) {\n          /**\n           * 未读消息数目更新\n           * @event IMClient#UNREAD_MESSAGES_COUNT_UPDATE\n           * @since 3.4.0\n           * @param {Conversation[]} conversations 未读消息数目有更新的对话列表\n           */\n          this.emit(UNREAD_MESSAGES_COUNT_UPDATE, conversations);\n        }\n      });\n  }\n\n  async _dispatchRcpMessage(message) {\n    const {\n      rcpMessage,\n      rcpMessage: { read },\n    } = message;\n    const conversationId = rcpMessage.cid;\n    const messageId = rcpMessage.id;\n    const timestamp = decodeDate(rcpMessage.t);\n    const conversation = this._conversationCache.get(conversationId);\n    // conversation not cached means the client does not send the message\n    // during this session\n    if (!conversation) return;\n    conversation._handleReceipt({ messageId, timestamp, read });\n  }\n\n  _dispatchPatchMessage({ patchMessage: { patches } }) {\n    // ensure all converstions are cached\n    return this.getConversations(patches.map(patch => patch.cid)).then(() =>\n      Promise.all(\n        patches.map(\n          ({\n            cid,\n            mid,\n            timestamp,\n            recall,\n            data,\n            patchTimestamp,\n            from,\n            binaryMsg,\n            mentionAll,\n            mentionPids,\n            patchCode,\n            patchReason,\n          }) => {\n            const conversation = this._conversationCache.get(cid);\n            // deleted conversation\n            if (!conversation) return null;\n            return this._messageParser\n              .parse(binaryMsg || data)\n              .then(message => {\n                const patchTime = getTime(decodeDate(patchTimestamp));\n                const messageProps = {\n                  id: mid,\n                  cid,\n                  timestamp,\n                  updatedAt: patchTime,\n                  from,\n                  mentionList: mentionPids,\n                  mentionedAll: mentionAll,\n                };\n                Object.assign(message, messageProps);\n                message._setStatus(MessageStatus.SENT);\n                message._updateMentioned(this.id);\n                if (internal(this).lastPatchTime < patchTime) {\n                  internal(this).lastPatchTime = patchTime;\n                }\n                // update conversation lastMessage\n                if (\n                  conversation.lastMessage &&\n                  conversation.lastMessage.id === mid\n                ) {\n                  conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n                }\n                let reason;\n                if (patchCode) {\n                  reason = {\n                    code: patchCode.toNumber(),\n                    detail: patchReason,\n                  };\n                }\n                if (recall) {\n                  /**\n                   * 消息被撤回\n                   * @event IMClient#MESSAGE_RECALL\n                   * @param {AVMessage} message 被撤回的消息\n                   * @param {ConversationBase} conversation 消息所在的会话\n                   * @param {PatchReason} [reason] 撤回的原因，不存在代表是发送者主动撤回\n                   */\n                  this.emit(MESSAGE_RECALL, message, conversation, reason);\n                  /**\n                   * 消息被撤回\n                   * @event ConversationBase#MESSAGE_RECALL\n                   * @param {AVMessage} message 被撤回的消息\n                   * @param {PatchReason} [reason] 撤回的原因，不存在代表是发送者主动撤回\n                   */\n                  conversation.emit(MESSAGE_RECALL, message, reason);\n                } else {\n                  /**\n                   * 消息被修改\n                   * @event IMClient#MESSAGE_UPDATE\n                   * @param {AVMessage} message 被修改的消息\n                   * @param {ConversationBase} conversation 消息所在的会话\n                   * @param {PatchReason} [reason] 修改的原因，不存在代表是发送者主动修改\n                   */\n                  this.emit(MESSAGE_UPDATE, message, conversation, reason);\n                  /**\n                   * 消息被修改\n                   * @event ConversationBase#MESSAGE_UPDATE\n                   * @param {AVMessage} message 被修改的消息\n                   * @param {PatchReason} [reason] 修改的原因，不存在代表是发送者主动修改\n                   */\n                  conversation.emit(MESSAGE_UPDATE, message, reason);\n                }\n              });\n          }\n        )\n      )\n    );\n  }\n\n  async _dispatchConvMessage(message) {\n    const {\n      convMessage,\n      convMessage: { initBy, m, info, attr },\n    } = message;\n    const conversation = await this.getConversation(convMessage.cid);\n    switch (message.op) {\n      case OpType.joined: {\n        conversation._addMembers([this.id]);\n        const payload = {\n          invitedBy: initBy,\n        };\n        /**\n         * 当前用户被添加至某个对话\n         * @event IMClient#INVITED\n         * @param {Object} payload\n         * @param {String} payload.invitedBy 邀请者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(INVITED, payload, conversation);\n        /**\n         * 当前用户被添加至当前对话\n         * @event ConversationBase#INVITED\n         * @param {Object} payload\n         * @param {String} payload.invitedBy 该移除操作的发起者 id\n         */\n        conversation.emit(INVITED, payload);\n        return;\n      }\n      case OpType.left: {\n        conversation._removeMembers([this.id]);\n        const payload = {\n          kickedBy: initBy,\n        };\n        /**\n         * 当前用户被从某个对话中移除\n         * @event IMClient#KICKED\n         * @param {Object} payload\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(KICKED, payload, conversation);\n        /**\n         * 当前用户被从当前对话中移除\n         * @event ConversationBase#KICKED\n         * @param {Object} payload\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         */\n        conversation.emit(KICKED, payload);\n        return;\n      }\n      case OpType.members_joined: {\n        conversation._addMembers(m);\n        const payload = {\n          invitedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有用户被添加至某个对话\n         * @event IMClient#MEMBERS_JOINED\n         * @param {Object} payload\n         * @param {String[]} payload.members 被添加的用户 id 列表\n         * @param {String} payload.invitedBy 邀请者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_JOINED, payload, conversation);\n        /**\n         * 有成员被添加至当前对话\n         * @event ConversationBase#MEMBERS_JOINED\n         * @param {Object} payload\n         * @param {String[]} payload.members 被添加的成员 id 列表\n         * @param {String} payload.invitedBy 邀请者 id\n         */\n        conversation.emit(MEMBERS_JOINED, payload);\n        return;\n      }\n      case OpType.members_left: {\n        conversation._removeMembers(m);\n        const payload = {\n          kickedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被从某个对话中移除\n         * @event IMClient#MEMBERS_LEFT\n         * @param {Object} payload\n         * @param {String[]} payload.members 被移除的成员 id 列表\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_LEFT, payload, conversation);\n        /**\n         * 有成员被从当前对话中移除\n         * @event ConversationBase#MEMBERS_LEFT\n         * @param {Object} payload\n         * @param {String[]} payload.members 被移除的成员 id 列表\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         */\n        conversation.emit(MEMBERS_LEFT, payload);\n        return;\n      }\n      case OpType.members_blocked: {\n        const payload = {\n          blockedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被加入某个对话的黑名单\n         * @event IMClient#MEMBERS_BLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_BLOCKED, payload, conversation);\n        /**\n         * 有成员被加入当前对话的黑名单\n         * @event ConversationBase#MEMBERS_BLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_BLOCKED, payload);\n        return;\n      }\n      case OpType.members_unblocked: {\n        const payload = {\n          unblockedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被移出某个对话的黑名单\n         * @event IMClient#MEMBERS_UNBLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_UNBLOCKED, payload, conversation);\n        /**\n         * 有成员被移出当前对话的黑名单\n         * @event ConversationBase#MEMBERS_UNBLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_UNBLOCKED, payload);\n        return;\n      }\n      case OpType.blocked: {\n        const payload = {\n          blockedBy: initBy,\n        };\n        /**\n         * 当前用户被加入某个对话的黑名单\n         * @event IMClient#BLOCKED\n         * @param {Object} payload\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(BLOCKED, payload, conversation);\n        /**\n         * 当前用户被加入当前对话的黑名单\n         * @event ConversationBase#BLOCKED\n         * @param {Object} payload\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         */\n        conversation.emit(BLOCKED, payload);\n        return;\n      }\n      case OpType.unblocked: {\n        const payload = {\n          unblockedBy: initBy,\n        };\n        /**\n         * 当前用户被移出某个对话的黑名单\n         * @event IMClient#UNBLOCKED\n         * @param {Object} payload\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(UNBLOCKED, payload, conversation);\n        /**\n         * 当前用户被移出当前对话的黑名单\n         * @event ConversationBase#UNBLOCKED\n         * @param {Object} payload\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         */\n        conversation.emit(UNBLOCKED, payload);\n        return;\n      }\n      case OpType.members_shutuped: {\n        const payload = {\n          mutedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员在某个对话中被禁言\n         * @event IMClient#MEMBERS_MUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_MUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被禁言\n         * @event ConversationBase#MEMBERS_MUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_MUTED, payload);\n        return;\n      }\n      case OpType.members_unshutuped: {\n        const payload = {\n          unmutedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员在某个对话中被解除禁言\n         * @event IMClient#MEMBERS_UNMUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_UNMUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被解除禁言\n         * @event ConversationBase#MEMBERS_UNMUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_UNMUTED, payload);\n        return;\n      }\n      case OpType.shutuped: {\n        const payload = {\n          mutedBy: initBy,\n        };\n        /**\n         * 有成员在某个对话中被禁言\n         * @event IMClient#MUTED\n         * @param {Object} payload\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被禁言\n         * @event ConversationBase#MUTED\n         * @param {Object} payload\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         */\n        conversation.emit(MUTED, payload);\n        return;\n      }\n      case OpType.unshutuped: {\n        const payload = {\n          unmutedBy: initBy,\n        };\n        /**\n         * 有成员在某个对话中被解除禁言\n         * @event IMClient#UNMUTED\n         * @param {Object} payload\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(UNMUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被解除禁言\n         * @event ConversationBase#UNMUTED\n         * @param {Object} payload\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         */\n        conversation.emit(UNMUTED, payload);\n        return;\n      }\n      case OpType.member_info_changed: {\n        const { pid, role } = info;\n        const { memberInfoMap } = internal(conversation);\n        // 如果不存在缓存，且不是 role 的更新，则不通知\n        if (!memberInfoMap && !role) return;\n        const memberInfo = await conversation.getMemberInfo(pid);\n        internal(memberInfo).role = role;\n        const payload = {\n          member: pid,\n          memberInfo,\n          updatedBy: initBy,\n        };\n        /**\n         * 有成员的对话信息被更新\n         * @event IMClient#MEMBER_INFO_UPDATED\n         * @param {Object} payload\n         * @param {String} payload.member 被更新对话信息的成员 id\n         * @param {ConversationMumberInfo} payload.memberInfo 被更新的成员对话信息\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBER_INFO_UPDATED, payload, conversation);\n        /**\n         * 有成员的对话信息被更新\n         * @event ConversationBase#MEMBER_INFO_UPDATED\n         * @param {Object} payload\n         * @param {String} payload.member 被更新对话信息的成员 id\n         * @param {ConversationMumberInfo} payload.memberInfo 被更新的成员对话信息\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBER_INFO_UPDATED, payload);\n        return;\n      }\n      case OpType.updated: {\n        const attributes = decode(JSON.parse(attr.data));\n        conversation._updateServerAttributes(attributes);\n        const payload = {\n          attributes,\n          updatedBy: initBy,\n        };\n        /**\n         * 该对话信息被更新\n         * @event IMClient#CONVERSATION_INFO_UPDATED\n         * @param {Object} payload\n         * @param {Object} payload.attributes 被更新的属性\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(CONVERSATION_INFO_UPDATED, payload, conversation);\n        /**\n         * 有对话信息被更新\n         * @event ConversationBase#INFO_UPDATED\n         * @param {Object} payload\n         * @param {Object} payload.attributes 被更新的属性\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         */\n        conversation.emit(INFO_UPDATED, payload);\n        return;\n      }\n      default:\n        this.emit(UNHANDLED_MESSAGE, message);\n        throw new Error('Unrecognized conversation command');\n    }\n  }\n\n  _dispatchDirectMessage(originalMessage) {\n    const {\n      directMessage,\n      directMessage: {\n        id,\n        cid,\n        fromPeerId,\n        timestamp,\n        transient,\n        patchTimestamp,\n        mentionPids,\n        mentionAll,\n        binaryMsg,\n        msg,\n      },\n    } = originalMessage;\n    const content = binaryMsg ? binaryMsg.toArrayBuffer() : msg;\n    return Promise.all([\n      this.getConversation(directMessage.cid),\n      this._messageParser.parse(content),\n    ]).then(([conversation, message]) => {\n      // deleted conversation\n      if (!conversation) return undefined;\n      const messageProps = {\n        id,\n        cid,\n        timestamp,\n        updatedAt: patchTimestamp,\n        from: fromPeerId,\n        mentionList: mentionPids,\n        mentionedAll: mentionAll,\n      };\n      Object.assign(message, messageProps);\n      message._updateMentioned(this.id);\n      message._setStatus(MessageStatus.SENT);\n      // filter outgoing message sent from another device\n      if (message.from !== this.id) {\n        if (!(transient || conversation.transient)) {\n          this._sendAck(message);\n        }\n      }\n      return this._dispatchParsedMessage(message, conversation);\n    });\n  }\n\n  _dispatchParsedMessage(message, conversation) {\n    // beforeMessageDispatch hook\n    return applyDispatcher(this._plugins.beforeMessageDispatch, [\n      message,\n      conversation,\n    ]).then(shouldDispatch => {\n      if (shouldDispatch === false) return;\n      conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n      conversation.lastMessageAt = message.timestamp; // eslint-disable-line no-param-reassign\n      // filter outgoing message sent from another device\n      if (message.from !== this.id) {\n        conversation.unreadMessagesCount += 1; // eslint-disable-line no-param-reassign\n        if (message.mentioned) conversation._setUnreadMessagesMentioned(true);\n      }\n      /**\n       * 当前用户收到消息\n       * @event IMClient#MESSAGE\n       * @param {Message} message\n       * @param {ConversationBase} conversation 收到消息的对话\n       */\n      this.emit(MESSAGE, message, conversation);\n      /**\n       * 当前对话收到消息\n       * @event ConversationBase#MESSAGE\n       * @param {Message} message\n       */\n      conversation.emit(MESSAGE, message);\n    });\n  }\n\n  _sendAck(message) {\n    this._debug('send ack for %O', message);\n    const { cid } = message;\n    if (!cid) {\n      throw new Error('missing cid');\n    }\n    if (!this._ackMessageBuffer[cid]) {\n      this._ackMessageBuffer[cid] = [];\n    }\n    this._ackMessageBuffer[cid].push(message);\n    return this._doSendAck();\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendAck() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    this._debug('do send ack %O', this._ackMessageBuffer);\n    Promise.all(\n      Object.keys(this._ackMessageBuffer).map(cid => {\n        const convAckMessages = this._ackMessageBuffer[cid];\n        const timestamps = convAckMessages.map(message => message.timestamp);\n        const command = new GenericCommand({\n          cmd: 'ack',\n          ackMessage: new AckCommand({\n            cid,\n            fromts: Math.min.apply(null, timestamps),\n            tots: Math.max.apply(null, timestamps),\n          }),\n        });\n        delete this._ackMessageBuffer[cid];\n        return this._send(command, false).catch(error => {\n          this._debug('send ack failed: %O', error);\n          this._ackMessageBuffer[cid] = convAckMessages;\n        });\n      })\n    );\n  }\n\n  _omitPeerId(value) {\n    internal(this).peerIdOmittable = value;\n  }\n\n  _send(cmd, ...args) {\n    const command = cmd;\n    if (!internal(this).peerIdOmittable && this.id) {\n      command.peerId = this.id;\n    }\n    return this._connection.send(command, ...args);\n  }\n\n  async _open(appId, tag, deviceId, isReconnect = false) {\n    this._debug('open session');\n    const {\n      lastUnreadNotifTime,\n      lastPatchTime,\n      lastNotificationTime,\n    } = internal(this);\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'open',\n      appId,\n      peerId: this.id,\n      sessionMessage: new SessionCommand({\n        ua: `js/${VERSION}`,\n        r: isReconnect,\n        lastUnreadNotifTime,\n        lastPatchTime,\n        configBitmap,\n      }),\n    });\n    if (!isReconnect) {\n      Object.assign(\n        command.sessionMessage,\n        trim({\n          tag,\n          deviceId,\n        })\n      );\n      if (this.options.signatureFactory) {\n        const signatureResult = await runSignatureFactory(\n          this.options.signatureFactory,\n          [this._identity]\n        );\n        Object.assign(\n          command.sessionMessage,\n          keyRemap(\n            {\n              signature: 's',\n              timestamp: 't',\n              nonce: 'n',\n            },\n            signatureResult\n          )\n        );\n      }\n    } else {\n      const sessionToken = await this._sessionManager.getSessionToken({\n        autoRefresh: false,\n      });\n      if (sessionToken && sessionToken !== Expirable.EXPIRED) {\n        Object.assign(command.sessionMessage, {\n          st: sessionToken,\n        });\n      }\n    }\n    let resCommand;\n    try {\n      resCommand = await this._send(command);\n    } catch (error) {\n      if (error.code === ErrorCode.SESSION_TOKEN_EXPIRED) {\n        if (!this._sessionManager) {\n          // let it fail if sessoinToken not cached but command rejected as token expired\n          // to prevent session openning flood\n          throw new Error('Unexpected session expiration');\n        }\n        debug('Session token expired, reopening');\n        this._sessionManager.revoke();\n        return this._open(appId, tag, deviceId, isReconnect);\n      }\n      throw error;\n    }\n    const {\n      peerId,\n      sessionMessage,\n      sessionMessage: { st: token, stTtl: tokenTTL, code },\n      serverTs,\n    } = resCommand;\n    if (code) {\n      throw createError(sessionMessage);\n    }\n    if (peerId) {\n      this.id = peerId;\n      if (!this._identity) this._identity = peerId;\n      if (token) {\n        this._sessionManager =\n          this._sessionManager || this._createSessionManager();\n        this._sessionManager.setSessionToken(token, tokenTTL);\n      }\n      const serverTime = getTime(decodeDate(serverTs));\n      if (serverTs) {\n        internal(this).lastPatchTime = serverTime;\n      }\n      if (lastNotificationTime) {\n        // Do not await for it as this is failable\n        this._syncNotifications(lastNotificationTime).catch(error =>\n          console.warn('Syncing notifications failed:', error)\n        );\n      } else {\n        // Set timestamp to now for next reconnection\n        internal(this).lastNotificationTime = serverTime;\n      }\n    } else {\n      console.warn('Unexpected session opened without peerId.');\n    }\n    return undefined;\n  }\n\n  async _syncNotifications(timestamp) {\n    const { hasMore, notifications } = await this._fetchNotifications(\n      timestamp\n    );\n    notifications.forEach(notification => {\n      const { cmd, op, serverTs, notificationType, ...payload } = notification;\n      this._dispatchCommand({\n        cmd: CommandType[cmd],\n        op: OpType[op],\n        serverTs,\n        notificationType,\n        [`${cmd}Message`]: payload,\n      });\n    });\n    if (hasMore) {\n      return this._syncNotifications(internal(this).lastNotificationTime);\n    }\n    return undefined;\n  }\n\n  async _fetchNotifications(timestamp) {\n    return this._requestWithSessionToken({\n      method: 'GET',\n      path: '/rtm/notifications',\n      query: {\n        start_ts: timestamp,\n        notification_type: 'permanent',\n      },\n    });\n  }\n\n  _createSessionManager() {\n    debug('create SessionManager');\n    return new SessionManager({\n      onBeforeGetSessionToken: this._connection.checkConnectionAvailability.bind(\n        this._connection\n      ),\n      refresh: (manager, expiredSessionToken) =>\n        manager.setSessionTokenAsync(\n          Promise.resolve(\n            new GenericCommand({\n              cmd: 'session',\n              op: 'refresh',\n              sessionMessage: new SessionCommand({\n                ua: `js/${VERSION}`,\n                st: expiredSessionToken,\n              }),\n            })\n          )\n            .then(async command => {\n              if (this.options.signatureFactory) {\n                const signatureResult = await runSignatureFactory(\n                  this.options.signatureFactory,\n                  [this._identity]\n                );\n                Object.assign(\n                  command.sessionMessage,\n                  keyRemap(\n                    {\n                      signature: 's',\n                      timestamp: 't',\n                      nonce: 'n',\n                    },\n                    signatureResult\n                  )\n                );\n              }\n              return command;\n            })\n            .then(this._send.bind(this))\n            .then(({ sessionMessage: { st: token, stTtl: ttl } }) => [\n              token,\n              ttl,\n            ])\n        ),\n    });\n  }\n\n  async _requestWithSessionToken({ headers, query, ...params }) {\n    const sessionToken = await this._sessionManager.getSessionToken();\n    return this._request({\n      headers: {\n        'X-LC-IM-Session-Token': sessionToken,\n        ...headers,\n      },\n      query: {\n        client_id: this.id,\n        ...query,\n      },\n      ...params,\n    });\n  }\n\n  /**\n   * 关闭客户端\n   * @return {Promise}\n   */\n  async close() {\n    this._debug('close session');\n    const _ee = internal(this)._eventemitter;\n    _ee.emit('beforeclose');\n    if (this._connection.is('connected')) {\n      const command = new GenericCommand({\n        cmd: 'session',\n        op: 'close',\n      });\n      await this._send(command);\n    }\n    _ee.emit('close');\n    this.emit(CLOSE, {\n      code: 0,\n    });\n  }\n\n  /**\n   * 获取 client 列表中在线的 client，每次查询最多 20 个 clientId，超出部分会被忽略\n   * @param  {String[]} clientIds 要查询的 client ids\n   * @return {Primse.<String[]>} 在线的 client ids\n   */\n  async ping(clientIds) {\n    this._debug('ping');\n    if (!(clientIds instanceof Array)) {\n      throw new TypeError(`clientIds ${clientIds} is not an Array`);\n    }\n    if (!clientIds.length) {\n      return Promise.resolve([]);\n    }\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'query',\n      sessionMessage: new SessionCommand({\n        sessionPeerIds: clientIds,\n      }),\n    });\n    const resCommand = await this._send(command);\n    return resCommand.sessionMessage.onlineSessionPeerIds;\n  }\n\n  /**\n   * 获取某个特定的对话\n   * @param  {String} id 对话 id，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<ConversationBase>} 如果 id 对应的对话不存在则返回 null\n   */\n  async getConversation(id, noCache = false) {\n    if (typeof id !== 'string') {\n      throw new TypeError(`${id} is not a String`);\n    }\n    if (!noCache) {\n      const cachedConversation = this._conversationCache.get(id);\n      if (cachedConversation) {\n        return cachedConversation;\n      }\n    }\n    if (isTemporaryConversatrionId(id)) {\n      return (await this._getTemporaryConversations([id]))[0] || null;\n    }\n    return this.getQuery()\n      .equalTo('objectId', id)\n      .find()\n      .then(conversations => conversations[0] || null);\n  }\n\n  /**\n   * 通过 id 批量获取某个特定的对话\n   * @since 3.4.0\n   * @param  {String[]} ids 对话 id 列表，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<ConversationBase[]>} 如果 id 对应的对话不存在则返回 null\n   */\n  async getConversations(ids, noCache = false) {\n    const remoteConversationIds = noCache\n      ? ids\n      : ids.filter(id => this._conversationCache.get(id) === null);\n    if (remoteConversationIds.length) {\n      const remoteTemporaryConversationIds = remove(\n        remoteConversationIds,\n        isTemporaryConversatrionId\n      );\n      const query = [];\n      if (remoteConversationIds.length) {\n        query.push(\n          this.getQuery()\n            .containedIn('objectId', remoteConversationIds)\n            .limit(999)\n            .find()\n        );\n      }\n      if (remoteTemporaryConversationIds.length) {\n        const remoteTemporaryConversationsPromise = remoteTemporaryConversationIds.map(\n          this._getTemporaryConversations.bind(this)\n        );\n        query.push(...remoteTemporaryConversationsPromise);\n      }\n      await Promise.all(query);\n    }\n    return ids.map(id => this._conversationCache.get(id));\n  }\n\n  async _getTemporaryConversations(ids) {\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand({\n        tempConvIds: ids,\n      }),\n    });\n    const resCommand = await this._send(command);\n    return this._handleQueryResults(resCommand);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询对话\n   * @return {ConversationQuery.<PersistentConversation>}\n   */\n  getQuery() {\n    return new ConversationQuery(this);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询聊天室\n   * @return {ConversationQuery.<ChatRoom>}\n   */\n  getChatRoomQuery() {\n    return this.getQuery().equalTo('tr', true);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询服务号\n   * @return {ConversationQuery.<ServiceConversation>}\n   */\n  getServiceConversationQuery() {\n    return this.getQuery().equalTo('sys', true);\n  }\n\n  async _executeQuery(query) {\n    const queryJSON = query.toJSON();\n    queryJSON.where = new JsonObjectMessage({\n      data: JSON.stringify(encode(queryJSON.where)),\n    });\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand(queryJSON),\n    });\n    const resCommand = await this._send(command);\n    return this._handleQueryResults(resCommand);\n  }\n\n  async _handleQueryResults(resCommand) {\n    let conversations;\n    try {\n      conversations = decode(JSON.parse(resCommand.convMessage.results.data));\n    } catch (error) {\n      const commandString = JSON.stringify(trim(resCommand));\n      throw new Error(\n        `Parse query result failed: ${error.message}. Command: ${commandString}`\n      );\n    }\n    conversations = await Promise.all(\n      conversations.map(this._parseConversationFromRawData.bind(this))\n    );\n    return conversations.map(this._upsertConversationToCache.bind(this));\n  }\n\n  _upsertConversationToCache(fetchedConversation) {\n    let conversation = this._conversationCache.get(fetchedConversation.id);\n    if (!conversation) {\n      conversation = fetchedConversation;\n      this._debug('no match, set cache');\n      this._conversationCache.set(fetchedConversation.id, fetchedConversation);\n    } else {\n      this._debug('update cached conversation');\n      [\n        'creator',\n        'createdAt',\n        'updatedAt',\n        'lastMessageAt',\n        'lastMessage',\n        'mutedMembers',\n        'members',\n        '_attributes',\n        'transient',\n        'muted',\n      ].forEach(key => {\n        const value = fetchedConversation[key];\n        if (value !== undefined) conversation[key] = value;\n      });\n      if (conversation._reset) conversation._reset();\n    }\n    return conversation;\n  }\n\n  /**\n   * 反序列化消息，与 {@link Message#toFullJSON} 相对。\n   * @param {Object}\n   * @return {AVMessage} 解析后的消息\n   * @since 4.0.0\n   */\n  async parseMessage({ data, bin = false, ...properties }) {\n    const content = bin ? decodeBase64(data) : data;\n    const message = await this._messageParser.parse(content);\n    Object.assign(message, properties);\n    message._updateMentioned(this.id);\n    return message;\n  }\n\n  /**\n   * 反序列化对话，与 {@link Conversation#toFullJSON} 相对。\n   * @param {Object}\n   * @return {ConversationBase} 解析后的对话\n   * @since 4.0.0\n   */\n  async parseConversation({\n    id,\n    lastMessageAt,\n    lastMessage,\n    lastDeliveredAt,\n    lastReadAt,\n    unreadMessagesCount,\n    members,\n    mentioned,\n    ...properties\n  }) {\n    const conversationData = {\n      id,\n      lastMessageAt,\n      lastMessage,\n      lastDeliveredAt,\n      lastReadAt,\n      unreadMessagesCount,\n      members,\n      mentioned,\n    };\n    if (lastMessage) {\n      conversationData.lastMessage = await this.parseMessage(lastMessage);\n      conversationData.lastMessage._setStatus(MessageStatus.SENT);\n    }\n    const { transient, system, expiredAt } = properties;\n    if (transient) return new ChatRoom(conversationData, properties, this);\n    if (system)\n      return new ServiceConversation(conversationData, properties, this);\n    if (expiredAt || isTemporaryConversatrionId(id)) {\n      return new TemporaryConversation(conversationData, { expiredAt }, this);\n    }\n    return new Conversation(conversationData, properties, this);\n  }\n\n  async _parseConversationFromRawData(rawData) {\n    const data = keyRemap(\n      {\n        objectId: 'id',\n        lm: 'lastMessageAt',\n        m: 'members',\n        tr: 'transient',\n        sys: 'system',\n        c: 'creator',\n        mu: 'mutedMembers',\n      },\n      rawData\n    );\n    if (data.msg) {\n      data.lastMessage = {\n        data: data.msg,\n        bin: data.bin,\n        from: data.msg_from,\n        id: data.msg_mid,\n        timestamp: data.msg_timestamp,\n        updatedAt: data.patch_timestamp,\n      };\n      delete data.lastMessageFrom;\n      delete data.lastMessageId;\n      delete data.lastMessageTimestamp;\n      delete data.lastMessagePatchTimestamp;\n    }\n    const { ttl } = data;\n    if (ttl) data.expiredAt = Date.now() + ttl * 1000;\n    return this.parseConversation(data);\n  }\n\n  /**\n   * 创建一个对话\n   * @param {Object} options 除了下列字段外的其他字段将被视为对话的自定义属性\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.name] 对话的名字\n   * @param {Boolean} [options.unique=true] 唯一对话，当其为 true 时，如果当前已经有相同成员的对话存在则返回该对话，否则会创建新的对话\n   * @return {Promise.<Conversation>}\n   */\n  async createConversation({\n    members: m,\n    name,\n    transient,\n    unique = true,\n    _tempConv: tempConv,\n    _tempConvTTL: tempConvTTL,\n    ...properties\n  } = {}) {\n    if (!(transient || Array.isArray(m))) {\n      throw new TypeError(`conversation members ${m} is not an array`);\n    }\n    let members = new Set(m);\n    members.add(this.id);\n    members = Array.from(members).sort();\n    let attr = properties || {};\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new TypeError(`conversation name ${name} is not a string`);\n      }\n      attr.name = name;\n    }\n    attr = new JsonObjectMessage({\n      data: JSON.stringify(encode(attr)),\n    });\n\n    const startCommandJson = {\n      m: members,\n      attr,\n      transient,\n      unique,\n      tempConv,\n      tempConvTTL,\n    };\n\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'start',\n      convMessage: new ConvCommand(startCommandJson),\n    });\n\n    if (this.options.conversationSignatureFactory) {\n      const params = [null, this._identity, members, 'create'];\n      const signatureResult = await runSignatureFactory(\n        this.options.conversationSignatureFactory,\n        params\n      );\n      Object.assign(\n        command.convMessage,\n        keyRemap(\n          {\n            signature: 's',\n            timestamp: 't',\n            nonce: 'n',\n          },\n          signatureResult\n        )\n      );\n    }\n\n    const {\n      convMessage: { cid, cdate, tempConvTTL: ttl },\n    } = await this._send(command);\n    const data = {\n      name,\n      transient,\n      unique,\n      id: cid,\n      createdAt: cdate,\n      updatedAt: cdate,\n      lastMessageAt: null,\n      creator: this.id,\n      members: transient ? [] : members,\n      ...properties,\n    };\n    if (ttl) data.expiredAt = Date.now() + ttl * 1000;\n    const conversation = await this.parseConversation(data);\n    return this._upsertConversationToCache(conversation);\n  }\n\n  /**\n   * 创建一个聊天室\n   * @since 4.0.0\n   * @param {Object} options 除了下列字段外的其他字段将被视为对话的自定义属性\n   * @param {String} [options.name] 对话的名字\n   * @return {Promise.<ChatRoom>}\n   */\n  async createChatRoom(param) {\n    return this.createConversation({\n      ...param,\n      transient: true,\n      members: null,\n      unique: false,\n      _tempConv: false,\n    });\n  }\n\n  /**\n   * 创建一个临时对话\n   * @since 4.0.0\n   * @param {Object} options\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.ttl] 对话存在时间，单位为秒，最大值与默认值均为 86400（一天），过期后该对话不再可用。\n   * @return {Promise.<TemporaryConversation>}\n   */\n  async createTemporaryConversation({ ttl: _tempConvTTL, ...param }) {\n    return this.createConversation({\n      ...param,\n      _tempConv: true,\n      _tempConvTTL,\n    });\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendRead() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    const buffer = internal(this).readConversationsBuffer;\n    const conversations = Array.from(buffer);\n    if (!conversations.length) return;\n    const ids = conversations.map(conversation => {\n      if (!(conversation instanceof ConversationBase)) {\n        throw new TypeError(`${conversation} is not a Conversation`);\n      }\n      return conversation.id;\n    });\n    this._debug(`mark [${ids}] as read`);\n    buffer.clear();\n    this._sendReadCommand(conversations).catch(error => {\n      this._debug('send read failed: %O', error);\n      conversations.forEach(buffer.add.bind(buffer));\n    });\n  }\n\n  _sendReadCommand(conversations) {\n    return this._send(\n      new GenericCommand({\n        cmd: 'read',\n        readMessage: new ReadCommand({\n          convs: conversations.map(\n            conversation =>\n              new ReadTuple({\n                cid: conversation.id,\n                mid:\n                  conversation.lastMessage &&\n                  conversation.lastMessage.from !== this.id\n                    ? conversation.lastMessage.id\n                    : undefined,\n                timestamp: (conversation.lastMessageAt || new Date()).getTime(),\n              })\n          ),\n        }),\n      }),\n      false\n    );\n  }\n}\n\n/**\n * 修改、撤回消息的原因\n * @typedef PatchReason\n * @type {Object}\n * @property {number} code 负数为内置 code，正数为开发者在 hook 中自定义的 code。比如因为敏感词过滤被修改的 code 为 -4408。\n * @property {string} [detail] 具体的原因说明。\n */\n","export {\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n} from '../websocket-plus';\n\nexport const RECONNECT_ERROR = 'reconnecterror';\n","import { encode as encodeBase64 } from 'base64-arraybuffer';\nimport Message from './message';\nimport { IE10Compatible } from './helpers';\n// jsdoc-ignore-start\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class BinaryMessage extends Message {\n  /**\n   * 二进制消息\n   * @extends Message\n   * @param {ArrayBuffer} buffer\n   * @since 4.0.0\n   */\n  constructor(buffer) {\n    if (!(buffer instanceof ArrayBuffer)) {\n      throw new TypeError(`${buffer} is not an ArrayBuffer`);\n    }\n    super(buffer);\n  }\n\n  /**\n   * @type ArrayBuffer\n   */\n  get buffer() {\n    return this.content;\n  }\n\n  set buffer(buffer) {\n    this.content = buffer;\n  }\n\n  static validate(target) {\n    return target instanceof ArrayBuffer;\n  }\n\n  toJSON() {\n    return {\n      ...super._toJSON(),\n      data: encodeBase64(this.content),\n    };\n  }\n\n  toFullJSON() {\n    return {\n      ...super.toFullJSON(),\n      bin: true,\n      data: encodeBase64(this.content),\n    };\n  }\n}\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-1)\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class TextMessage extends TypedMessage {\n  /**\n   * 文类类型消息\n   * @extends TypedMessage\n   * @param  {String} [text='']\n   * @throws {TypeError} text 不是 String 类型\n   */\n  constructor(text = '') {\n    if (typeof text !== 'string') {\n      throw new TypeError(`${text} is not a string`);\n    }\n    super();\n    this.setText(text);\n  }\n}\n\n/**\n * @name TYPE\n * @memberof TextMessage\n * @type Number\n * @static\n * @const\n */\n","import d from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { applyMiddlewares } from './plugin';\nimport { ensureArray } from './utils';\n\nconst debug = d('LC:MessageParser');\n\nconst tryParseJson = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(param) {\n    let content;\n    if (typeof param !== 'string') {\n      content = param;\n    } else {\n      try {\n        content = JSON.parse(param);\n      } catch (error) {\n        content = param;\n      }\n    }\n    return fn.call(this, content);\n  };\n};\n\nconst applyPlugins = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(json) {\n    return Promise.resolve(json)\n      .then(applyMiddlewares(this._plugins.beforeMessageParse))\n      .then(decoratedJson => fn.call(this, decoratedJson))\n      .then(applyMiddlewares(this._plugins.afterMessageParse));\n  };\n};\n\nexport default class MessageParser {\n  /**\n   * 消息解析器\n   * @param {Object} plugins 插件，插件的 messageClasses 会自动被注册，在解析时 beforeMessageParse 与 afterMessageParse Middleware 会被应用。\n   */\n  constructor(plugins = {}) {\n    this._plugins = plugins;\n    this._messageClasses = [];\n    this.register(plugins.messageClasses);\n  }\n\n  /**\n   * 注册消息类\n   *\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   * 建议继承自 {@link TypedMessage}，也可以传入一个消息类数组。\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  register(messageClasses) {\n    ensureArray(messageClasses).map(klass => this._register(klass));\n  }\n\n  _register(messageClass) {\n    if (\n      messageClass &&\n      messageClass.parse &&\n      messageClass.prototype &&\n      messageClass.prototype.getPayload\n    ) {\n      this._messageClasses.unshift(messageClass);\n    } else {\n      throw new TypeError('Invalid messageClass');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @tryParseJson\n  @applyPlugins\n  // jsdoc-ignore-end\n  /**\n   * 解析消息内容\n   * @param {Object | string | any} target 消息内容，如果是字符串会尝试 parse 为 JSON。\n   * @return {AVMessage} 解析后的消息\n   * @throws {Error} 如果不匹配任何注册的消息则抛出异常\n   */\n  parse(content) {\n    debug('parsing message: %O', content);\n    // eslint-disable-next-line\n    for (const Klass of this._messageClasses) {\n      const contentCopy = isPlainObject(content) ? { ...content } : content;\n      let valid;\n      let result;\n      try {\n        valid = Klass.validate(contentCopy);\n      } catch (error) {\n        // eslint-disable-line no-empty\n      }\n      if (valid) {\n        try {\n          result = Klass.parse(contentCopy);\n        } catch (error) {\n          console.warn('parsing a valid message content error', {\n            error,\n            Klass,\n            content: contentCopy,\n          });\n        }\n        if (result !== undefined) {\n          debug('parse result: %O', result);\n          return result;\n        }\n      }\n    }\n    throw new Error('No Message Class matched');\n  }\n}\n","/** @module leancloud-realtime */\nimport d from 'debug';\nimport uuid from 'uuid/v4';\nimport IMClient from './im-client';\nimport { RECONNECT, RECONNECT_ERROR } from './events/core';\nimport { Conversation } from './conversations';\nimport { MessageQueryDirection } from './conversations/conversation-base';\nimport Message, { MessageStatus } from './messages/message';\nimport BinaryMessage from './messages/binary-message';\nimport TextMessage from './messages/text-message';\nimport TypedMessage from './messages/typed-message';\nimport RecalledMessage from './messages/recalled-message';\nimport MessageParser from './message-parser';\nimport { trim, internal, finalize } from './utils';\n\nconst debug = d('LC:IMPlugin');\n\n/**\n * 消息优先级枚举\n * @enum {Number}\n * @since 3.3.0\n */\nconst MessagePriority = {\n  /** 高 */\n  HIGH: 1,\n  /** 普通 */\n  NORMAL: 2,\n  /** 低 */\n  LOW: 3,\n};\nObject.freeze(MessagePriority);\n\n/**\n * 为 Conversation 定义一个新属性\n * @param {String} prop 属性名\n * @param {Object} [descriptor] 属性的描述符，参见 {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor#Description getOwnPropertyDescriptor#Description - MDN}，默认为该属性名对应的 Conversation 自定义属性的 getter/setter\n * @returns void\n * @example\n *\n * conversation.get('type');\n * conversation.set('type', 1);\n *\n * // equals to\n * defineConversationProperty('type');\n * conversation.type;\n * conversation.type = 1;\n */\nconst defineConversationProperty = (\n  prop,\n  descriptor = {\n    get() {\n      return this.get(prop);\n    },\n    set(value) {\n      this.set(prop, value);\n    },\n  }\n) => {\n  Object.defineProperty(Conversation.prototype, prop, descriptor);\n};\n\nexport {\n  /**\n   * @see Message\n   */\n  Message,\n  /**\n   * @see BinaryMessage\n   */\n  BinaryMessage,\n  /**\n   * @see TypedMessage\n   */\n  TypedMessage,\n  /**\n   * @see TextMessage\n   */\n  TextMessage,\n  /**\n   * @see RecalledMessage\n   */\n  RecalledMessage,\n  MessagePriority,\n  MessageStatus,\n  MessageQueryDirection,\n  defineConversationProperty,\n};\n\nexport {\n  /**\n   * decorator，定义消息类的类型常量\n   * @function\n   * @param {Number} type 自定义类型请使用正整数\n   * @example @messageType(1)\n   * class CustomMessage extends TypedMessage {}\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   //...\n   * }\n   * messageType(1)(CustomMessage);\n   */\n  messageType,\n  /**\n   * decorator，定义消息类的自定义字段\n   * @function\n   * @param {String[]} fields 自定义字段\n   * @example @messageField(['foo'])\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   * }\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   *   //...\n   * }\n   * messageField(['foo'])(CustomMessage);\n   */\n  messageField,\n  IE10Compatible,\n} from './messages/helpers';\n\nexport { ConversationMemberRole } from './conversation-member-info';\nexport {\n  /**\n   * @see Conversation\n   */\n  Conversation,\n  /**\n   * @see ChatRoom\n   */\n  ChatRoom,\n  /**\n   * @see ServiceConversation\n   */\n  ServiceConversation,\n  /**\n   * @see TemporaryConversation\n   */\n  TemporaryConversation,\n} from './conversations';\n\nconst onRealtimeCreate = realtime => {\n  /* eslint-disable no-param-reassign */\n  const deviceId = uuid();\n  realtime._IMClients = {};\n  realtime._IMClientsCreationCount = 0;\n  const messageParser = new MessageParser(realtime._plugins);\n  realtime._messageParser = messageParser;\n\n  const signAVUser = async user =>\n    realtime._request({\n      method: 'POST',\n      path: '/rtm/sign',\n      data: {\n        session_token: user.getSessionToken(),\n      },\n    });\n\n  /**\n   * 注册消息类\n   *\n   * 在接收消息、查询消息时，会按照消息类注册顺序的逆序依次尝试解析消息内容\n   *\n   * @memberof Realtime\n   * @instance\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   * 建议继承自 {@link TypedMessage}\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  const register = messageParser.register.bind(messageParser);\n  /**\n   * 创建一个即时通讯客户端，多次创建相同 id 的客户端会返回同一个实例\n   * @memberof Realtime\n   * @instance\n   * @param  {String|AV.User} [identity] 客户端 identity，如果不指定该参数，服务端会随机生成一个字符串作为 identity，\n   * 如果传入一个已登录的 AV.User，则会使用该用户的 id 作为客户端 identity 登录。\n   * @param  {Object} [options]\n   * @param  {Function} [options.signatureFactory] open session 时的签名方法 // TODO need details\n   * @param  {Function} [options.conversationSignatureFactory] 对话创建、增减成员操作时的签名方法\n   * @param  {Function} [options.blacklistSignatureFactory] 黑名单操作时的签名方法\n   * @param  {String} [options.tag] 客户端类型标记，以支持单点登录功能\n   * @param  {String} [options.isReconnect=false] 单点登录时标记该次登录是不是应用启动时自动重新登录\n   * @return {Promise.<IMClient>}\n   */\n  const createIMClient = async (\n    identity,\n    { tag, isReconnect, ...clientOptions } = {},\n    lagecyTag\n  ) => {\n    let id;\n    const buildinOptions = {};\n    if (identity) {\n      if (typeof identity === 'string') {\n        id = identity;\n      } else if (identity.id && identity.getSessionToken) {\n        ({ id } = identity);\n        const sessionToken = identity.getSessionToken();\n        if (!sessionToken) {\n          throw new Error('User must be authenticated');\n        }\n        buildinOptions.signatureFactory = signAVUser;\n      } else {\n        throw new TypeError('Identity must be a String or an AV.User');\n      }\n      if (realtime._IMClients[id] !== undefined) {\n        return realtime._IMClients[id];\n      }\n    }\n    if (lagecyTag) {\n      console.warn(\n        'DEPRECATION createIMClient tag param: Use options.tag instead.'\n      );\n    }\n    const _tag = tag || lagecyTag;\n    const promise = realtime\n      ._open()\n      .then(connection => {\n        const client = new IMClient(\n          id,\n          { ...buildinOptions, ...clientOptions },\n          {\n            _connection: connection,\n            _request: realtime._request.bind(realtime),\n            _messageParser: messageParser,\n            _plugins: realtime._plugins,\n            _identity: identity,\n          }\n        );\n        connection.on(RECONNECT, () =>\n          client\n            ._open(realtime._options.appId, _tag, deviceId, true)\n            /**\n             * 客户端连接恢复正常，该事件通常在 {@link Realtime#event:RECONNECT} 之后发生\n             * @event IMClient#RECONNECT\n             * @see Realtime#event:RECONNECT\n             * @since 3.2.0\n             */\n            /**\n             * 客户端重新登录发生错误（网络连接已恢复，但重新登录错误）\n             * @event IMClient#RECONNECT_ERROR\n             * @since 3.2.0\n             */\n            .then(\n              () => client.emit(RECONNECT),\n              error => client.emit(RECONNECT_ERROR, error)\n            )\n        );\n        internal(client)._eventemitter.on(\n          'beforeclose',\n          () => {\n            delete realtime._IMClients[client.id];\n            if (realtime._firstIMClient === client) {\n              delete realtime._firstIMClient;\n            }\n          },\n          realtime\n        );\n        internal(client)._eventemitter.on(\n          'close',\n          () => {\n            realtime._deregister(client);\n          },\n          realtime\n        );\n        return client\n          ._open(realtime._options.appId, _tag, deviceId, isReconnect)\n          .then(() => {\n            realtime._IMClients[client.id] = client;\n            realtime._IMClientsCreationCount += 1;\n            if (realtime._IMClientsCreationCount === 1) {\n              client._omitPeerId(true);\n              realtime._firstIMClient = client;\n            } else if (\n              realtime._IMClientsCreationCount > 1 &&\n              realtime._firstIMClient\n            ) {\n              realtime._firstIMClient._omitPeerId(false);\n            }\n            realtime._register(client);\n            return client;\n          })\n          .catch(error => {\n            delete realtime._IMClients[client.id];\n            throw error;\n          });\n      })\n      .then(\n        ...finalize(() => {\n          realtime._deregisterPending(promise);\n        })\n      )\n      .catch(error => {\n        delete realtime._IMClients[id];\n        throw error;\n      });\n    if (identity) {\n      realtime._IMClients[id] = promise;\n    }\n    realtime._registerPending(promise);\n    return promise;\n  };\n  Object.assign(realtime, {\n    register,\n    createIMClient,\n  });\n  /* eslint-enable no-param-reassign */\n};\n\nconst beforeCommandDispatch = (command, realtime) => {\n  const isIMCommand = command.service === null || command.service === 2;\n  if (!isIMCommand) return true;\n  const targetClient = command.peerId\n    ? realtime._IMClients[command.peerId]\n    : realtime._firstIMClient;\n  if (targetClient) {\n    Promise.resolve(targetClient)\n      .then(client => client._dispatchCommand(command))\n      .catch(debug);\n  } else {\n    debug(\n      '[WARN] Unexpected message received without any live client match: %O',\n      trim(command)\n    );\n  }\n  return false;\n};\n\nexport const IMPlugin = {\n  name: 'leancloud-realtime-plugin-im',\n  onRealtimeCreate,\n  beforeCommandDispatch,\n  messageClasses: [Message, BinaryMessage, RecalledMessage, TextMessage],\n};\n","/** @module leancloud-realtime */\n/** core + plugins */\nimport { Realtime } from './core';\nimport { IMPlugin, defineConversationProperty } from './plugin-im';\nimport MessageParser from './message-parser';\nimport * as CoreEvent from './events/core';\nimport * as IMEvent from './events/im';\n\nRealtime.defineConversationProperty = defineConversationProperty;\nRealtime.__preRegisteredPlugins = [IMPlugin];\n\nconst Event = {\n  ...CoreEvent,\n  ...IMEvent,\n};\n\nexport {\n  /**\n   * SDK 可能会派发的事件枚举\n   * @name Event\n   * @enum {String}\n   * @since 4.0.0\n   */\n  Event,\n};\n\nexport {\n  /**\n   * 错误码，详见 [即时通讯云端错误码说明]{@link https://leancloud.cn/docs/realtime-faq.html#hash-291949329}\n   * @name ErrorCode\n   * @enum {Number}\n   * @since 3.3.0\n   */\n  ErrorCode,\n} from './error';\n\nexport * from './core';\n\nexport * from './plugin-im';\n\nexport {\n  /**\n   * @see MessageParser\n   * @since 5.0.0\n   */\n  MessageParser,\n};\n\nexport {\n  /**\n   * @see ConversationQuery\n   */\n  default as ConversationQuery,\n} from './conversation-query';\n","/** core + plugins + platform adapters */\nimport { WebSocket, request } from '@leancloud/platform-adapters-node';\nimport { setAdapters } from './im';\n\nsetAdapters({\n  WebSocket,\n  request,\n});\n\nexport * from './im';\n"],"names":["module","require","newBuilder","package","syntax","options","objc_class_prefix","messages","name","fields","rule","type","id","default","enums","values","isNamespace","build","JsonObjectMessage","UnreadTuple","LogItem","DataCommand","SessionCommand","ErrorCommand","DirectCommand","AckCommand","UnreadCommand","ConvCommand","RoomCommand","LogsCommand","RcpCommand","ReadTuple","MaxReadTuple","ReadCommand","PresenceCommand","ReportCommand","GenericCommand","BlacklistCommand","PatchCommand","PatchItem","ConvMemberInfo","CommandType","OpType","StatusType","push_server","messages2","adapters","getAdapter","adapter","undefined","Error","setAdapters","newAdapters","Object","assign","global","window","EXPIRED","Symbol","debug","d","Expirable","constructor","value","ttl","originalValue","expiredAt","Date","now","expired","Cache","_map","get","key","cache","set","enable","namespaces","disable","tryAll","promiseConstructors","promise","Promise","length","catch","slice","tap","interceptor","finalize","callback","error","decodeDate","date","__type","iso","toNumber","getTime","decode","Array","isArray","map","isPlainObject","keys","reduce","result","encode","toJSON","keyRemap","keymap","obj","newObj","newKey","isIE10","navigator","userAgent","indexOf","getStaticProperty","klass","property","__proto__","union","a","b","from","Set","difference","bSet","filter","x","has","WeakMap","internal","object","compact","forEach","prop","removeNull","trim","message","JSON","parse","stringify","ensureArray","target","setValue","segs","split","lastSeg","pop","currentTarget","seg","isWeapp","wx","connectSocket","throttle","wait","descriptor","throttleMeta","propertyMeta","previouseTimestamp","timeout","remainingTime","apply","setTimeout","isCNApp","appId","equalBuffer","buffer1","buffer2","byteLength","Uint8Array","some","index","OPEN","DISCONNECT","RECONNECT","RETRY","SCHEDULE","OFFLINE","ONLINE","ERROR","MESSAGE","HEARTBEAT_TIME","TIMEOUT_TIME","DEFAULT_RETRY_STRATEGY","attempt","Math","min","requireConnected","requireConnectedWrapper","args","checkConnectionAvailability","call","WebSocketPlus","_class","EventEmitter","urls","_urls","getUrls","protocol","init","_protocol","resolve","then","_open","__postponeTimeoutTimer","_postponeTimeoutTimer","bind","addEventListener","__pause","can","pause","__resume","resume","open","throw","_createWs","ws","first","reset","url","reject","WebSocket","binaryType","onopen","onclose","onerror","_ws","_handleClose","onmessage","_handleMessage","_destroyWs","close","onbeforeevent","event","to","payload","emit","onconnected","_startConnectionKeeper","onleaveconnected","_stopConnectionKeeper","onpause","onbeforeresume","onreconnect","ondisconnected","delay","__scheduledRetry","clearTimeout","is","retry","onretry","reconnect","fail","removeEventListener","currentState","current","console","warn","_ping","ping","_clearTimeoutTimers","_timeoutTimer","disconnect","_heartbeatTimer","setInterval","addListener","removeListener","clearInterval","code","reason","isFinished","handleClose","send","data","handleMessage","_applyDecoratedDescriptor","prototype","getOwnPropertyDescriptor","StateMachine","create","initial","state","defer","terminal","events","freeze","ErrorCode","Number","createError","appCode","detail","errorMessage","err","COMMAND_TIMEOUT","EXPIRE","isIdempotentCommand","command","cmd","direct","session","op","conv","start","update","members","Connection","getUrl","format","version","protocolString","_protocolFormat","_commands","_serialId","waitingForRespond","buffer","serialId","toArrayBuffer","duplicatedCommand","find","targetBuffer","targetCommand","i","enabled","toBase64","TypeError","msg","e","goaway","echo","method","_url","query","headers","time","queryString","v","encodeURIComponent","qs","join","request","response","ok","status","checkType","middleware","param","_pluginName","applyDecorators","decorators","decorator","applyMiddlewares","middlewares","previousPromise","applyDispatcher","dispatchers","resultPromise","dispatcher","shouldDispatch","routerCache","initializedApp","Realtime","plugins","VERSION","appKey","server","_options","noBinary","ssl","RTMServerName","process","env","RTM_SERVER_NAME","_cache","_this","clients","pendingClients","mergedPlugins","__preRegisteredPlugins","plugin","_plugins","hook","hasOwnProperty","concat","onRealtimeCreate","_request","path","api","_getServerUrls","_openPromise","connection","_getRTMServers","on","_dispatchCommand","client","isFatal","APP_NOT_AVAILABLE","INVALID_LOGIN","INVALID_ORIGIN","errorCode","RTMServers","shuffle","info","cachedEndPoints","_fetchRTMServers","secondary","RTMRouter","cachedRouter","defaultProtocol","rtm_router_server","RTMRouterServer","api_server","APIServer","serverUrls","toLowerCase","domain","secure","features","_t","_close","cannot","_registerPending","add","_deregisterPending","delete","_register","_deregister","size","beforeCommandDispatch","polyfilledPromise","UNREAD_MESSAGES_COUNT_UPDATE","CLOSE","CONFLICT","CONVERSATION_INFO_UPDATED","UNHANDLED_MESSAGE","INVITED","KICKED","MEMBERS_JOINED","MEMBERS_LEFT","MEMBER_INFO_UPDATED","BLOCKED","UNBLOCKED","MEMBERS_BLOCKED","MEMBERS_UNBLOCKED","MUTED","UNMUTED","MEMBERS_MUTED","MEMBERS_UNMUTED","MESSAGE_RECALL","MESSAGE_UPDATE","LAST_DELIVERED_AT_UPDATE","LAST_READ_AT_UPDATE","INFO_UPDATED","MessageStatus","NONE","SENDING","SENT","DELIVERED","FAILED","rMessageStatus","READ","Message","content","uuid","cid","timestamp","mentionList","mentionedAll","_mentioned","_setStatus","getPayload","_toJSON","deliveredAt","updatedAt","mentioned","toFullJSON","_updatedAt","_status","_timestamp","_deliveredAt","_updateMentioned","getMentionList","setMentionList","mentionAll","Boolean","validate","json","messageType","TYPE","_lctype","_getType","messageField","originalCustomFields","_customFields","IE10Compatible","TypedMessage","_dec","text","setText","getText","attributes","setAttributes","getAttributes","summary","_lctext","_lcattrs","_getCustomFields","field","customFields","RecalledMessage","serializeMessage","binaryMsg","ArrayBuffer","NEW","OLD","QueryDirection","MessageQueryDirection","NEW_TO_OLD","OLD_TO_NEW","ConversationBase","lastMessageAt","lastMessage","lastDeliveredAt","lastReadAt","unreadMessagesCount","properties","messagesWaitingForReceipt","_client","Event","_debug","onConversationCreate","unreadMessagesMentioned","_setUnreadMessagesMentioned","_lastMessageAt","_setLastDeliveredAt","_setLastReadAt","params","_send","convMessage","transient","receipt","priority","pushData","will","sendOptions","getSendOptions","directMessage","r","dt","mentionPids","resCommand","ackMessage","uid","t","_update","newMessage","recall","patch","modify","patchMessage","patches","mid","lastPatchTime","_lastPatchTime","count","_addMembers","_removeMembers","queryMessages","beforeTime","beforeMessageId","afterTime","afterMessageId","limit","direction","startTime","startMessageId","startClosed","endTime","endMessageId","endClosed","conditions","tIncluded","tt","tmid","ttIncluded","l","lctype","logsMessage","all","logs","msgId","patchTimestamp","ackAt","readAt","bin","messageData","parseMessage","createMessagesIterator","next","prevMessages","done","read","readConversationsBuffer","_doSendRead","_handleReceipt","messageId","fetchReceiptTimestamps","system","maxReadTimestamp","maxAckTimestamp","_fetchAllReceiptTimestamps","queryAllMembers","maxReadTuples","maxReadTuple","pid","_validateSignature","signatureResult","signature","nonce","signatureFactory","createPartiallySuccess","allowedPids","failedPids","successfulClientIds","failures","pids","clientIds","PersistentConversation","creator","createdAt","muted","mutedMembers","_attributes","_reset","_createdAt","currentAttributes","pendingAttributes","pendingKeys","re","RegExp","childKeys","test","k","parentKey","_buildCurrentAttributes","cloneDeep","_updateServerAttributes","save","attr","isEmpty","udate","fetch","getQuery","equalTo","mute","unmute","_appendConversationSignature","action","conversationSignatureFactory","sort","runSignatureFactory","_appendBlacklistSignature","blacklistSignatureFactory","blacklistMessage","m","remove","quit","muteMembers","add_shutup","unmuteMembers","remove_shutup","queryMutedMembers","query_shutup","newNext","results","blockMembers","block","srcCid","toPids","unblockMembers","unblock","queryBlockedMembers","blockedPids","ConversationMemberRole","OWNER","MANAGER","MEMBER","ConversationMemberInfo","conversation","memberId","role","conversationId","isOwner","Conversation","memberInfoMap","_fetchAllMemberInfo","_requestWithSessionToken","where","memberInfos","clientId","memberInfo","getAllMemberInfo","noCache","getMemberInfo","updateMemberRole","OWNER_PROMOTION_NOT_ALLOWED","member_info_update","targetClientId","ChatRoom","ServiceConversation","subscribe","unsubscribe","transformNotFoundError","CONVERSATION_NOT_FOUND","TEMPORARY_CONVERSATION_EXPIRED","TemporaryConversation","_expiredAt","ConversationQuery","_encode","source","_quote","s","replace","_calculateFlag","prev","and","queries","every","q","combined","_where","$and","or","$or","_extraOptions","_addCondition","condition","flag","_skip","skip","_limit","_order","containsMembers","peerIds","containsAll","withMembers","includeSelf","peerIdsSet","sizeEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","notEqualTo","exists","doesNotExist","containedIn","notContainsIn","contains","subString","startsWith","prefix","endsWith","suffix","matches","regex","_modifiers","ignoreCase","multiline","ascending","addAscending","descending","addDescending","withLastMessagesRefreshed","_executeQuery","SessionManager","refresh","onBeforeGetSessionToken","_onBeforeGetSessionToken","setSessionToken","token","sessionToken","_sessionToken","_pendingSessionTokenPromise","setSessionTokenAsync","currentSessionToken","getSessionToken","autoRefresh","newValue","revoke","isTemporaryConversatrionId","configBitmap","IMClient","_dec2","props","_messageParser","_conversationCache","_ackMessageBuffer","lastNotificationTime","_eventemitter","onIMClientCreate","serverTs","notificationType","_dispatchConvMessage","_dispatchDirectMessage","_dispatchSessionMessage","unread","_dispatchUnreadMessage","rcp","_dispatchRcpMessage","_dispatchPatchMessage","sessionMessage","closed","SESSION_CONFLICT","unreadMessage","convs","notifTime","lastUnreadNotifTime","getConversations","ts","messageProps","countNotUpdated","conversations","rcpMessage","patchCode","patchReason","patchTime","initBy","getConversation","joined","invitedBy","left","kickedBy","members_joined","members_left","members_blocked","blockedBy","members_unblocked","unblockedBy","blocked","unblocked","members_shutuped","mutedBy","members_unshutuped","unmutedBy","shutuped","unshutuped","member_info_changed","member","updatedBy","updated","originalMessage","fromPeerId","_sendAck","_dispatchParsedMessage","beforeMessageDispatch","push","_doSendAck","_connection","convAckMessages","timestamps","fromts","tots","max","_omitPeerId","peerIdOmittable","peerId","tag","deviceId","isReconnect","ua","_identity","_sessionManager","st","SESSION_TOKEN_EXPIRED","stTtl","tokenTTL","_createSessionManager","serverTime","_syncNotifications","hasMore","notifications","_fetchNotifications","notification","start_ts","notification_type","manager","expiredSessionToken","client_id","_ee","sessionPeerIds","onlineSessionPeerIds","cachedConversation","_getTemporaryConversations","ids","remoteConversationIds","remoteTemporaryConversationIds","remoteTemporaryConversationsPromise","tempConvIds","_handleQueryResults","getChatRoomQuery","getServiceConversationQuery","queryJSON","commandString","_parseConversationFromRawData","_upsertConversationToCache","fetchedConversation","decodeBase64","parseConversation","conversationData","rawData","objectId","lm","tr","sys","c","mu","msg_from","msg_mid","msg_timestamp","patch_timestamp","lastMessageFrom","lastMessageId","lastMessageTimestamp","lastMessagePatchTimestamp","createConversation","unique","_tempConv","tempConv","_tempConvTTL","tempConvTTL","startCommandJson","cdate","createChatRoom","createTemporaryConversation","clear","_sendReadCommand","readMessage","RECONNECT_ERROR","BinaryMessage","encodeBase64","TextMessage","tryParseJson","fn","wrapper","applyPlugins","beforeMessageParse","decoratedJson","afterMessageParse","MessageParser","_messageClasses","register","messageClasses","messageClass","unshift","Klass","contentCopy","valid","MessagePriority","HIGH","NORMAL","LOW","defineConversationProperty","defineProperty","realtime","_IMClients","_IMClientsCreationCount","messageParser","signAVUser","user","session_token","createIMClient","identity","clientOptions","lagecyTag","buildinOptions","_tag","_firstIMClient","isIMCommand","service","targetClient","IMPlugin","CoreEvent","IMEvent"],"mappings":"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"}