{"version":3,"file":"im-node.js","sources":["../../proto/message-compiled.js","../../proto/message.js","../../src/adapter.js","../../src/utils/global.js","../../src/utils/expirable.js","../../src/utils/cache.js","../../src/utils/index.js","../../src/websocket-plus.js","../../src/error.js","../../src/connection.js","../../src/utils/request.js","../../src/plugin.js","../../src/realtime.js","../../src/core.js","../../src/events/im.js","../../src/messages/message.js","../../src/messages/helpers.js","../../src/messages/typed-message.js","../../src/messages/recalled-message.js","../../src/conversations/conversation-base.js","../../src/signature-factory-runner.js","../../src/conversations/persistent-conversation.js","../../src/conversation-member-info.js","../../src/conversations/conversation.js","../../src/conversations/chat-room.js","../../src/conversations/service-conversation.js","../../src/conversations/temporary-conversation.js","../../src/conversation-query.js","../../src/session-manager.js","../../src/im-client.js","../../src/events/core.js","../../src/messages/binary-message.js","../../src/messages/text-message.js","../../src/message-parser.js","../../src/plugin-im.js","../../src/im.js","../../src/im-adapted.js"],"sourcesContent":["module.exports = require('protobufjs/dist/protobuf-light')\n  .newBuilder({})\n  ['import']({\n    package: 'push_server.messages2',\n    syntax: 'proto2',\n    options: {\n      objc_class_prefix: 'AVIM',\n    },\n    messages: [\n      {\n        name: 'JsonObjectMessage',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'data',\n            id: 1,\n          },\n        ],\n      },\n      {\n        name: 'UnreadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'required',\n            type: 'int32',\n            name: 'unread',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentioned',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 10,\n          },\n        ],\n      },\n      {\n        name: 'LogItem',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'msgId',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'ackAt',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'readAt',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'bin',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 11,\n          },\n        ],\n      },\n      {\n        name: 'ConvMemberInfo',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'role',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'infoId',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'DataCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'ids',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'JsonObjectMessage',\n            name: 'msg',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'offline',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'SessionCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'ua',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'r',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'tag',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'deviceId',\n            id: 7,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'sessionPeerIds',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'onlineSessionPeerIds',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'st',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'stTtl',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'code',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'reason',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'deviceToken',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'sp',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'detail',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastUnreadNotifTime',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastPatchTime',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'configBitmap',\n            id: 19,\n          },\n        ],\n      },\n      {\n        name: 'ErrorCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'int32',\n            name: 'code',\n            id: 1,\n          },\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'reason',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'appCode',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'detail',\n            id: 4,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'pids',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appMsg',\n            id: 6,\n          },\n        ],\n      },\n      {\n        name: 'DirectCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'msg',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'fromPeerId',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'offline',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'hasMore',\n            id: 6,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toPeerIds',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'r',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'id',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'dt',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'roomId',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pushData',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'will',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 19,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 20,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 21,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'convType',\n            id: 22,\n          },\n        ],\n      },\n      {\n        name: 'AckCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'code',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'reason',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uid',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'fromts',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'tots',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'type',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'ids',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'appCode',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appMsg',\n            id: 12,\n          },\n        ],\n      },\n      {\n        name: 'UnreadCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'UnreadTuple',\n            name: 'convs',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'notifTime',\n            id: 2,\n          },\n        ],\n      },\n      {\n        name: 'ConvCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'm',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'unique',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cdate',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'initBy',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'sort',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'skip',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'flag',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'count',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'udate',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 14,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 15,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'statusSub',\n            id: 16,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'statusPub',\n            id: 17,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'statusTTL',\n            id: 18,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'uniqueId',\n            id: 19,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'targetClientId',\n            id: 20,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxReadTimestamp',\n            id: 21,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxAckTimestamp',\n            id: 22,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'queryAllMembers',\n            id: 23,\n          },\n          {\n            rule: 'repeated',\n            type: 'MaxReadTuple',\n            name: 'maxReadTuples',\n            id: 24,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 25,\n          },\n          {\n            rule: 'optional',\n            type: 'ConvMemberInfo',\n            name: 'info',\n            id: 26,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'tempConv',\n            id: 27,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'tempConvTTL',\n            id: 28,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'tempConvIds',\n            id: 29,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'allowedPids',\n            id: 30,\n          },\n          {\n            rule: 'repeated',\n            type: 'ErrorCommand',\n            name: 'failedPids',\n            id: 31,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'next',\n            id: 40,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'results',\n            id: 100,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'where',\n            id: 101,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'attr',\n            id: 103,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'attrModified',\n            id: 104,\n          },\n        ],\n      },\n      {\n        name: 'RoomCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'roomId',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'transient',\n            id: 5,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'roomPeerIds',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'byPeerId',\n            id: 7,\n          },\n        ],\n      },\n      {\n        name: 'LogsCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'l',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'tt',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'tmid',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'checksum',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'stored',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'QueryDirection',\n            name: 'direction',\n            id: 10,\n            options: {\n              default: 'OLD',\n            },\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'tIncluded',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'ttIncluded',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'lctype',\n            id: 13,\n          },\n          {\n            rule: 'repeated',\n            type: 'LogItem',\n            name: 'logs',\n            id: 105,\n          },\n        ],\n        enums: [\n          {\n            name: 'QueryDirection',\n            syntax: 'proto2',\n            values: [\n              {\n                name: 'OLD',\n                id: 1,\n              },\n              {\n                name: 'NEW',\n                id: 2,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        name: 'RcpCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'id',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'read',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 5,\n          },\n        ],\n      },\n      {\n        name: 'ReadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'required',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'MaxReadTuple',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'pid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxAckTimestamp',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'maxReadTimestamp',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'ReadCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 2,\n          },\n          {\n            rule: 'repeated',\n            type: 'ReadTuple',\n            name: 'convs',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'PresenceCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'StatusType',\n            name: 'status',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'sessionPeerIds',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'ReportCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'initiative',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'type',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 3,\n          },\n        ],\n      },\n      {\n        name: 'PatchItem',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'mid',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'timestamp',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'recall',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'data',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchTimestamp',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'from',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'bytes',\n            name: 'binaryMsg',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'bool',\n            name: 'mentionAll',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'mentionPids',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'patchCode',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'patchReason',\n            id: 12,\n          },\n        ],\n      },\n      {\n        name: 'PatchCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'repeated',\n            type: 'PatchItem',\n            name: 'patches',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'lastPatchTime',\n            id: 2,\n          },\n        ],\n      },\n      {\n        name: 'PubsubCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'cid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'cids',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'topic',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'subtopic',\n            id: 4,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'topics',\n            id: 5,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'subtopics',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'JsonObjectMessage',\n            name: 'results',\n            id: 7,\n          },\n        ],\n      },\n      {\n        name: 'BlacklistCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'srcCid',\n            id: 1,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toPids',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'srcPid',\n            id: 3,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'toCids',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'limit',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'next',\n            id: 6,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'blockedPids',\n            id: 8,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'blockedCids',\n            id: 9,\n          },\n          {\n            rule: 'repeated',\n            type: 'string',\n            name: 'allowedPids',\n            id: 10,\n          },\n          {\n            rule: 'repeated',\n            type: 'ErrorCommand',\n            name: 'failedPids',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 't',\n            id: 12,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'n',\n            id: 13,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 's',\n            id: 14,\n          },\n        ],\n      },\n      {\n        name: 'GenericCommand',\n        syntax: 'proto2',\n        fields: [\n          {\n            rule: 'optional',\n            type: 'CommandType',\n            name: 'cmd',\n            id: 1,\n          },\n          {\n            rule: 'optional',\n            type: 'OpType',\n            name: 'op',\n            id: 2,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'appId',\n            id: 3,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'peerId',\n            id: 4,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'i',\n            id: 5,\n          },\n          {\n            rule: 'optional',\n            type: 'string',\n            name: 'installationId',\n            id: 6,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'priority',\n            id: 7,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'service',\n            id: 8,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'serverTs',\n            id: 9,\n          },\n          {\n            rule: 'optional',\n            type: 'int64',\n            name: 'clientTs',\n            id: 10,\n          },\n          {\n            rule: 'optional',\n            type: 'int32',\n            name: 'notificationType',\n            id: 11,\n          },\n          {\n            rule: 'optional',\n            type: 'DataCommand',\n            name: 'dataMessage',\n            id: 101,\n          },\n          {\n            rule: 'optional',\n            type: 'SessionCommand',\n            name: 'sessionMessage',\n            id: 102,\n          },\n          {\n            rule: 'optional',\n            type: 'ErrorCommand',\n            name: 'errorMessage',\n            id: 103,\n          },\n          {\n            rule: 'optional',\n            type: 'DirectCommand',\n            name: 'directMessage',\n            id: 104,\n          },\n          {\n            rule: 'optional',\n            type: 'AckCommand',\n            name: 'ackMessage',\n            id: 105,\n          },\n          {\n            rule: 'optional',\n            type: 'UnreadCommand',\n            name: 'unreadMessage',\n            id: 106,\n          },\n          {\n            rule: 'optional',\n            type: 'ReadCommand',\n            name: 'readMessage',\n            id: 107,\n          },\n          {\n            rule: 'optional',\n            type: 'RcpCommand',\n            name: 'rcpMessage',\n            id: 108,\n          },\n          {\n            rule: 'optional',\n            type: 'LogsCommand',\n            name: 'logsMessage',\n            id: 109,\n          },\n          {\n            rule: 'optional',\n            type: 'ConvCommand',\n            name: 'convMessage',\n            id: 110,\n          },\n          {\n            rule: 'optional',\n            type: 'RoomCommand',\n            name: 'roomMessage',\n            id: 111,\n          },\n          {\n            rule: 'optional',\n            type: 'PresenceCommand',\n            name: 'presenceMessage',\n            id: 112,\n          },\n          {\n            rule: 'optional',\n            type: 'ReportCommand',\n            name: 'reportMessage',\n            id: 113,\n          },\n          {\n            rule: 'optional',\n            type: 'PatchCommand',\n            name: 'patchMessage',\n            id: 114,\n          },\n          {\n            rule: 'optional',\n            type: 'PubsubCommand',\n            name: 'pubsubMessage',\n            id: 115,\n          },\n          {\n            rule: 'optional',\n            type: 'BlacklistCommand',\n            name: 'blacklistMessage',\n            id: 116,\n          },\n        ],\n      },\n    ],\n    enums: [\n      {\n        name: 'CommandType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'session',\n            id: 0,\n          },\n          {\n            name: 'conv',\n            id: 1,\n          },\n          {\n            name: 'direct',\n            id: 2,\n          },\n          {\n            name: 'ack',\n            id: 3,\n          },\n          {\n            name: 'rcp',\n            id: 4,\n          },\n          {\n            name: 'unread',\n            id: 5,\n          },\n          {\n            name: 'logs',\n            id: 6,\n          },\n          {\n            name: 'error',\n            id: 7,\n          },\n          {\n            name: 'login',\n            id: 8,\n          },\n          {\n            name: 'data',\n            id: 9,\n          },\n          {\n            name: 'room',\n            id: 10,\n          },\n          {\n            name: 'read',\n            id: 11,\n          },\n          {\n            name: 'presence',\n            id: 12,\n          },\n          {\n            name: 'report',\n            id: 13,\n          },\n          {\n            name: 'echo',\n            id: 14,\n          },\n          {\n            name: 'loggedin',\n            id: 15,\n          },\n          {\n            name: 'logout',\n            id: 16,\n          },\n          {\n            name: 'loggedout',\n            id: 17,\n          },\n          {\n            name: 'patch',\n            id: 18,\n          },\n          {\n            name: 'pubsub',\n            id: 19,\n          },\n          {\n            name: 'blacklist',\n            id: 20,\n          },\n          {\n            name: 'goaway',\n            id: 21,\n          },\n        ],\n      },\n      {\n        name: 'OpType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'open',\n            id: 1,\n          },\n          {\n            name: 'add',\n            id: 2,\n          },\n          {\n            name: 'remove',\n            id: 3,\n          },\n          {\n            name: 'close',\n            id: 4,\n          },\n          {\n            name: 'opened',\n            id: 5,\n          },\n          {\n            name: 'closed',\n            id: 6,\n          },\n          {\n            name: 'query',\n            id: 7,\n          },\n          {\n            name: 'query_result',\n            id: 8,\n          },\n          {\n            name: 'conflict',\n            id: 9,\n          },\n          {\n            name: 'added',\n            id: 10,\n          },\n          {\n            name: 'removed',\n            id: 11,\n          },\n          {\n            name: 'refresh',\n            id: 12,\n          },\n          {\n            name: 'refreshed',\n            id: 13,\n          },\n          {\n            name: 'start',\n            id: 30,\n          },\n          {\n            name: 'started',\n            id: 31,\n          },\n          {\n            name: 'joined',\n            id: 32,\n          },\n          {\n            name: 'members_joined',\n            id: 33,\n          },\n          {\n            name: 'left',\n            id: 39,\n          },\n          {\n            name: 'members_left',\n            id: 40,\n          },\n          {\n            name: 'results',\n            id: 42,\n          },\n          {\n            name: 'count',\n            id: 43,\n          },\n          {\n            name: 'result',\n            id: 44,\n          },\n          {\n            name: 'update',\n            id: 45,\n          },\n          {\n            name: 'updated',\n            id: 46,\n          },\n          {\n            name: 'mute',\n            id: 47,\n          },\n          {\n            name: 'unmute',\n            id: 48,\n          },\n          {\n            name: 'status',\n            id: 49,\n          },\n          {\n            name: 'members',\n            id: 50,\n          },\n          {\n            name: 'max_read',\n            id: 51,\n          },\n          {\n            name: 'is_member',\n            id: 52,\n          },\n          {\n            name: 'member_info_update',\n            id: 53,\n          },\n          {\n            name: 'member_info_updated',\n            id: 54,\n          },\n          {\n            name: 'member_info_changed',\n            id: 55,\n          },\n          {\n            name: 'join',\n            id: 80,\n          },\n          {\n            name: 'invite',\n            id: 81,\n          },\n          {\n            name: 'leave',\n            id: 82,\n          },\n          {\n            name: 'kick',\n            id: 83,\n          },\n          {\n            name: 'reject',\n            id: 84,\n          },\n          {\n            name: 'invited',\n            id: 85,\n          },\n          {\n            name: 'kicked',\n            id: 86,\n          },\n          {\n            name: 'upload',\n            id: 100,\n          },\n          {\n            name: 'uploaded',\n            id: 101,\n          },\n          {\n            name: 'subscribe',\n            id: 120,\n          },\n          {\n            name: 'subscribed',\n            id: 121,\n          },\n          {\n            name: 'unsubscribe',\n            id: 122,\n          },\n          {\n            name: 'unsubscribed',\n            id: 123,\n          },\n          {\n            name: 'is_subscribed',\n            id: 124,\n          },\n          {\n            name: 'modify',\n            id: 150,\n          },\n          {\n            name: 'modified',\n            id: 151,\n          },\n          {\n            name: 'block',\n            id: 170,\n          },\n          {\n            name: 'unblock',\n            id: 171,\n          },\n          {\n            name: 'blocked',\n            id: 172,\n          },\n          {\n            name: 'unblocked',\n            id: 173,\n          },\n          {\n            name: 'members_blocked',\n            id: 174,\n          },\n          {\n            name: 'members_unblocked',\n            id: 175,\n          },\n          {\n            name: 'check_block',\n            id: 176,\n          },\n          {\n            name: 'check_result',\n            id: 177,\n          },\n          {\n            name: 'add_shutup',\n            id: 180,\n          },\n          {\n            name: 'remove_shutup',\n            id: 181,\n          },\n          {\n            name: 'query_shutup',\n            id: 182,\n          },\n          {\n            name: 'shutup_added',\n            id: 183,\n          },\n          {\n            name: 'shutup_removed',\n            id: 184,\n          },\n          {\n            name: 'shutup_result',\n            id: 185,\n          },\n          {\n            name: 'shutuped',\n            id: 186,\n          },\n          {\n            name: 'unshutuped',\n            id: 187,\n          },\n          {\n            name: 'members_shutuped',\n            id: 188,\n          },\n          {\n            name: 'members_unshutuped',\n            id: 189,\n          },\n          {\n            name: 'check_shutup',\n            id: 190,\n          },\n        ],\n      },\n      {\n        name: 'StatusType',\n        syntax: 'proto2',\n        values: [\n          {\n            name: 'on',\n            id: 1,\n          },\n          {\n            name: 'off',\n            id: 2,\n          },\n        ],\n      },\n    ],\n    isNamespace: true,\n  })\n  .build();\n","import messages from './message-compiled';\n\nconst {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  BlacklistCommand,\n  PatchCommand,\n  PatchItem,\n  ConvMemberInfo,\n  CommandType,\n  OpType,\n  StatusType,\n} = messages.push_server.messages2;\n\nexport {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  MaxReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  BlacklistCommand,\n  PatchCommand,\n  PatchItem,\n  ConvMemberInfo,\n  CommandType,\n  OpType,\n  StatusType,\n};\n","const adapters = {};\n\nconst getAdapter = name => {\n  const adapter = adapters[name];\n  if (adapter === undefined) {\n    throw new Error(`${name} adapter is not configured`);\n  }\n  return adapter;\n};\n\n/**\n * 指定 Adapters\n * @function\n * @memberof module:leancloud-realtime\n * @param {Adapters} newAdapters Adapters 的类型请参考 {@link https://url.leanapp.cn/adapter-type-definitions @leancloud/adapter-types} 中的定义\n */\nconst setAdapters = newAdapters => {\n  Object.assign(adapters, newAdapters);\n};\n\nexport { getAdapter, setAdapters };\n","/* eslint-disable */\nexport default (typeof global !== 'undefined'\n  ? global\n  : typeof window !== 'undefined' ? window : {});\n","import d from 'debug';\n\nconst EXPIRED = Symbol('expired');\nconst debug = d('LC:Expirable');\nexport default class Expirable {\n  constructor(value, ttl) {\n    this.originalValue = value;\n    if (typeof ttl === 'number') {\n      this.expiredAt = Date.now() + ttl;\n    }\n  }\n\n  get value() {\n    const expired = this.expiredAt && this.expiredAt <= Date.now();\n    if (expired) debug(`expired: ${this.originalValue}`);\n    return expired ? EXPIRED : this.originalValue;\n  }\n}\nExpirable.EXPIRED = EXPIRED;\n","import d from 'debug';\nimport Expirable from './expirable';\n\nconst debug = d('LC:Cache');\nexport default class Cache {\n  constructor(name = 'anonymous') {\n    this.name = name;\n    this._map = {};\n  }\n\n  get(key) {\n    const cache = this._map[key];\n    if (cache) {\n      const { value } = cache;\n      if (value !== Expirable.EXPIRED) {\n        debug('[%s] hit: %s', this.name, key);\n        return value;\n      }\n      delete this._map[key];\n    }\n    debug(`[${this.name}] missed: ${key}`);\n    return null;\n  }\n\n  set(key, value, ttl) {\n    debug('[%s] set: %s %d', this.name, key, ttl);\n    this._map[key] = new Expirable(value, ttl);\n  }\n}\n","import isPlainObject from 'lodash/isPlainObject';\nimport d from 'debug';\nimport global from './global';\n\nexport { global };\n\n/**\n * 调试日志控制器\n * @const\n * @memberof module:leancloud-realtime\n * @example\n * debug.enable();  // 启用调试日志\n * debug.disable(); // 关闭调试日志\n */\nconst debug = {\n  enable: (namespaces = 'LC*') => d.enable(namespaces),\n  disable: d.disable,\n};\nexport { debug };\n\nexport const tryAll = promiseConstructors => {\n  const promise = new Promise(promiseConstructors[0]);\n  if (promiseConstructors.length === 1) {\n    return promise;\n  }\n  return promise.catch(() => tryAll(promiseConstructors.slice(1)));\n};\n\n// eslint-disable-next-line no-sequences\nexport const tap = interceptor => value => (interceptor(value), value);\n\nexport const finalize = callback => [\n  // eslint-disable-next-line no-sequences\n  value => (callback(), value),\n  error => {\n    callback();\n    throw error;\n  },\n];\n\nexport { default as Expirable } from './expirable';\nexport { default as Cache } from './cache';\n\n/**\n * 将对象转换为 Date，支持 string、number、ProtoBuf Long 以及 LeanCloud 的 Date 类型，\n * 其他情况下（包括对象为 falsy）返回原值。\n * @private\n */\nexport const decodeDate = date => {\n  if (!date) return date;\n  if (typeof date === 'string' || typeof date === 'number') {\n    return new Date(date);\n  }\n  if (date.__type === 'Date' && date.iso) {\n    return new Date(date.iso);\n  }\n  // Long\n  if (typeof date.toNumber === 'function') {\n    return new Date(date.toNumber());\n  }\n  return date;\n};\n/**\n * 获取 Date 的毫秒数，如果不是一个 Date 返回 undefined。\n * @private\n */\nexport const getTime = date =>\n  date && date.getTime ? date.getTime() : undefined;\n\n/**\n * 解码对象中的 LeanCloud 数据结构。\n * 目前仅会处理 Date 类型。\n * @private\n */\nexport const decode = value => {\n  if (!value) return value;\n  if (value.__type === 'Date' && value.iso) {\n    return new Date(value.iso);\n  }\n  if (Array.isArray(value)) {\n    return value.map(decode);\n  }\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(\n      (result, key) => ({\n        ...result,\n        [key]: decode(value[key]),\n      }),\n      {}\n    );\n  }\n  return value;\n};\n/**\n * 将对象中的特殊类型编码为 LeanCloud 数据结构。\n * 目前仅会处理 Date 类型。\n * @private\n */\nexport const encode = value => {\n  if (value instanceof Date) return { __type: 'Date', iso: value.toJSON() };\n  if (Array.isArray(value)) {\n    return value.map(encode);\n  }\n  if (isPlainObject(value)) {\n    return Object.keys(value).reduce(\n      (result, key) => ({\n        ...result,\n        [key]: encode(value[key]),\n      }),\n      {}\n    );\n  }\n  return value;\n};\n\nexport const keyRemap = (keymap, obj) =>\n  Object.keys(obj).reduce((newObj, key) => {\n    const newKey = keymap[key] || key;\n    return Object.assign(newObj, {\n      [newKey]: obj[key],\n    });\n  }, {});\n\nexport const isIE10 =\n  global.navigator &&\n  global.navigator.userAgent &&\n  global.navigator.userAgent.indexOf('MSIE 10.') !== -1;\n\n/* eslint-disable no-proto */\nexport const getStaticProperty = (klass, property) =>\n  klass[property] ||\n  (klass.__proto__ ? getStaticProperty(klass.__proto__, property) : undefined);\n/* eslint-enable no-proto */\n\nexport const union = (a, b) => Array.from(new Set([...a, ...b]));\nexport const difference = (a, b) =>\n  Array.from((bSet => new Set(a.filter(x => !bSet.has(x))))(new Set(b)));\n\nconst map = new WeakMap();\n\n// protected property helper\nexport const internal = object => {\n  if (!map.has(object)) {\n    map.set(object, {});\n  }\n  return map.get(object);\n};\n\nexport const compact = (obj, filter) => {\n  if (!isPlainObject(obj)) return obj;\n  const object = { ...obj };\n  Object.keys(object).forEach(prop => {\n    const value = object[prop];\n    if (value === filter) {\n      delete object[prop];\n    } else {\n      object[prop] = compact(value, filter);\n    }\n  });\n  return object;\n};\n\n// debug utility\nconst removeNull = obj => compact(obj, null);\nexport const trim = message => removeNull(JSON.parse(JSON.stringify(message)));\n\nexport const ensureArray = target => {\n  if (Array.isArray(target)) {\n    return target;\n  }\n  if (target === undefined || target === null) {\n    return [];\n  }\n  return [target];\n};\n\nexport const setValue = (target, key, value) => {\n  // '.' is not allowed in Class keys, escaping is not in concern now.\n  const segs = key.split('.');\n  const lastSeg = segs.pop();\n  let currentTarget = target;\n  segs.forEach(seg => {\n    if (currentTarget[seg] === undefined) currentTarget[seg] = {};\n    currentTarget = currentTarget[seg];\n  });\n  currentTarget[lastSeg] = value;\n  return target;\n};\n\nexport const isWeapp =\n  // eslint-disable-next-line no-undef\n  typeof wx === 'object' && typeof wx.connectSocket === 'function';\n\n// throttle decorator\nexport const throttle = wait => (target, property, descriptor) => {\n  const callback = descriptor.value;\n  // very naive, internal use only\n  if (callback.length) {\n    throw new Error('throttled function should not accept any arguments');\n  }\n  return {\n    ...descriptor,\n    value() {\n      let { throttleMeta } = internal(this);\n      if (!throttleMeta) {\n        throttleMeta = {};\n        internal(this).throttleMeta = throttleMeta;\n      }\n      let { [property]: propertyMeta } = throttleMeta;\n      if (!propertyMeta) {\n        propertyMeta = {};\n        throttleMeta[property] = propertyMeta;\n      }\n      const { previouseTimestamp = 0, timeout } = propertyMeta;\n      const now = Date.now();\n      const remainingTime = wait - (now - previouseTimestamp);\n      if (remainingTime <= 0) {\n        throttleMeta[property].previouseTimestamp = now;\n        callback.apply(this);\n      } else if (!timeout) {\n        propertyMeta.timeout = setTimeout(() => {\n          propertyMeta.previouseTimestamp = Date.now();\n          delete propertyMeta.timeout;\n          callback.apply(this);\n        }, remainingTime);\n      }\n    },\n  };\n};\n\nexport const isCNApp = appId => appId.slice(-9) !== '-MdYXbMMI';\n\nexport const equalBuffer = (buffer1, buffer2) => {\n  if (!buffer1 || !buffer2) return false;\n  if (buffer1.byteLength !== buffer2.byteLength) return false;\n  const a = new Uint8Array(buffer1);\n  const b = new Uint8Array(buffer2);\n  return !a.some((value, index) => value !== b[index]);\n};\n","// WebSocket with auto reconnecting feature, backup endpoint and EventEmitter interface.\n\nimport d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport StateMachine from 'javascript-state-machine';\nimport { getAdapter } from './adapter';\nimport { ensureArray, tryAll, global } from './utils';\n\nconst debug = d('LC:WebSocketPlus');\n\nexport const OPEN = 'open';\nexport const DISCONNECT = 'disconnect';\nexport const RECONNECT = 'reconnect';\nexport const RETRY = 'retry';\nexport const SCHEDULE = 'schedule';\nexport const OFFLINE = 'offline';\nexport const ONLINE = 'online';\nexport const ERROR = 'error';\nexport const MESSAGE = 'message';\n\nconst HEARTBEAT_TIME = 180000;\nconst TIMEOUT_TIME = 380000;\n\nconst DEFAULT_RETRY_STRATEGY = attempt => Math.min(1000 * 2 ** attempt, 300000);\n\nconst requireConnected = (target, name, descriptor) => ({\n  ...descriptor,\n  value: function requireConnectedWrapper(...args) {\n    this.checkConnectionAvailability(name);\n    return descriptor.value.call(this, ...args);\n  },\n});\n\nclass WebSocketPlus extends EventEmitter {\n  get urls() {\n    return this._urls;\n  }\n\n  set urls(urls) {\n    this._urls = ensureArray(urls);\n  }\n\n  constructor(getUrls, protocol) {\n    super();\n    this.init();\n    this._protocol = protocol;\n    Promise.resolve(typeof getUrls === 'function' ? getUrls() : getUrls)\n      .then(ensureArray)\n      .then(urls => {\n        this._urls = urls;\n        return this._open();\n      })\n      .then(() => {\n        this.__postponeTimeoutTimer = this._postponeTimeoutTimer.bind(this);\n        if (global.addEventListener) {\n          this.__pause = () => {\n            if (this.can('pause')) this.pause();\n          };\n          this.__resume = () => {\n            if (this.can('resume')) this.resume();\n          };\n          global.addEventListener('offline', this.__pause);\n          global.addEventListener('online', this.__resume);\n        }\n        this.open();\n      })\n      .catch(this.throw.bind(this));\n  }\n\n  _open() {\n    return this._createWs(this._urls, this._protocol).then(ws => {\n      const [first, ...reset] = this._urls;\n      this._urls = [...reset, first];\n      return ws;\n    });\n  }\n\n  _createWs(urls, protocol) {\n    return tryAll(\n      urls.map(url => (resolve, reject) => {\n        debug(`connect [${url}] ${protocol}`);\n        const WebSocket = getAdapter('WebSocket');\n        const ws = protocol ? new WebSocket(url, protocol) : new WebSocket(url);\n        ws.binaryType = this.binaryType || 'arraybuffer';\n        ws.onopen = () => resolve(ws);\n        ws.onclose = error => {\n          if (error instanceof Error) {\n            return reject(error);\n          }\n          // in browser, error event is useless\n          return reject(new Error(`Failed to connect [${url}]`));\n        };\n        ws.onerror = ws.onclose;\n      })\n    ).then(ws => {\n      this._ws = ws;\n      this._ws.onclose = this._handleClose.bind(this);\n      this._ws.onmessage = this._handleMessage.bind(this);\n      return ws;\n    });\n  }\n\n  _destroyWs() {\n    const ws = this._ws;\n    if (!ws) return;\n    ws.onopen = null;\n    ws.onclose = null;\n    ws.onerror = null;\n    ws.onmessage = null;\n    this._ws = null;\n    ws.close();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onbeforeevent(event, from, to, ...payload) {\n    debug(`${event}: ${from} -> ${to} %o`, payload);\n  }\n\n  onopen() {\n    this.emit(OPEN);\n  }\n\n  onconnected() {\n    this._startConnectionKeeper();\n  }\n\n  onleaveconnected(event, from, to) {\n    this._stopConnectionKeeper();\n    this._destroyWs();\n    if (to === 'offline' || to === 'disconnected') {\n      this.emit(DISCONNECT);\n    }\n  }\n\n  onpause() {\n    this.emit(OFFLINE);\n  }\n\n  onbeforeresume() {\n    this.emit(ONLINE);\n  }\n\n  onreconnect() {\n    this.emit(RECONNECT);\n  }\n\n  ondisconnected(event, from, to, attempt = 0) {\n    const delay =\n      from === OFFLINE ? 0 : DEFAULT_RETRY_STRATEGY.call(null, attempt);\n    debug(`schedule attempt=${attempt} delay=${delay}`);\n    this.emit(SCHEDULE, attempt, delay);\n    if (this.__scheduledRetry) {\n      clearTimeout(this.__scheduledRetry);\n    }\n    this.__scheduledRetry = setTimeout(() => {\n      if (this.is('disconnected')) {\n        this.retry(attempt);\n      }\n    }, delay);\n  }\n\n  onretry(event, from, to, attempt = 0) {\n    this.emit(RETRY, attempt);\n    this._open().then(\n      () => this.can('reconnect') && this.reconnect(),\n      () => this.can('fail') && this.fail(attempt + 1)\n    );\n  }\n\n  onerror(event, from, to, error) {\n    this.emit(ERROR, error);\n  }\n\n  onclose() {\n    if (global.removeEventListener) {\n      if (this.__pause) global.removeEventListener('offline', this.__pause);\n      if (this.__resume) global.removeEventListener('online', this.__resume);\n    }\n  }\n\n  checkConnectionAvailability(name = 'API') {\n    if (!this.is('connected')) {\n      const currentState = this.current;\n      console.warn(\n        `${name} should not be called when the connection is ${currentState}`\n      );\n      if (this.is('disconnected') || this.is('reconnecting')) {\n        console.warn(\n          'disconnect and reconnect event should be handled to avoid such calls.'\n        );\n      }\n      throw new Error('Connection unavailable');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  _ping() {\n    debug('ping');\n    try {\n      this.ping();\n    } catch (error) {\n      console.warn(`websocket ping error: ${error.message}`);\n    }\n  }\n\n  ping() {\n    if (this._ws.ping) {\n      this._ws.ping();\n    } else {\n      console.warn(`The WebSocket implement does not support sending ping frame.\n        Override ping method to use application defined ping/pong mechanism.`);\n    }\n  }\n\n  _postponeTimeoutTimer() {\n    debug('_postponeTimeoutTimer');\n    this._clearTimeoutTimers();\n    this._timeoutTimer = setTimeout(() => {\n      debug('timeout');\n      this.disconnect();\n    }, TIMEOUT_TIME);\n  }\n\n  _clearTimeoutTimers() {\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n    }\n  }\n\n  _startConnectionKeeper() {\n    debug('start connection keeper');\n    this._heartbeatTimer = setInterval(this._ping.bind(this), HEARTBEAT_TIME);\n    const addListener = this._ws.addListener || this._ws.addEventListener;\n    if (!addListener) {\n      debug('connection keeper disabled due to the lack of #addEventListener.');\n      return;\n    }\n    addListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n    addListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n    this._postponeTimeoutTimer();\n  }\n\n  _stopConnectionKeeper() {\n    debug('stop connection keeper');\n    // websockets/ws#489\n    const removeListener =\n      this._ws.removeListener || this._ws.removeEventListener;\n    if (removeListener) {\n      removeListener.call(this._ws, 'message', this.__postponeTimeoutTimer);\n      removeListener.call(this._ws, 'pong', this.__postponeTimeoutTimer);\n      this._clearTimeoutTimers();\n    }\n    if (this._heartbeatTimer) {\n      clearInterval(this._heartbeatTimer);\n    }\n  }\n\n  _handleClose(event) {\n    debug(`ws closed [${event.code}] ${event.reason}`);\n    // socket closed manually, ignore close event.\n    if (this.isFinished()) return;\n    this.handleClose(event);\n  }\n\n  handleClose() {\n    // reconnect\n    this.disconnect();\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  send(data) {\n    debug('send', data);\n    this._ws.send(data);\n  }\n\n  _handleMessage(event) {\n    debug('message', event.data);\n    this.handleMessage(event.data);\n  }\n\n  handleMessage(message) {\n    this.emit(MESSAGE, message);\n  }\n}\n\nStateMachine.create({\n  target: WebSocketPlus.prototype,\n  initial: {\n    state: 'initialized',\n    event: 'init',\n    defer: true,\n  },\n  terminal: 'closed',\n  events: [\n    {\n      name: 'open',\n      from: 'initialized',\n      to: 'connected',\n    },\n    {\n      name: 'disconnect',\n      from: 'connected',\n      to: 'disconnected',\n    },\n    {\n      name: 'retry',\n      from: 'disconnected',\n      to: 'reconnecting',\n    },\n    {\n      name: 'fail',\n      from: 'reconnecting',\n      to: 'disconnected',\n    },\n    {\n      name: 'reconnect',\n      from: 'reconnecting',\n      to: 'connected',\n    },\n    {\n      name: 'pause',\n      from: ['connected', 'disconnected', 'reconnecting'],\n      to: 'offline',\n    },\n    {},\n    {\n      name: 'resume',\n      from: 'offline',\n      to: 'disconnected',\n    },\n    {\n      name: 'close',\n      from: ['connected', 'disconnected', 'reconnecting', 'offline'],\n      to: 'closed',\n    },\n    {\n      name: 'throw',\n      from: '*',\n      to: 'error',\n    },\n  ],\n});\n\nexport default WebSocketPlus;\n","export const error = Object.freeze({\n  1000: {\n    name: 'CLOSE_NORMAL',\n  },\n  1006: {\n    name: 'CLOSE_ABNORMAL',\n  },\n  4100: {\n    name: 'APP_NOT_AVAILABLE',\n    message: 'App not exists or realtime message service is disabled.',\n  },\n  4102: {\n    name: 'SIGNATURE_FAILED',\n    message: 'Login signature mismatch.',\n  },\n  4103: {\n    name: 'INVALID_LOGIN',\n    message: 'Malformed clientId.',\n  },\n  4105: {\n    name: 'SESSION_REQUIRED',\n    message: 'Message sent before session opened.',\n  },\n  4107: {\n    name: 'READ_TIMEOUT',\n  },\n  4108: {\n    name: 'LOGIN_TIMEOUT',\n  },\n  4109: {\n    name: 'FRAME_TOO_LONG',\n  },\n  4110: {\n    name: 'INVALID_ORIGIN',\n    message: 'Access denied by domain whitelist.',\n  },\n  4111: {\n    name: 'SESSION_CONFLICT',\n  },\n  4112: {\n    name: 'SESSION_TOKEN_EXPIRED',\n  },\n  4113: {\n    name: 'APP_QUOTA_EXCEEDED',\n    message: 'The daily active users limit exceeded.',\n  },\n  4116: {\n    name: 'MESSAGE_SENT_QUOTA_EXCEEDED',\n    message: 'Command sent too fast.',\n  },\n  4200: {\n    name: 'INTERNAL_ERROR',\n    message: 'Internal error, please contact LeanCloud for support.',\n  },\n  4301: {\n    name: 'CONVERSATION_API_FAILED',\n    message: 'Upstream Conversatoin API failed, see error.detail for details.',\n  },\n  4302: {\n    name: 'CONVERSATION_SIGNATURE_FAILED',\n    message: 'Conversation action signature mismatch.',\n  },\n  4303: {\n    name: 'CONVERSATION_NOT_FOUND',\n  },\n  4304: {\n    name: 'CONVERSATION_FULL',\n  },\n  4305: {\n    name: 'CONVERSATION_REJECTED_BY_APP',\n    message: 'Conversation action rejected by hook.',\n  },\n  4306: {\n    name: 'CONVERSATION_UPDATE_FAILED',\n  },\n  4307: {\n    name: 'CONVERSATION_READ_ONLY',\n  },\n  4308: {\n    name: 'CONVERSATION_NOT_ALLOWED',\n  },\n  4309: {\n    name: 'CONVERSATION_UPDATE_REJECTED',\n    message: 'Conversation update rejected because the client is not a member.',\n  },\n  4310: {\n    name: 'CONVERSATION_QUERY_FAILED',\n    message: 'Conversation query failed because it is too expansive.',\n  },\n  4311: {\n    name: 'CONVERSATION_LOG_FAILED',\n  },\n  4312: {\n    name: 'CONVERSATION_LOG_REJECTED',\n    message:\n      'Message query rejected because the client is not a member of the conversation.',\n  },\n  4313: {\n    name: 'SYSTEM_CONVERSATION_REQUIRED',\n  },\n  4314: {\n    name: 'NORMAL_CONVERSATION_REQUIRED',\n  },\n  4315: {\n    name: 'CONVERSATION_BLACKLISTED',\n    message: 'Blacklisted in the conversation.',\n  },\n  4316: {\n    name: 'TRANSIENT_CONVERSATION_REQUIRED',\n  },\n  4317: {\n    name: 'CONVERSATION_MEMBERSHIP_REQUIRED',\n  },\n  4318: {\n    name: 'CONVERSATION_API_QUOTA_EXCEEDED',\n    message: 'LeanCloud API quota exceeded. You may upgrade your plan.',\n  },\n  4323: {\n    name: 'TEMPORARY_CONVERSATION_EXPIRED',\n    message: 'Temporary conversation expired or does not exist.',\n  },\n  4401: {\n    name: 'INVALID_MESSAGING_TARGET',\n    message: 'Conversation does not exist or client is not a member.',\n  },\n  4402: {\n    name: 'MESSAGE_REJECTED_BY_APP',\n    message: 'Message rejected by hook.',\n  },\n  4403: {\n    name: 'MESSAGE_OWNERSHIP_REQUIRED',\n  },\n  4404: {\n    name: 'MESSAGE_NOT_FOUND',\n  },\n  4405: {\n    name: 'MESSAGE_UPDATE_REJECTED_BY_APP',\n    message: 'Message update rejected by hook.',\n  },\n  4406: {\n    name: 'MESSAGE_EDIT_DISABLED',\n  },\n  4407: {\n    name: 'MESSAGE_RECALL_DISABLED',\n  },\n  5130: {\n    name: 'OWNER_PROMOTION_NOT_ALLOWED',\n    message: \"Updating a member's role to owner is not allowed.\",\n  },\n});\n\nexport const ErrorCode = Object.freeze(\n  Object.keys(error).reduce(\n    (result, code) =>\n      Object.assign(result, {\n        [error[code].name]: Number(code),\n      }),\n    {}\n  )\n);\n\nexport const createError = ({\n  code,\n  reason,\n  appCode,\n  detail,\n  error: errorMessage,\n}) => {\n  let message = reason || detail || errorMessage;\n  let name = reason;\n  if (!message && error[code]) {\n    ({ name } = error[code]);\n    message = error[code].message || name;\n  }\n  if (!message) {\n    message = `Unknow Error: ${code}`;\n  }\n  const err = new Error(message);\n  return Object.assign(err, {\n    code,\n    appCode,\n    detail,\n    name,\n  });\n};\n","import d from 'debug';\nimport values from 'lodash/values';\nimport WebSocketPlus, {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n} from './websocket-plus';\nimport { createError } from './error';\nimport { GenericCommand, CommandType, OpType } from '../proto/message';\nimport { trim, equalBuffer } from './utils';\n\nconst debug = d('LC:Connection');\n\nconst COMMAND_TIMEOUT = 20000;\n\nconst EXPIRE = Symbol('expire');\n\nconst isIdempotentCommand = command =>\n  !(\n    command.cmd === CommandType.direct ||\n    (command.cmd === CommandType.session && command.op === OpType.open) ||\n    (command.cmd === CommandType.conv &&\n      (command.op === OpType.start ||\n        command.op === OpType.update ||\n        command.op === OpType.members))\n  );\n\nexport {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n  EXPIRE,\n};\n\nexport default class Connection extends WebSocketPlus {\n  constructor(getUrl, { format, version }) {\n    debug('initializing Connection');\n    const protocolString = `lc.${format}.${version}`;\n    super(getUrl, protocolString);\n    this._protocolFormat = format;\n    this._commands = {};\n    this._serialId = 0;\n  }\n\n  async send(command, waitingForRespond = true) {\n    let buffer;\n    let serialId;\n    if (waitingForRespond) {\n      if (isIdempotentCommand(command)) {\n        buffer = command.toArrayBuffer();\n        const duplicatedCommand = values(this._commands).find(\n          ({ buffer: targetBuffer, command: targetCommand }) =>\n            targetCommand.cmd === command.cmd &&\n            targetCommand.op === command.op &&\n            equalBuffer(targetBuffer, buffer)\n        );\n        if (duplicatedCommand) {\n          console.warn(\n            `Duplicated command [cmd:${command.cmd} op:${command.op}] is throttled.`\n          );\n          return duplicatedCommand.promise;\n        }\n      }\n\n      this._serialId += 1;\n      serialId = this._serialId;\n      command.i = serialId; // eslint-disable-line no-param-reassign\n    }\n    if (debug.enabled) debug('↑ %O sent', trim(command));\n\n    let message;\n    if (this._protocolFormat === 'proto2base64') {\n      message = command.toBase64();\n    } else if (command.toArrayBuffer) {\n      message = command.toArrayBuffer();\n    }\n    if (!message) {\n      throw new TypeError(`${command} is not a GenericCommand`);\n    }\n\n    super.send(message);\n\n    if (!waitingForRespond) return undefined;\n    const promise = new Promise((resolve, reject) => {\n      this._commands[serialId] = {\n        command,\n        buffer,\n        resolve,\n        reject,\n        timeout: setTimeout(() => {\n          if (this._commands[serialId]) {\n            if (debug.enabled) debug('✗ %O timeout', trim(command));\n            reject(\n              createError({\n                error: `Command Timeout [cmd:${command.cmd} op:${command.op}]`,\n                name: 'COMMAND_TIMEOUT',\n              })\n            );\n            delete this._commands[serialId];\n          }\n        }, COMMAND_TIMEOUT),\n      };\n    });\n    this._commands[serialId].promise = promise;\n    return promise;\n  }\n\n  handleMessage(msg) {\n    let message;\n    try {\n      message = GenericCommand.decode(msg);\n      if (debug.enabled) debug('↓ %O received', trim(message));\n    } catch (e) {\n      console.warn('Decode message failed:', e.message, msg);\n      return;\n    }\n    const serialId = message.i;\n    if (serialId) {\n      if (this._commands[serialId]) {\n        clearTimeout(this._commands[serialId].timeout);\n        if (message.cmd === CommandType.error) {\n          this._commands[serialId].reject(createError(message.errorMessage));\n        } else {\n          this._commands[serialId].resolve(message);\n        }\n        delete this._commands[serialId];\n      } else {\n        console.warn(`Unexpected command received with serialId [${serialId}],\n         which have timed out or never been requested.`);\n      }\n    } else {\n      switch (message.cmd) {\n        case CommandType.error: {\n          this.emit(ERROR, createError(message.errorMessage));\n          return;\n        }\n        case CommandType.goaway: {\n          this.emit(EXPIRE);\n          return;\n        }\n        default: {\n          this.emit(MESSAGE, message);\n        }\n      }\n    }\n  }\n\n  ping() {\n    return this.send(\n      new GenericCommand({\n        cmd: CommandType.echo,\n      })\n    ).catch(error => debug('ping failed:', error));\n  }\n}\n","import d from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { timeout } from 'promise-timeout';\nimport { getAdapter } from '../adapter';\nimport { createError } from '../error';\n\nconst debug = d('LC:request');\n\nexport default ({\n  method = 'GET',\n  url: _url,\n  query,\n  headers,\n  data,\n  timeout: time,\n}) => {\n  let url = _url;\n  if (query) {\n    const queryString = Object.keys(query)\n      .map(key => {\n        const value = query[key];\n        if (value === undefined) return undefined;\n        const v = isPlainObject(value) ? JSON.stringify(value) : value;\n        return `${encodeURIComponent(key)}=${encodeURIComponent(v)}`;\n      })\n      .filter(qs => qs)\n      .join('&');\n    url = `${url}?${queryString}`;\n  }\n  debug('Req: %O %O %O', method, url, { headers, data });\n  const request = getAdapter('request');\n  const promise = request(url, { method, headers, data })\n    .then(response => {\n      if (response.ok === false) {\n        const error = createError(response.data);\n        error.response = response;\n        throw error;\n      }\n      debug('Res: %O %O %O', url, response.status, response.data);\n      return response.data;\n    })\n    .catch(error => {\n      if (error.response) {\n        debug(\n          'Error: %O %O %O',\n          url,\n          error.response.status,\n          error.response.data\n        );\n      }\n      throw error;\n    });\n  return time ? timeout(promise, time) : promise;\n};\n","/* eslint-disable max-len */\n\n/**\n * 插件接口\n *\n * <p>\n * 插件是由一个或多个扩展点组成的字典。SDK 的扩展点可以分为两类：\n * <p>\n * 第一类扩展点是类实例化之后的回调，包括 <code>Realtime</code>、<code>IMClient</code> 与 <code>Conversation</code>。这些扩展点可以通过一个同步的 Decorator 进行扩展。Decorator 接受一个对应的实例并对其进行一些操作。\n * 特别的，由于注册自定义消息类这个需求特别的常用，额外定义一个 messageClasses 扩展点来做这件事情。\n * <p>\n * 第二类扩展点是在某些事件处理前、后可以注入逻辑的点。\n * 其中 <code>beforeMessageParse</code>，<code>afterMessageParse</code> 可以通过一个异步的 Middleware 进行扩展。Middleware 接受一个对象，返回一个同类型对象或同类型对象的 Promise。\n * <code>beforeMessageDispatch</code> 可以通过返回一个 boolean 类型的 shouldDispatch 值来控制是否要继续派发收到的消息。\n * <p>\n * 如果使用了多个插件，这些 hook 会按照插件数组的顺序依次执行。前一个 Middleware 的返回值会作为参数传给后一个 Middleware。\n *\n * @interface Plugin\n * @since 3.1.0\n */\n\n/* eslint-enable max-len */\n\n/**\n * 插件名称，用于在日志中显示异常的插件\n *\n * @name Plugin.name\n * @type string\n */\n\n/**\n * 插件注册的消息类型\n *\n * @name Plugin.messageClasses\n * @type AVMessage[]\n */\n\n/**\n * 在 Realtime 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Realtime 实例。\n *\n * @name Plugin.onRealtimeCreate\n * @type Function\n */\n\n/**\n * 在 IMClient 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 IMClient 实例。\n *\n * @name Plugin.onIMClientCreate\n * @type Function\n */\n\n/**\n * 在 Conversation 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Conversation 实例。\n * 需要注意的是，该扩展点并不是在 <code>{@link IMClient#createConversation}</code> 方法创建成功后调用的 hook，\n * 而是所有的 Conversation 实例化的时候（包括但不限于 query 时）调用的 hook。\n *\n * @name Plugin.onConversationCreate\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之前，对原始消息进行修改。\n * <p>\n * 接受一个参数为原始消息，是某个消息的内容，一般是一个 JSON 对象。\n * 该方法需要返回一个 JSON 对象。如果这个结果是异步得到的，也可以返回一个 Promise(fulfilled with a JSON)。\n *\n * @name Plugin.beforeMessageParse\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之后，对消息实例进行修改。\n * <p>\n * 接受一个参数为消息实例，一般是一个已注册的 Message 类或其子类的实例。\n * 该方法需要返回一个同类型的消息实例。如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.afterMessageParse\n * @type Function\n */\n\n/**\n * 在收到消息之后，派发消息之前，控制是否派发这条消息。\n * <p>\n * 接受参数为 message 与 conversation。\n * 该方法需要返回 boolean 类型的值，如果返回 false 则 SDK 不再派发这条消息，后续的 beforeMessageDispatch 也不会执行。\n * 如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.beforeMessageDispatch\n * @type Function\n * @since 3.4.0\n */\n\nimport { ensureArray, tap } from './utils';\n\nconst checkType = middleware => param => {\n  const { constructor } = param;\n  return Promise.resolve(param)\n    .then(middleware)\n    .then(\n      tap(result => {\n        if (result === undefined || result === null) {\n          // eslint-disable-next-line max-len\n          return console.warn(\n            `Middleware[${middleware._pluginName ||\n              'anonymous plugin'}:${middleware.name ||\n              'anonymous middleware'}] param/return types not match. It returns ${result} while a ${\n              param.constructor.name\n            } expected.`\n          );\n        }\n        if (!(result instanceof constructor)) {\n          // eslint-disable-next-line max-len\n          return console.warn(\n            `Middleware[${middleware._pluginName ||\n              'anonymous plugin'}:${middleware.name ||\n              'anonymous middleware'}] param/return types not match. It returns a ${\n              result.constructor.name\n            } while a ${param.constructor.name} expected.`\n          );\n        }\n        return 0;\n      })\n    );\n};\n\nexport const applyDecorators = (decorators, target) => {\n  if (decorators) {\n    decorators.forEach(decorator => {\n      try {\n        decorator(target);\n      } catch (error) {\n        if (decorator._pluginName) {\n          error.message += `[${decorator._pluginName}]`;\n        }\n        throw error;\n      }\n    });\n  }\n};\n\nexport const applyMiddlewares = middlewares => target =>\n  ensureArray(middlewares).reduce(\n    (previousPromise, middleware) =>\n      previousPromise.then(checkType(middleware)).catch(error => {\n        if (middleware._pluginName) {\n          // eslint-disable-next-line no-param-reassign\n          error.message += `[${middleware._pluginName}]`;\n        }\n        throw error;\n      }),\n    Promise.resolve(target)\n  );\n\nexport const applyDispatcher = (dispatchers, payload) =>\n  ensureArray(dispatchers).reduce(\n    (resultPromise, dispatcher) =>\n      resultPromise\n        .then(\n          shouldDispatch =>\n            shouldDispatch === false ? false : dispatcher(...payload)\n        )\n        .catch(error => {\n          if (dispatcher._pluginName) {\n            // eslint-disable-next-line no-param-reassign\n            error.message += `[${dispatcher._pluginName}]`;\n          }\n          throw error;\n        }),\n    Promise.resolve(true)\n  );\n","// eslint-disable-next-line max-classes-per-file\nimport d from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport shuffle from 'lodash/shuffle';\nimport Connection, {\n  OPEN,\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n  ERROR,\n  MESSAGE,\n  EXPIRE,\n} from './connection';\nimport { ErrorCode, createError } from './error';\nimport {\n  tap,\n  Cache,\n  trim,\n  internal,\n  ensureArray,\n  isWeapp,\n  isCNApp,\n} from './utils';\nimport request from './utils/request';\nimport { applyDecorators, applyDispatcher } from './plugin';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:Realtime');\nconst routerCache = new Cache('push-router');\n\nconst initializedApp = {};\n\nexport default class Realtime extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @param  {Object} options\n   * @param  {String} options.appId\n   * @param  {String} options.appKey （since 4.0.0）\n   * @param  {String|Object} [options.server] 指定服务器域名，中国节点应用此参数必填（since 4.0.0）\n   * @param  {Boolean} [options.noBinary=false] 设置 WebSocket 使用字符串格式收发消息（默认为二进制格式）。\n   *                                            适用于 WebSocket 实现不支持二进制数据格式的情况\n   * @param  {Boolean} [options.ssl=true] 使用 wss 进行连接\n   * @param  {String|String[]} [options.RTMServers] 指定私有部署的 RTM 服务器地址（since 4.0.0）\n   * @param  {Plugin[]} [options.plugins] 加载插件（since 3.1.0）\n   */\n  constructor({ plugins, ...options }) {\n    debug('initializing Realtime %s %O', VERSION, options);\n    super();\n    const { appId } = options;\n    if (typeof appId !== 'string') {\n      throw new TypeError(`appId [${appId}] is not a string`);\n    }\n    if (initializedApp[appId]) {\n      throw new Error(`App [${appId}] is already initialized.`);\n    }\n    initializedApp[appId] = true;\n    if (typeof options.appKey !== 'string') {\n      throw new TypeError(`appKey [${options.appKey}] is not a string`);\n    }\n    if (isCNApp(appId)) {\n      if (!options.server) {\n        throw new TypeError(\n          `server option is required for apps from CN region`\n        );\n      }\n    }\n    this._options = {\n      appId: undefined,\n      appKey: undefined,\n      noBinary: false,\n      ssl: true,\n      RTMServerName:\n        typeof process !== 'undefined'\n          ? process.env.RTM_SERVER_NAME\n          : undefined, // undocumented on purpose, internal use only\n      ...options,\n    };\n    this._cache = new Cache('endpoints');\n    const _this = internal(this);\n    _this.clients = new Set();\n    _this.pendingClients = new Set();\n    const mergedPlugins = [\n      ...ensureArray(Realtime.__preRegisteredPlugins),\n      ...ensureArray(plugins),\n    ];\n    debug(\n      'Using plugins %o',\n      mergedPlugins.map(plugin => plugin.name)\n    );\n    this._plugins = mergedPlugins.reduce((result, plugin) => {\n      Object.keys(plugin).forEach(hook => {\n        if ({}.hasOwnProperty.call(plugin, hook) && hook !== 'name') {\n          if (plugin.name) {\n            ensureArray(plugin[hook]).forEach(value => {\n              // eslint-disable-next-line no-param-reassign\n              value._pluginName = plugin.name;\n            });\n          }\n          // eslint-disable-next-line no-param-reassign\n          result[hook] = ensureArray(result[hook]).concat(plugin[hook]);\n        }\n      });\n      return result;\n    }, {});\n    // onRealtimeCreate hook\n    applyDecorators(this._plugins.onRealtimeCreate, this);\n  }\n\n  async _request({\n    method,\n    url: _url,\n    version = '1.1',\n    path,\n    query,\n    headers,\n    data,\n  }) {\n    let url = _url;\n    if (!url) {\n      const { appId, server } = this._options;\n      const { api } = await this.constructor._getServerUrls({\n        appId,\n        server,\n      });\n      url = `${api}/${version}${path}`;\n    }\n    return request({\n      url,\n      method,\n      query,\n      headers: {\n        'X-LC-Id': this._options.appId,\n        'X-LC-Key': this._options.appKey,\n        ...headers,\n      },\n      data,\n    });\n  }\n\n  _open() {\n    if (this._openPromise) return this._openPromise;\n\n    let format = 'protobuf2';\n    if (this._options.noBinary) {\n      // 不发送 binary data，fallback to base64 string\n      format = 'proto2base64';\n    }\n    const version = 3;\n    const protocol = {\n      format,\n      version,\n    };\n    this._openPromise = new Promise((resolve, reject) => {\n      debug('No connection established, create a new one.');\n      const connection = new Connection(\n        () => this._getRTMServers(this._options),\n        protocol\n      );\n      connection\n        .on(OPEN, () => resolve(connection))\n        .on(ERROR, error => {\n          delete this._openPromise;\n          reject(error);\n        })\n        .on(EXPIRE, async () => {\n          debug('Connection expired. Refresh endpoints.');\n          this._cache.set('endpoints', null, 0);\n          connection.urls = await this._getRTMServers(this._options);\n          connection.disconnect();\n        })\n        .on(MESSAGE, this._dispatchCommand.bind(this));\n      /**\n       * 连接断开。\n       * 连接断开可能是因为 SDK 进入了离线状态（see {@link Realtime#event:OFFLINE}），或长时间没有收到服务器心跳。\n       * 连接断开后所有的网络操作都会失败，请在连接断开后禁用相关的 UI 元素。\n       * @event Realtime#DISCONNECT\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event Realtime#SCHEDULE\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       */\n      /**\n       * 正在尝试重新连接\n       * @event Realtime#RETRY\n       * @param {Number} attempt 尝试重连的次数\n       */\n      /**\n       * 连接恢复正常。\n       * 请重新启用在 {@link Realtime#event:DISCONNECT} 事件中禁用的相关 UI 元素\n       * @event Realtime#RECONNECT\n       */\n\n      /**\n       * 客户端连接断开\n       * @event IMClient#DISCONNECT\n       * @see Realtime#event:DISCONNECT\n       * @since 3.2.0\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event IMClient#SCHEDULE\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       * @since 3.2.0\n       */\n      /**\n       * 正在尝试重新连接\n       * @event IMClient#RETRY\n       * @param {Number} attempt 尝试重连的次数\n       * @since 3.2.0\n       */\n\n      /**\n       * 客户端进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event Realtime#OFFLINE\n       * @since 3.4.0\n       */\n      /**\n       * 客户端恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event Realtime#ONLINE\n       * @since 3.4.0\n       */\n      /**\n       * 进入离线状态。\n       * 这通常意味着网络已断开，或者 {@link Realtime#pause} 被调用\n       * @event IMClient#OFFLINE\n       * @since 3.4.0\n       */\n      /**\n       * 恢复在线状态\n       * 这通常意味着网络已恢复，或者 {@link Realtime#resume} 被调用\n       * @event IMClient#ONLINE\n       * @since 3.4.0\n       */\n\n      // event proxy\n      [DISCONNECT, RECONNECT, RETRY, SCHEDULE, OFFLINE, ONLINE].forEach(event =>\n        connection.on(event, (...payload) => {\n          debug(`${event} event emitted. %o`, payload);\n          this.emit(event, ...payload);\n          if (event !== RECONNECT) {\n            internal(this).clients.forEach(client => {\n              client.emit(event, ...payload);\n            });\n          }\n        })\n      );\n      // override handleClose\n      connection.handleClose = function handleClose(event) {\n        const isFatal = [\n          ErrorCode.APP_NOT_AVAILABLE,\n          ErrorCode.INVALID_LOGIN,\n          ErrorCode.INVALID_ORIGIN,\n        ].some(errorCode => errorCode === event.code);\n        if (isFatal) {\n          // in these cases, SDK should throw.\n          this.throw(createError(event));\n        } else {\n          // reconnect\n          this.disconnect();\n        }\n      };\n      internal(this).connection = connection;\n    });\n\n    return this._openPromise;\n  }\n\n  async _getRTMServers(options) {\n    if (options.RTMServers) return shuffle(ensureArray(options.RTMServers));\n    let info;\n    const cachedEndPoints = this._cache.get('endpoints');\n    if (cachedEndPoints) {\n      info = cachedEndPoints;\n    } else {\n      info = await this.constructor._fetchRTMServers(options);\n      const { server, secondary, ttl } = info;\n      if (\n        typeof server !== 'string' &&\n        typeof secondary !== 'string' &&\n        typeof ttl !== 'number'\n      ) {\n        throw new Error(\n          `malformed RTM route response: ${JSON.stringify(info)}`\n        );\n      }\n      this._cache.set('endpoints', info, info.ttl * 1000);\n    }\n    debug('endpoint info: %O', info);\n    return [info.server, info.secondary];\n  }\n\n  static async _getServerUrls({ appId, server }) {\n    debug('fetch server urls');\n    if (server) {\n      if (typeof server !== 'string') return server;\n      return {\n        RTMRouter: server,\n        api: server,\n      };\n    }\n    const cachedRouter = routerCache.get(appId);\n    if (cachedRouter) return cachedRouter;\n    const defaultProtocol = 'https://';\n    return request({\n      url: 'https://app-router.com/2/route',\n      query: {\n        appId,\n      },\n      timeout: 20000,\n    })\n      .then(tap(debug))\n      .then(\n        ({\n          rtm_router_server: RTMRouterServer,\n          api_server: APIServer,\n          ttl = 3600,\n        }) => {\n          if (!RTMRouterServer) {\n            throw new Error('rtm router not exists');\n          }\n          const serverUrls = {\n            RTMRouter: `${defaultProtocol}${RTMRouterServer}`,\n            api: `${defaultProtocol}${APIServer}`,\n          };\n          routerCache.set(appId, serverUrls, ttl * 1000);\n          return serverUrls;\n        }\n      )\n      .catch(() => {\n        const id = appId.slice(0, 8).toLowerCase();\n        const domain = 'lncldglobal.com';\n        return {\n          RTMRouter: `${defaultProtocol}${id}.rtm.${domain}`,\n          api: `${defaultProtocol}${id}.api.${domain}`,\n        };\n      });\n  }\n\n  static _fetchRTMServers({ appId, ssl, server, RTMServerName }) {\n    debug('fetch endpoint info');\n    return this._getServerUrls({ appId, server })\n      .then(tap(debug))\n      .then(({ RTMRouter }) =>\n        request({\n          url: `${RTMRouter}/v1/route`,\n          query: {\n            appId,\n            secure: ssl,\n            features: isWeapp ? 'wechat' : undefined,\n            server: RTMServerName,\n            _t: Date.now(),\n          },\n          timeout: 20000,\n        }).then(tap(debug))\n      );\n  }\n\n  _close() {\n    if (this._openPromise) {\n      this._openPromise.then(connection => connection.close());\n    }\n    delete this._openPromise;\n  }\n\n  /**\n   * 手动进行重连。\n   * SDK 在网络出现异常时会自动按照一定的时间间隔尝试重连，调用该方法会立即尝试重连并重置重连尝试计数器。\n   * 只能在 `SCHEDULE` 事件之后，`RETRY` 事件之前调用，如果当前网络正常或者正在进行重连，调用该方法会抛异常。\n   */\n  retry() {\n    const { connection } = internal(this);\n    if (!connection) {\n      throw new Error('no connection established');\n    }\n    if (connection.cannot('retry')) {\n      throw new Error(\n        `retrying not allowed when not disconnected. the connection is now ${connection.current}`\n      );\n    }\n    return connection.retry();\n  }\n\n  /**\n   * 暂停，使 SDK 进入离线状态。\n   * 你可以在网络断开、应用进入后台等时刻调用该方法让 SDK 进入离线状态，离线状态下不会尝试重连。\n   * 在浏览器中 SDK 会自动监听网络变化，因此无需手动调用该方法。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:OFFLINE\n   */\n  pause() {\n    // 这个方法常常在网络断开、进入后台时被调用，此时 connection 可能没有建立或者已经 close。\n    // 因此不像 retry，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('pause')) connection.pause();\n  }\n\n  /**\n   * 恢复在线状态。\n   * 你可以在网络恢复、应用回到前台等时刻调用该方法让 SDK 恢复在线状态，恢复在线状态后 SDK 会开始尝试重连。\n   *\n   * @since 3.4.0\n   * @see Realtime#event:ONLINE\n   */\n  resume() {\n    // 与 pause 一样，这个方法应该尽可能 loose\n    const { connection } = internal(this);\n    if (!connection) return;\n    if (connection.can('resume')) connection.resume();\n  }\n\n  _registerPending(value) {\n    internal(this).pendingClients.add(value);\n  }\n\n  _deregisterPending(client) {\n    internal(this).pendingClients.delete(client);\n  }\n\n  _register(client) {\n    internal(this).clients.add(client);\n  }\n\n  _deregister(client) {\n    const _this = internal(this);\n    _this.clients.delete(client);\n    if (_this.clients.size + _this.pendingClients.size === 0) {\n      this._close();\n    }\n  }\n\n  _dispatchCommand(command) {\n    return applyDispatcher(this._plugins.beforeCommandDispatch, [\n      command,\n      this,\n    ]).then(shouldDispatch => {\n      // no plugin handled this command\n      if (shouldDispatch)\n        return debug('[WARN] Unexpected message received: %O', trim(command));\n      return false;\n    });\n  }\n}\n\n// For test purpose only\n// SHOULD NOT be public\nexport class MultitonRealtime extends Realtime {\n  constructor({ appId, ...rest }) {\n    delete initializedApp[appId];\n    super({\n      appId,\n      ...rest,\n    });\n  }\n}\n","import * as Protocols from '../proto/message';\n\nexport {\n  Protocols,\n  // misspelling\n  Protocols as Protocals,\n};\n\nexport { default as EventEmitter } from 'eventemitter3';\n\nconst polyfilledPromise = Promise;\nexport { polyfilledPromise as Promise };\n\nexport {\n  /**\n   * @name Realtime\n   * @memberof module:leancloud-realtime\n   * @see Realtime\n   */\n  default as Realtime,\n} from './realtime';\n\nexport * from './adapter';\n\nexport { debug } from './utils';\n","// IMClient\nexport const UNREAD_MESSAGES_COUNT_UPDATE = 'unreadmessagescountupdate';\nexport const CLOSE = 'close';\nexport const CONFLICT = 'conflict';\nexport const CONVERSATION_INFO_UPDATED = 'conversationinfoupdated';\nexport const UNHANDLED_MESSAGE = 'unhandledmessage';\n\n// shared\nexport const INVITED = 'invited';\nexport const KICKED = 'kicked';\nexport const MEMBERS_JOINED = 'membersjoined';\nexport const MEMBERS_LEFT = 'membersleft';\nexport const MEMBER_INFO_UPDATED = 'memberinfoupdated';\nexport const BLOCKED = 'blocked';\nexport const UNBLOCKED = 'unblocked';\nexport const MEMBERS_BLOCKED = 'membersblocked';\nexport const MEMBERS_UNBLOCKED = 'membersunblocked';\nexport const MUTED = 'muted';\nexport const UNMUTED = 'unmuted';\nexport const MEMBERS_MUTED = 'membersmuted';\nexport const MEMBERS_UNMUTED = 'membersunmuted';\nexport const MESSAGE = 'message';\nexport const MESSAGE_RECALL = 'messagerecall';\nexport const MESSAGE_UPDATE = 'messageupdate';\n\n// Conversation\nexport const LAST_DELIVERED_AT_UPDATE = 'lastdeliveredatupdate';\nexport const LAST_READ_AT_UPDATE = 'lastreadatupdate';\nexport const INFO_UPDATED = 'infoupdated';\n","import uuid from 'uuid/v4';\nimport { ensureArray, decodeDate, getTime } from '../utils';\n\n/**\n * 消息状态枚举\n * @enum {Symbol}\n * @since 3.2.0\n * @memberof module:leancloud-realtime\n */\nconst MessageStatus = {\n  /** 初始状态、未知状态 */\n  NONE: Symbol('none'),\n  /** 正在发送 */\n  SENDING: Symbol('sending'),\n  /** 已发送 */\n  SENT: Symbol('sent'),\n  /** 已送达 */\n  DELIVERED: Symbol('delivered'),\n  /** 发送失败 */\n  FAILED: Symbol('failed'),\n};\nObject.freeze(MessageStatus);\n\nconst rMessageStatus = {\n  [MessageStatus.NONE]: true,\n  [MessageStatus.SENDING]: true,\n  [MessageStatus.SENT]: true,\n  [MessageStatus.DELIVERED]: true,\n  [MessageStatus.READ]: true,\n  [MessageStatus.FAILED]: true,\n};\n\nexport { MessageStatus };\nexport default class Message {\n  /**\n   * @implements AVMessage\n   * @param  {Object|String|ArrayBuffer} content 消息内容\n   */\n  constructor(content) {\n    Object.assign(\n      this,\n      { content },\n      {\n        /**\n         * @type {String}\n         * @memberof Message#\n         */\n        id: uuid(),\n        /**\n         * 消息所在的 conversation id\n         * @memberof Message#\n         * @type {String?}\n         */\n        cid: null,\n        /**\n         * 消息发送时间\n         * @memberof Message#\n         * @type {Date}\n         */\n        timestamp: new Date(),\n        /**\n         * 消息发送者\n         * @memberof Message#\n         * @type {String}\n         */\n        from: undefined,\n        /**\n         * 消息提及的用户\n         * @since 4.0.0\n         * @memberof Message#\n         * @type {String[]}\n         */\n        mentionList: [],\n        /**\n         * 消息是否提及了所有人\n         * @since 4.0.0\n         * @memberof Message#\n         * @type {Boolean}\n         */\n        mentionedAll: false,\n        _mentioned: false,\n      }\n    );\n    this._setStatus(MessageStatus.NONE);\n  }\n\n  /**\n   * 将当前消息的内容序列化为 JSON 对象\n   * @private\n   * @return {Object}\n   */\n  getPayload() {\n    return this.content;\n  }\n\n  _toJSON() {\n    const {\n      id,\n      cid,\n      from,\n      timestamp,\n      deliveredAt,\n      updatedAt,\n      mentionList,\n      mentionedAll,\n      mentioned,\n    } = this;\n    return {\n      id,\n      cid,\n      from,\n      timestamp,\n      deliveredAt,\n      updatedAt,\n      mentionList,\n      mentionedAll,\n      mentioned,\n    };\n  }\n\n  /**\n   * 返回 JSON 格式的消息\n   * @return {Object} 返回值是一个 plain Object\n   */\n  toJSON() {\n    return {\n      ...this._toJSON(),\n      data: this.content,\n    };\n  }\n\n  /**\n   * 返回 JSON 格式的消息，与 toJSON 不同的是，该对象包含了完整的信息，可以通过 {@link IMClient#parseMessage} 反序列化。\n   * @return {Object} 返回值是一个 plain Object\n   * @since 4.0.0\n   */\n  toFullJSON() {\n    const {\n      content,\n      id,\n      cid,\n      from,\n      timestamp,\n      deliveredAt,\n      _updatedAt,\n      mentionList,\n      mentionedAll,\n    } = this;\n    return {\n      data: content,\n      id,\n      cid,\n      from,\n      timestamp: getTime(timestamp),\n      deliveredAt: getTime(deliveredAt),\n      updatedAt: getTime(_updatedAt),\n      mentionList,\n      mentionedAll,\n    };\n  }\n\n  /**\n   * 消息状态，值为 {@link module:leancloud-realtime.MessageStatus} 之一\n   * @type {Symbol}\n   * @readonly\n   * @since 3.2.0\n   */\n  get status() {\n    return this._status;\n  }\n\n  _setStatus(status) {\n    if (!rMessageStatus[status]) {\n      throw new Error('Invalid message status');\n    }\n    this._status = status;\n  }\n\n  get timestamp() {\n    return this._timestamp;\n  }\n\n  set timestamp(value) {\n    this._timestamp = decodeDate(value);\n  }\n\n  /**\n   * 消息送达时间\n   * @type {?Date}\n   */\n  get deliveredAt() {\n    return this._deliveredAt;\n  }\n\n  set deliveredAt(value) {\n    this._deliveredAt = decodeDate(value);\n  }\n\n  /**\n   * 消息修改或撤回时间，可以通过比较其与消息的 timestamp 是否相等判断消息是否被修改过或撤回过。\n   * @type {Date}\n   * @since 3.5.0\n   */\n  get updatedAt() {\n    return this._updatedAt || this.timestamp;\n  }\n\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n\n  /**\n   * 当前用户是否在该消息中被提及\n   * @type {Boolean}\n   * @readonly\n   * @since 4.0.0\n   */\n  get mentioned() {\n    return this._mentioned;\n  }\n\n  _updateMentioned(client) {\n    this._mentioned =\n      this.from !== client &&\n      (this.mentionedAll || this.mentionList.indexOf(client) > -1);\n  }\n\n  /**\n   * 获取提及用户列表\n   * @since 4.0.0\n   * @return {String[]} 提及用户的 id 列表\n   */\n  getMentionList() {\n    return this.mentionList;\n  }\n\n  /**\n   * 设置提及用户列表\n   * @since 4.0.0\n   * @param {String[]} clients 提及用户的 id 列表\n   * @return {this} self\n   */\n  setMentionList(clients) {\n    this.mentionList = ensureArray(clients);\n    return this;\n  }\n\n  /**\n   * 设置是否提及所有人\n   * @since 4.0.0\n   * @param {Boolean} [value=true]\n   * @return {this} self\n   */\n  mentionAll(value = true) {\n    this.mentionedAll = Boolean(value);\n    return this;\n  }\n\n  /**\n   * 判断给定的内容是否是有效的 Message，\n   * 该方法始终返回 true\n   * @private\n   * @returns {Boolean}\n   * @implements AVMessage.validate\n   */\n  static validate() {\n    return true;\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 如果子类提供了 message，返回该 message\n   * 如果没有提供，将 json 作为 content 实例化一个 Message\n   * @private\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {Message} message 子类提供的 message\n   * @return {Message}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message) {\n    return message || new this(json);\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// documented in ../index.js\nexport const messageType = type => {\n  if (typeof type !== 'number') {\n    throw new TypeError(`${type} is not a Number`);\n  }\n  return target => {\n    target.TYPE = type;\n    target.validate = json => json._lctype === type;\n    target.prototype._getType = () => ({ _lctype: type });\n  };\n};\n\n// documented in ../plugin-im.js\nexport const messageField = fields => {\n  if (typeof fields !== 'string') {\n    if (!Array.isArray(fields)) {\n      throw new TypeError(`${fields} is not an Array`);\n    } else if (fields.some(value => typeof value !== 'string')) {\n      throw new TypeError('fields contains non-string typed member');\n    }\n  }\n  return target => {\n    // IE10 Hack:\n    // static properties in IE10 will not be inherited from super\n    // search for parse method and assign it manually\n    let originalCustomFields = isIE10\n      ? getStaticProperty(target, '_customFields')\n      : target._customFields;\n    originalCustomFields = Array.isArray(originalCustomFields)\n      ? originalCustomFields\n      : [];\n    target._customFields = originalCustomFields.concat(fields);\n  };\n};\n\n// IE10 Hack:\n// static properties in IE10 will not be inherited from super\n// search for parse method and assign it manually\n\nexport const IE10Compatible = target => {\n  if (isIE10) {\n    target.parse = getStaticProperty(target, 'parse');\n  }\n};\n","import Message from './message';\nimport { messageField } from './helpers';\nimport { getStaticProperty, isIE10, compact } from '../utils';\n\n// jsdoc-ignore-start\n@messageField(['_lctext', '_lcattrs'])\n// jsdoc-ignore-end\n/**\n * 所有内置的富媒体消息均继承自本类\n * @extends Message\n */\nclass TypedMessage extends Message {\n  /**\n   * @type {Number}\n   * @readonly\n   */\n  get type() {\n    return this.constructor.TYPE;\n  }\n\n  /** @type {String} */\n  set text(text) {\n    return this.setText(text);\n  }\n\n  get text() {\n    return this.getText();\n  }\n\n  /** @type {Object} */\n  set attributes(attributes) {\n    return this.setAttributes(attributes);\n  }\n\n  get attributes() {\n    return this.getAttributes();\n  }\n\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，\n   * 如 <code>[红包] 新春快乐</code>。\n   * 默认值为消息的 text。\n   * @type {String}\n   * @readonly\n   */\n  get summary() {\n    return this.text;\n  }\n\n  /**\n   * @param {String} text\n   * @return {this} self\n   */\n  setText(text) {\n    this._lctext = text;\n    return this;\n  }\n\n  /**\n   * @return {String}\n   */\n  getText() {\n    return this._lctext;\n  }\n\n  /**\n   * @param {Object} attributes\n   * @return {this} self\n   */\n  setAttributes(attributes) {\n    this._lcattrs = attributes;\n    return this;\n  }\n\n  /**\n   * @return {Object}\n   */\n  getAttributes() {\n    return this._lcattrs;\n  }\n\n  _getCustomFields() {\n    const fields = Array.isArray(this.constructor._customFields)\n      ? this.constructor._customFields\n      : [];\n    return fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = this[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n  }\n\n  /* eslint-disable class-methods-use-this */\n  _getType() {\n    throw new Error('not implemented');\n  }\n  /* eslint-enable class-methods-use-this */\n\n  getPayload() {\n    return compact({\n      _lctext: this.getText(),\n      _lcattrs: this.getAttributes(),\n      ...this._getCustomFields(),\n      ...this._getType(),\n    });\n  }\n\n  toJSON() {\n    const { type, text, attributes, summary } = this;\n    return {\n      ...super._toJSON(),\n      type,\n      text,\n      attributes,\n      summary,\n    };\n  }\n\n  toFullJSON() {\n    return {\n      ...super.toFullJSON(),\n      data: this.getPayload(),\n    };\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 为给定的 message 设置 text 与 attributes 属性，返回该 message\n   * 如果子类没有提供 message，new this()\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {TypedMessage} message 子类提供的 message\n   * @return {TypedMessage}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message = new this()) {\n    message.content = json; // eslint-disable-line no-param-reassign\n    const customFields = isIE10\n      ? getStaticProperty(message.constructor, '_customFields')\n      : message.constructor._customFields;\n    let fields = Array.isArray(customFields) ? customFields : [];\n    fields = fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = json[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n    Object.assign(message, fields);\n    return super.parse(json, message);\n  }\n}\n\nexport default TypedMessage;\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-127)\n@IE10Compatible\n// jsdoc-ignore-end\n/**\n * 已撤回类型消息，当消息被撤回时，SDK 会使用该类型的消息替代原始消息\n * @extends TypedMessage\n */\nclass RecalledMessage extends TypedMessage {\n  /**\n   * 在客户端需要以文本形式展示该消息时显示的文案，值为 <code>[该消息已撤回]</code>\n   * @type {String}\n   * @readonly\n   */\n  // eslint-disable-next-line class-methods-use-this\n  get summary() {\n    return '[该消息已撤回]';\n  }\n}\nexport default RecalledMessage;\n","/* eslint class-methods-use-this: [\"error\", { \"exceptMethods\": [\"_addMembers\", \"_removeMembers\"] }] */\nimport EventEmitter from 'eventemitter3';\nimport values from 'lodash/values';\nimport d from 'debug';\nimport { decodeDate, getTime, internal } from '../utils';\nimport { applyDecorators } from '../plugin';\nimport {\n  GenericCommand,\n  ConvCommand,\n  DirectCommand,\n  LogsCommand,\n  PatchCommand,\n  PatchItem,\n  CommandType,\n  OpType,\n} from '../../proto/message';\nimport * as Event from '../events/im';\nimport { createError } from '../error';\nimport Message, { MessageStatus } from '../messages/message';\nimport RecalledMessage from '../messages/recalled-message';\n\nconst debug = d('LC:Conversation');\n\nconst serializeMessage = message => {\n  const content = message.getPayload();\n  let msg;\n  let binaryMsg;\n  if (content instanceof ArrayBuffer) {\n    binaryMsg = content;\n  } else if (typeof content !== 'string') {\n    msg = JSON.stringify(content);\n  } else {\n    msg = content;\n  }\n  return { msg, binaryMsg };\n};\n\nconst { NEW, OLD } = LogsCommand.QueryDirection;\n\n/**\n * 历史消息查询方向枚举\n * @enum {Number}\n * @since 4.0.0\n * @memberof module:leancloud-realtime\n */\nconst MessageQueryDirection = {\n  /** 从后向前 */\n  NEW_TO_OLD: OLD,\n  /** 从前向后 */\n  OLD_TO_NEW: NEW,\n};\nObject.freeze(MessageQueryDirection);\n\nexport { MessageQueryDirection };\n\nexport default class ConversationBase extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @private\n   * @abstract\n   */\n  constructor(\n    {\n      id,\n      lastMessageAt,\n      lastMessage,\n      lastDeliveredAt,\n      lastReadAt,\n      unreadMessagesCount = 0,\n      members = [],\n      mentioned = false,\n      ...properties\n    },\n    client\n  ) {\n    super();\n    Object.assign(this, {\n      /**\n       * 对话 id，对应 _Conversation 表中的 objectId\n       * @memberof ConversationBase#\n       * @type {String}\n       */\n      id,\n      /**\n       * 最后一条消息时间\n       * @memberof ConversationBase#\n       * @type {?Date}\n       */\n      lastMessageAt,\n      /**\n       * 最后一条消息\n       * @memberof ConversationBase#\n       * @type {?Message}\n       */\n      lastMessage,\n      /**\n       * 参与该对话的用户列表\n       * @memberof ConversationBase#\n       * @type {String[]}\n       */\n      members,\n      // other properties provided by subclasses\n      ...properties,\n    });\n    this.members = Array.from(new Set(this.members));\n    Object.assign(internal(this), {\n      messagesWaitingForReceipt: {},\n      lastDeliveredAt,\n      lastReadAt,\n      unreadMessagesCount,\n      mentioned,\n    });\n    this._client = client;\n    if (debug.enabled) {\n      values(Event).forEach(event =>\n        this.on(event, (...payload) =>\n          this._debug(`${event} event emitted. %o`, payload)\n        )\n      );\n    }\n    // onConversationCreate hook\n    applyDecorators(this._client._plugins.onConversationCreate, this);\n  }\n\n  /**\n   * 当前用户是否在该对话的未读消息中被提及\n   * @type {Boolean}\n   * @since 4.0.0\n   */\n  get unreadMessagesMentioned() {\n    return internal(this).unreadMessagesMentioned;\n  }\n\n  _setUnreadMessagesMentioned(value) {\n    internal(this).unreadMessagesMentioned = Boolean(value);\n  }\n\n  set unreadMessagesCount(value) {\n    if (value !== this.unreadMessagesCount) {\n      internal(this).unreadMessagesCount = value;\n      this._client.emit(Event.UNREAD_MESSAGES_COUNT_UPDATE, [this]);\n    }\n  }\n\n  /**\n   * 当前用户在该对话的未读消息数\n   * @type {Number}\n   */\n  get unreadMessagesCount() {\n    return internal(this).unreadMessagesCount;\n  }\n\n  set lastMessageAt(value) {\n    const time = decodeDate(value);\n    if (time <= this._lastMessageAt) return;\n    this._lastMessageAt = time;\n  }\n\n  get lastMessageAt() {\n    return this._lastMessageAt;\n  }\n\n  /**\n   * 最后消息送达时间，常用来实现消息的「已送达」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastDeliveredAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastDeliveredAt;\n  }\n\n  _setLastDeliveredAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastDeliveredAt)) {\n      internal(this).lastDeliveredAt = date;\n      /**\n       * 最后消息送达时间更新\n       * @event ConversationBase#LAST_DELIVERED_AT_UPDATE\n       * @since 3.4.0\n       */\n      this.emit(Event.LAST_DELIVERED_AT_UPDATE);\n    }\n  }\n\n  /**\n   * 最后消息被阅读时间，常用来实现发送消息的「已读」标记，可通过 {@link Conversation#fetchReceiptTimestamps} 获取或更新该属性\n   * @type {?Date}\n   * @since 3.4.0\n   */\n  get lastReadAt() {\n    if (this.members.length !== 2) return null;\n    return internal(this).lastReadAt;\n  }\n\n  _setLastReadAt(value) {\n    const date = decodeDate(value);\n    if (!(date < internal(this).lastReadAt)) {\n      internal(this).lastReadAt = date;\n      /**\n       * 最后消息被阅读时间更新\n       * @event ConversationBase#LAST_READ_AT_UPDATE\n       * @since 3.4.0\n       */\n      this.emit(Event.LAST_READ_AT_UPDATE);\n    }\n  }\n\n  /**\n   * 返回 JSON 格式的对话，与 toJSON 不同的是，该对象包含了完整的信息，可以通过 {@link IMClient#parseConversation} 反序列化。\n   * @return {Object} 返回值是一个 plain Object\n   * @since 4.0.0\n   */\n  toFullJSON() {\n    const {\n      id,\n      members,\n      lastMessageAt,\n      lastDeliveredAt,\n      lastReadAt,\n      lastMessage,\n      unreadMessagesCount,\n    } = this;\n    return {\n      id,\n      members,\n      lastMessageAt: getTime(lastMessageAt),\n      lastDeliveredAt: getTime(lastDeliveredAt),\n      lastReadAt: getTime(lastReadAt),\n      lastMessage: lastMessage ? lastMessage.toFullJSON() : undefined,\n      unreadMessagesCount,\n    };\n  }\n\n  /**\n   * 返回 JSON 格式的对话\n   * @return {Object} 返回值是一个 plain Object\n   * @since 4.0.0\n   */\n  toJSON() {\n    const {\n      id,\n      members,\n      lastMessageAt,\n      lastDeliveredAt,\n      lastReadAt,\n      lastMessage,\n      unreadMessagesCount,\n      unreadMessagesMentioned,\n    } = this;\n    return {\n      id,\n      members,\n      lastMessageAt,\n      lastDeliveredAt,\n      lastReadAt,\n      lastMessage: lastMessage ? lastMessage.toJSON() : undefined,\n      unreadMessagesCount,\n      unreadMessagesMentioned,\n    };\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  _send(command, ...args) {\n    /* eslint-disable no-param-reassign */\n    if (command.cmd === null) {\n      command.cmd = 'conv';\n    }\n    if (command.cmd === 'conv' && command.convMessage === null) {\n      command.convMessage = new ConvCommand();\n    }\n    if (command.convMessage && command.convMessage.cid === null) {\n      command.convMessage.cid = this.id;\n    }\n    /* eslint-enable no-param-reassign */\n    return this._client._send(command, ...args);\n  }\n\n  /**\n   * 发送消息\n   * @param  {Message} message 消息，Message 及其子类的实例\n   * @param {Object} [options] since v3.3.0，发送选项\n   * @param {Boolean} [options.transient] since v3.3.1，是否作为暂态消息发送\n   * @param {Boolean} [options.receipt] 是否需要回执，仅在普通对话中有效\n   * @param {Boolean} [options.will] since v3.4.0，是否指定该消息作为「掉线消息」发送，\n   * 「掉线消息」会延迟到当前用户掉线后发送，常用来实现「下线通知」功能\n   * @param {MessagePriority} [options.priority] 消息优先级，仅在暂态对话中有效，\n   * see: {@link module:leancloud-realtime.MessagePriority MessagePriority}\n   * @param {Object} [options.pushData] 消息对应的离线推送内容，如果消息接收方不在线，会推送指定的内容。其结构说明参见: {@link https://url.leanapp.cn/pushData 推送消息内容}\n   * @return {Promise.<Message>} 发送的消息\n   */\n  async send(message, options) {\n    this._debug(message, 'send');\n    if (!(message instanceof Message)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    const { transient, receipt, priority, pushData, will } = {\n      // support Message static property: sendOptions\n      ...message.constructor.sendOptions,\n      // support Message static property: getSendOptions\n      ...(typeof message.constructor.getSendOptions === 'function'\n        ? message.constructor.getSendOptions(message)\n        : {}),\n      ...options,\n    };\n    if (receipt) {\n      if (this.transient) {\n        console.warn(\n          'receipt option is ignored as the conversation is transient.'\n        );\n      } else if (transient) {\n        console.warn(\n          'receipt option is ignored as the message is sent transiently.'\n        );\n      } else if (this.members.length > 2) {\n        console.warn(\n          'receipt option is recommended to be used in one-on-one conversation.'\n        ); // eslint-disable-line max-len\n      }\n    }\n    if (priority && !this.transient) {\n      console.warn(\n        'priority option is ignored as the conversation is not transient.'\n      );\n    }\n    Object.assign(message, {\n      cid: this.id,\n      from: this._client.id,\n    });\n    message._setStatus(MessageStatus.SENDING);\n    const { msg, binaryMsg } = serializeMessage(message);\n    const command = new GenericCommand({\n      cmd: 'direct',\n      directMessage: new DirectCommand({\n        msg,\n        binaryMsg,\n        cid: this.id,\n        r: receipt,\n        transient,\n        dt: message.id,\n        pushData: JSON.stringify(pushData),\n        will,\n        mentionPids: message.mentionList,\n        mentionAll: message.mentionedAll,\n      }),\n      priority,\n    });\n    try {\n      const resCommand = await this._send(command);\n      const {\n        ackMessage: { uid, t, code, reason, appCode },\n      } = resCommand;\n      if (code !== null) {\n        throw createError({\n          code,\n          reason,\n          appCode,\n        });\n      }\n      Object.assign(message, {\n        id: uid,\n        timestamp: t,\n      });\n      if (!transient) {\n        this.lastMessage = message;\n        this.lastMessageAt = message.timestamp;\n      }\n      message._setStatus(MessageStatus.SENT);\n      if (receipt) {\n        internal(this).messagesWaitingForReceipt[message.id] = message;\n      }\n      return message;\n    } catch (error) {\n      message._setStatus(MessageStatus.FAILED);\n      throw error;\n    }\n  }\n\n  async _update(message, newMessage, recall) {\n    this._debug('patch %O %O %O', message, newMessage, recall);\n    if (message instanceof Message) {\n      if (message.from !== this._client.id) {\n        throw new Error('Updating message from others is not allowed');\n      }\n      if (\n        message.status !== MessageStatus.SENT &&\n        message.status !== MessageStatus.DELIVERED\n      ) {\n        throw new Error('Message is not sent');\n      }\n    } else if (!(message.id && message.timestamp)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    let msg;\n    let binaryMsg;\n    if (!recall) {\n      const content = serializeMessage(newMessage);\n      ({ msg, binaryMsg } = content);\n    }\n    await this._send(\n      new GenericCommand({\n        cmd: CommandType.patch,\n        op: OpType.modify,\n        patchMessage: new PatchCommand({\n          patches: [\n            new PatchItem({\n              cid: this.id,\n              mid: message.id,\n              timestamp: Number(message.timestamp),\n              recall,\n              data: msg,\n              binaryMsg,\n              mentionPids: newMessage.mentionList,\n              mentionAll: newMessage.mentionedAll,\n            }),\n          ],\n          lastPatchTime: this._client._lastPatchTime,\n        }),\n      })\n    );\n    const { id, cid, timestamp, from, _status } = message;\n    Object.assign(newMessage, {\n      id,\n      cid,\n      timestamp,\n      from,\n      _status,\n    });\n    if (this.lastMessage && this.lastMessage.id === newMessage.id) {\n      this.lastMessage = newMessage;\n    }\n    return newMessage;\n  }\n\n  /**\n   * 获取对话人数，或暂态对话的在线人数\n   * @return {Promise.<Number>}\n   */\n  async count() {\n    this._debug('count');\n    const resCommand = await this._send(\n      new GenericCommand({\n        op: 'count',\n      })\n    );\n    return resCommand.convMessage.count;\n  }\n\n  /**\n   * 应用增加成员的操作，产生副作用\n   * @param {string[]} members\n   * @abstract\n   * @private\n   */\n  _addMembers() {}\n\n  /**\n   * 应用减少成员的操作，产生副作用\n   * @param {string[]} members\n   * @abstract\n   * @private\n   */\n  _removeMembers() {}\n\n  /**\n   * 修改已发送的消息\n   * @param {AVMessage} message 要修改的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   * @param {AVMessage} newMessage 新的消息\n   * @return {Promise.<AVMessage>} 更新后的消息\n   */\n  async update(message, newMessage) {\n    if (!(newMessage instanceof Message)) {\n      throw new TypeError(`${newMessage} is not a Message`);\n    }\n    return this._update(message, newMessage, false);\n  }\n\n  /**\n   * 撤回已发送的消息\n   * @param {AVMessage} message 要撤回的消息，该消息必须是由当前用户发送的。也可以提供一个包含消息 {id, timestamp} 的对象\n   * @return {Promise.<RecalledMessage>} 一条已撤回的消息\n   */\n  async recall(message) {\n    return this._update(message, new RecalledMessage(), true);\n  }\n\n  /**\n   * 查询消息记录\n   * 如果仅需实现消息向前记录翻页查询需求，建议使用 {@link Conversation#createMessagesIterator}。\n   * 不论何种方向，获得的消息都是按照时间升序排列的。\n   * startClosed 与 endClosed 用于指定查询区间的开闭。\n   *\n   * @param  {Object} [options]\n   * @param  {Number} [options.limit] 限制查询结果的数量，目前服务端默认为 20\n   * @param  {Number}   [options.type] 指定查询的富媒体消息类型，不指定则查询所有消息。\n   * @param  {MessageQueryDirection} [options.direction] 查询的方向。\n   * 在不指定的情况下如果 startTime 大于 endTime，则为从新到旧查询，可以实现加载聊天记录等场景。\n   * 如果 startTime 小于 endTime，则为从旧到新查询，可以实现弹幕等场景。\n   * @param  {Date}   [options.startTime] 从该时间开始查询，不传则从当前时间开始查询\n   * @param  {String} [options.startMessageId] 从该消息之前开始查询，需要与 startTime 同时使用，为防止某时刻有重复消息\n   * @param  {Boolean}[options.startClosed] 指定查询范围是否包括开始的时间点，默认不包括\n   * @param  {Date}   [options.endTime] 查询到该时间为止，不传则查询最早消息为止\n   * @param  {String} [options.endMessageId] 查询到该消息为止，需要与 endTime 同时使用，为防止某时刻有重复消息\n   * @param  {Boolean}[options.endClosed] 指定查询范围是否包括结束的时间点，默认不包括\n   *\n   * @param  {Date}   [options.beforeTime] DEPRECATED: 使用 startTime 代替。限制查询结果为小于该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] DEPRECATED: 使用 startMessageId 代替。\n   * 限制查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Date}   [options.afterTime] DEPRECATED: 使用 endTime 代替。限制查询结果为大于该时间之前的消息\n   * @param  {String} [options.afterMessageId] DEPRECATED: 使用 endMessageId 代替。\n   * 限制查询结果为该消息之后的消息，需要与 afterTime 同时使用，为防止某时刻有重复消息\n   * @return {Promise.<Message[]>} 消息列表\n   */\n  async queryMessages(options = {}) {\n    this._debug('query messages %O', options);\n    const {\n      beforeTime,\n      beforeMessageId,\n      afterTime,\n      afterMessageId,\n      limit,\n      direction,\n      type,\n      startTime,\n      startMessageId,\n      startClosed,\n      endTime,\n      endMessageId,\n      endClosed,\n    } = options;\n    if (beforeMessageId || beforeTime || afterMessageId || afterTime) {\n      console.warn(\n        'DEPRECATION: queryMessages options beforeTime, beforeMessageId, afterTime and afterMessageId are deprecated in favor of startTime, startMessageId, endTime and endMessageId.'\n      );\n      return this.queryMessages({\n        startTime: beforeTime,\n        startMessageId: beforeMessageId,\n        endTime: afterTime,\n        endMessageId: afterMessageId,\n        limit,\n      });\n    }\n    if (startMessageId && !startTime) {\n      throw new Error(\n        'query option startMessageId must be used with option startTime'\n      );\n    }\n    if (endMessageId && !endTime) {\n      throw new Error(\n        'query option endMessageId must be used with option endTime'\n      );\n    }\n    const conditions = {\n      t: startTime,\n      mid: startMessageId,\n      tIncluded: startClosed,\n      tt: endTime,\n      tmid: endMessageId,\n      ttIncluded: endClosed,\n      l: limit,\n      lctype: type,\n    };\n    if (conditions.t instanceof Date) {\n      conditions.t = conditions.t.getTime();\n    }\n    if (conditions.tt instanceof Date) {\n      conditions.tt = conditions.tt.getTime();\n    }\n    if (direction !== undefined) {\n      conditions.direction = direction;\n    } else if (conditions.tt > conditions.t) {\n      conditions.direction = MessageQueryDirection.OLD_TO_NEW;\n    }\n    const resCommand = await this._send(\n      new GenericCommand({\n        cmd: 'logs',\n        logsMessage: new LogsCommand(\n          Object.assign(conditions, {\n            cid: this.id,\n          })\n        ),\n      })\n    );\n    return Promise.all(\n      resCommand.logsMessage.logs.map(\n        async ({\n          msgId,\n          timestamp,\n          patchTimestamp,\n          from,\n          ackAt,\n          readAt,\n          data,\n          mentionAll,\n          mentionPids,\n          bin,\n        }) => {\n          const messageData = {\n            data,\n            bin,\n            id: msgId,\n            cid: this.id,\n            timestamp,\n            from,\n            deliveredAt: ackAt,\n            updatedAt: patchTimestamp,\n            mentionList: mentionPids,\n            mentionedAll: mentionAll,\n          };\n          const message = await this._client.parseMessage(messageData);\n          let status = MessageStatus.SENT;\n          if (this.members.length === 2) {\n            if (ackAt) status = MessageStatus.DELIVERED;\n            if (ackAt) this._setLastDeliveredAt(ackAt);\n            if (readAt) this._setLastReadAt(readAt);\n          }\n          message._setStatus(status);\n          return message;\n        }\n      )\n    );\n  }\n\n  /**\n   * 获取消息翻页迭代器\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制起始查询结果为小于该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制起始查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制每页查询结果的数量，目前服务端默认为 20\n   * @return {AsyncIterater.<Promise.<IteratorResult<Message[]>>>} [AsyncIterator]{@link https://github.com/tc39/proposal-async-iteration}，调用其 next 方法返回获取下一页消息的 Promise\n   * @example\n   * var messageIterator = conversation.createMessagesIterator({ limit: 10 });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message1, ..., message10],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message11, ..., message20],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // No more messages\n   *   // result: { value: [], done: true }\n   * });\n   */\n  createMessagesIterator({ beforeTime, beforeMessageId, limit } = {}) {\n    let promise;\n    return {\n      next: () => {\n        if (promise === undefined) {\n          // first call\n          promise = this.queryMessages({\n            limit,\n            startTime: beforeTime,\n            startMessageId: beforeMessageId,\n          });\n        } else {\n          promise = promise.then(prevMessages => {\n            if (prevMessages.length === 0 || prevMessages.length < limit) {\n              // no more messages\n              return [];\n            }\n            return this.queryMessages({\n              startTime: prevMessages[0].timestamp,\n              startMessageId: prevMessages[0].id,\n              limit,\n            });\n          });\n        }\n        return promise.then(value => ({\n          value: Array.from(value),\n          done: value.length === 0 || value.length < limit,\n        }));\n      },\n    };\n  }\n\n  /**\n   * 将该会话标记为已读\n   * @return {Promise.<this>} self\n   */\n  async read() {\n    this.unreadMessagesCount = 0;\n    this._setUnreadMessagesMentioned(false);\n    // 跳过暂态会话\n    if (this.transient) return this;\n    const client = this._client;\n    if (!internal(client).readConversationsBuffer) {\n      internal(client).readConversationsBuffer = new Set();\n    }\n    internal(client).readConversationsBuffer.add(this);\n    client._doSendRead();\n    return this;\n  }\n\n  _handleReceipt({ messageId, timestamp, read }) {\n    if (read) {\n      this._setLastReadAt(timestamp);\n    } else {\n      this._setLastDeliveredAt(timestamp);\n    }\n    const { messagesWaitingForReceipt } = internal(this);\n    const message = messagesWaitingForReceipt[messageId];\n    if (!message) return;\n    message._setStatus(MessageStatus.DELIVERED);\n    message.deliveredAt = timestamp;\n    delete messagesWaitingForReceipt[messageId];\n  }\n\n  /**\n   * 更新对话的最新回执时间戳（lastDeliveredAt、lastReadAt）\n   * @since 3.4.0\n   * @return {Promise.<this>} this\n   */\n  async fetchReceiptTimestamps() {\n    // 暂态/系统会话不支持回执\n    if (this.transient || this.system) return this;\n    const {\n      convMessage: { maxReadTimestamp, maxAckTimestamp },\n    } = await this._send(\n      new GenericCommand({\n        op: 'max_read',\n      })\n    );\n    this._setLastDeliveredAt(maxAckTimestamp);\n    this._setLastReadAt(maxReadTimestamp);\n    return this;\n  }\n\n  _fetchAllReceiptTimestamps() {\n    // 暂态/系统会话不支持回执\n    if (this.transient || this.system) return this;\n    const convMessage = new ConvCommand({\n      queryAllMembers: true,\n    });\n    return this._send(\n      new GenericCommand({\n        op: 'max_read',\n        convMessage,\n      })\n    ).then(({ convMessage: { maxReadTuples } }) =>\n      maxReadTuples\n        .filter(\n          maxReadTuple =>\n            maxReadTuple.maxAckTimestamp || maxReadTuple.maxReadTimestamp\n        )\n        .map(({ pid, maxAckTimestamp, maxReadTimestamp }) => ({\n          pid,\n          lastDeliveredAt: decodeDate(maxAckTimestamp),\n          lastReadAt: decodeDate(maxReadTimestamp),\n        }))\n    );\n  }\n}\n","import d from 'debug';\nimport { tap } from './utils';\n\nconst debug = d('LC:SignatureFactoryRunner');\n\nfunction _validateSignature(signatureResult = {}) {\n  const { signature, timestamp, nonce } = signatureResult;\n  if (\n    typeof signature !== 'string' ||\n    typeof timestamp !== 'number' ||\n    typeof nonce !== 'string'\n  ) {\n    throw new Error('malformed signature');\n  }\n  return {\n    signature,\n    timestamp,\n    nonce,\n  };\n}\n\nexport default (signatureFactory, params) =>\n  Promise.resolve()\n    .then(() => {\n      debug('call signatureFactory with %O', params);\n      return signatureFactory(...params);\n    })\n    .then(\n      tap(signatureResult => debug('sign result %O', signatureResult)),\n      error => {\n        // eslint-disable-next-line no-param-reassign\n        error.message = `sign error: ${error.message}`;\n        debug(error);\n        throw error;\n      }\n    )\n    .then(_validateSignature);\n","import isEmpty from 'lodash/isEmpty';\nimport cloneDeep from 'lodash/cloneDeep';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport ConversationBase from './conversation-base';\nimport {\n  decodeDate,\n  getTime,\n  encode,\n  keyRemap,\n  union,\n  difference,\n  internal,\n  setValue,\n  ensureArray,\n} from '../utils';\nimport {\n  GenericCommand,\n  ConvCommand,\n  JsonObjectMessage,\n  BlacklistCommand,\n  OpType,\n} from '../../proto/message';\nimport runSignatureFactory from '../signature-factory-runner';\nimport { createError } from '../error';\n\n/**\n * 部分失败异常\n * @typedef OperationFailureError\n * @type {Error}\n * @property {string} message 异常信息\n * @property {string[]} clientIds 因为该原因失败的 client id 列表\n * @property {number} [code] 错误码\n * @property {string} [detail] 详细信息\n */\n\n/**\n * 部分成功的结果\n * @typedef PartiallySuccess\n * @type {Object}\n * @property {string[]} successfulClientIds 成功的 client id 列表\n * @property {OperationFailureError[]} failures 失败的异常列表\n */\n\n/**\n * 分页查询结果\n * @typedef PagedResults\n * @type {Object}\n * @property {T[]} results 查询结果\n * @property {string} [next] 存在表示还有更多结果，在下次查询中带上可实现翻页。\n */\n\nconst createPartiallySuccess = ({ allowedPids, failedPids }) => ({\n  successfulClientIds: allowedPids,\n  failures: failedPids.map(({ pids, ...error }) =>\n    Object.assign(createError(error), { clientIds: pids })\n  ),\n});\n\n/**\n * @extends ConversationBase\n * @private\n * @abstract\n */\nclass PersistentConversation extends ConversationBase {\n  constructor(\n    data,\n    {\n      creator,\n      createdAt,\n      updatedAt,\n      transient = false,\n      system = false,\n      muted = false,\n      mutedMembers = [],\n      ...attributes\n    },\n    client\n  ) {\n    super(\n      {\n        ...data,\n        /**\n         * 对话创建者\n         * @memberof PersistentConversation#\n         * @type {String}\n         */\n        creator,\n        /**\n         * 对话创建时间\n         * @memberof PersistentConversation#\n         * @type {Date}\n         */\n        createdAt,\n        /**\n         * 对话更新时间\n         * @memberof PersistentConversation#\n         * @type {Date}\n         */\n        updatedAt,\n        /**\n         * 对该对话设置了静音的用户列表\n         * @memberof PersistentConversation#\n         * @type {?String[]}\n         */\n        mutedMembers,\n        /**\n         * 暂态对话标记\n         * @memberof PersistentConversation#\n         * @type {Boolean}\n         */\n        transient,\n        /**\n         * 系统对话标记\n         * @memberof PersistentConversation#\n         * @type {Boolean}\n         * @since 3.3.0\n         */\n        system,\n        /**\n         * 当前用户静音该对话标记\n         * @memberof PersistentConversation#\n         * @type {Boolean}\n         */\n        muted,\n        _attributes: attributes,\n      },\n      client\n    );\n    this._reset();\n  }\n\n  set createdAt(value) {\n    this._createdAt = decodeDate(value);\n  }\n\n  get createdAt() {\n    return this._createdAt;\n  }\n\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n\n  get updatedAt() {\n    return this._updatedAt;\n  }\n\n  /**\n   * 对话名字，对应 _Conversation 表中的 name\n   * @type {String}\n   */\n  get name() {\n    return this.get('name');\n  }\n\n  set name(value) {\n    this.set('name', value);\n  }\n\n  /**\n   * 获取对话的自定义属性\n   * @since 3.2.0\n   * @param  {String} key key 属性的键名，'x' 对应 Conversation 表中的 x 列\n   * @return {Any} 属性的值\n   */\n  get(key) {\n    return get(internal(this).currentAttributes, key);\n  }\n\n  /**\n   * 设置对话的自定义属性\n   * @since 3.2.0\n   * @param {String} key 属性的键名，'x' 对应 Conversation 表中的 x 列，支持使用 'x.y.z' 来修改对象的部分字段。\n   * @param {Any} value 属性的值\n   * @return {this} self\n   * @example\n   *\n   * // 设置对话的 color 属性\n   * conversation.set('color', {\n   *   text: '#000',\n   *   background: '#DDD',\n   * });\n   * // 设置对话的 color.text 属性\n   * conversation.set('color.text', '#333');\n   */\n  set(key, value) {\n    this._debug(`set [${key}]: ${value}`);\n    const { pendingAttributes } = internal(this);\n    const pendingKeys = Object.keys(pendingAttributes);\n    // suppose pendingAttributes = { 'a.b': {} }\n    // set 'a' or 'a.b': delete 'a.b'\n    const re = new RegExp(`^${key}`);\n    const childKeys = pendingKeys.filter(re.test.bind(re));\n    childKeys.forEach(k => {\n      delete pendingAttributes[k];\n    });\n    if (childKeys.length) {\n      pendingAttributes[key] = value;\n    } else {\n      // set 'a.c': nothing to do\n      // set 'a.b.c.d': assign c: { d: {} } to 'a.b'\n      const parentKey = find(pendingKeys, k => key.indexOf(k) === 0); // 'a.b'\n      if (parentKey) {\n        setValue(\n          pendingAttributes[parentKey],\n          key.slice(parentKey.length + 1),\n          value\n        );\n      } else {\n        pendingAttributes[key] = value;\n      }\n    }\n    this._buildCurrentAttributes();\n    return this;\n  }\n\n  _buildCurrentAttributes() {\n    const { pendingAttributes } = internal(this);\n    internal(this).currentAttributes = Object.keys(pendingAttributes).reduce(\n      (target, k) => setValue(target, k, pendingAttributes[k]),\n      cloneDeep(this._attributes)\n    );\n  }\n\n  _updateServerAttributes(attributes) {\n    Object.keys(attributes).forEach(key =>\n      setValue(this._attributes, key, attributes[key])\n    );\n    this._buildCurrentAttributes();\n  }\n\n  _reset() {\n    Object.assign(internal(this), {\n      pendingAttributes: {},\n      currentAttributes: this._attributes,\n    });\n  }\n\n  /**\n   * 保存当前对话的属性至服务器\n   * @return {Promise.<this>} self\n   */\n  async save() {\n    this._debug('save');\n    const attr = internal(this).pendingAttributes;\n    if (isEmpty(attr)) {\n      this._debug('nothing touched, resolve with self');\n      return this;\n    }\n    this._debug('attr: %O', attr);\n    const convMessage = new ConvCommand({\n      attr: new JsonObjectMessage({\n        data: JSON.stringify(encode(attr)),\n      }),\n    });\n    const resCommand = await this._send(\n      new GenericCommand({\n        op: 'update',\n        convMessage,\n      })\n    );\n    this.updatedAt = resCommand.convMessage.udate;\n    this._attributes = internal(this).currentAttributes;\n    internal(this).pendingAttributes = {};\n    return this;\n  }\n\n  /**\n   * 从服务器更新对话的属性\n   * @return {Promise.<this>} self\n   */\n  async fetch() {\n    const query = this._client.getQuery().equalTo('objectId', this.id);\n    await query.find();\n    return this;\n  }\n\n  /**\n   * 静音，客户端拒绝收到服务器端的离线推送通知\n   * @return {Promise.<this>} self\n   */\n  async mute() {\n    this._debug('mute');\n    await this._send(\n      new GenericCommand({\n        op: 'mute',\n      })\n    );\n    if (!this.transient) {\n      this.muted = true;\n      this.mutedMembers = union(this.mutedMembers, [this._client.id]);\n    }\n    return this;\n  }\n\n  /**\n   * 取消静音\n   * @return {Promise.<this>} self\n   */\n  async unmute() {\n    this._debug('unmute');\n    await this._send(\n      new GenericCommand({\n        op: 'unmute',\n      })\n    );\n    if (!this.transient) {\n      this.muted = false;\n      this.mutedMembers = difference(this.mutedMembers, [this._client.id]);\n    }\n    return this;\n  }\n\n  async _appendConversationSignature(command, action, clientIds) {\n    if (this._client.options.conversationSignatureFactory) {\n      const params = [this.id, this._client.id, clientIds.sort(), action];\n      const signatureResult = await runSignatureFactory(\n        this._client.options.conversationSignatureFactory,\n        params\n      );\n      Object.assign(\n        command.convMessage,\n        keyRemap(\n          {\n            signature: 's',\n            timestamp: 't',\n            nonce: 'n',\n          },\n          signatureResult\n        )\n      );\n    }\n  }\n\n  async _appendBlacklistSignature(command, action, clientIds) {\n    if (this._client.options.blacklistSignatureFactory) {\n      const params = [this.id, this._client.id, clientIds.sort(), action];\n      const signatureResult = await runSignatureFactory(\n        this._client.options.blacklistSignatureFactory,\n        params\n      );\n      Object.assign(\n        command.blacklistMessage,\n        keyRemap(\n          {\n            signature: 's',\n            timestamp: 't',\n            nonce: 'n',\n          },\n          signatureResult\n        )\n      );\n    }\n  }\n\n  /**\n   * 增加成员\n   * @param {String|String[]} clientIds 新增成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async add(clientIds) {\n    this._debug('add', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const command = new GenericCommand({\n      op: 'add',\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    await this._appendConversationSignature(command, 'invite', clientIds);\n    const {\n      convMessage,\n      convMessage: { allowedPids },\n    } = await this._send(command);\n    this._addMembers(allowedPids);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * 剔除成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async remove(clientIds) {\n    this._debug('remove', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const command = new GenericCommand({\n      op: 'remove',\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    await this._appendConversationSignature(command, 'kick', clientIds);\n    const {\n      convMessage,\n      convMessage: { allowedPids },\n    } = await this._send(command);\n    this._removeMembers(allowedPids);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * （当前用户）加入该对话\n   * @return {Promise.<this>} self\n   */\n  async join() {\n    this._debug('join');\n    return this.add(this._client.id).then(({ failures }) => {\n      if (failures[0]) throw failures[0];\n      return this;\n    });\n  }\n\n  /**\n   * （当前用户）退出该对话\n   * @return {Promise.<this>} self\n   */\n  async quit() {\n    this._debug('quit');\n    return this.remove(this._client.id).then(({ failures }) => {\n      if (failures[0]) throw failures[0];\n      return this;\n    });\n  }\n\n  /**\n   * 在该对话中禁言成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async muteMembers(clientIds) {\n    this._debug('mute', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      op: OpType.add_shutup,\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    const { convMessage } = await this._send(command);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * 在该对话中解除成员禁言\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async unmuteMembers(clientIds) {\n    this._debug('unmute', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      op: OpType.remove_shutup,\n      convMessage: new ConvCommand({\n        m: clientIds,\n      }),\n    });\n    const { convMessage } = await this._send(command);\n    return createPartiallySuccess(convMessage);\n  }\n\n  /**\n   * 查询该对话禁言成员列表\n   * @param {Object} [options]\n   * @param {Number} [options.limit] 返回的成员数量，服务器默认值 10\n   * @param {String} [options.next] 从指定 next 开始查询，与 limit 一起使用可以完成翻页。\n   * @return {PagedResults.<string>} 查询结果。其中的 cureser 存在表示还有更多结果。\n   */\n  async queryMutedMembers({ limit, next } = {}) {\n    this._debug('query muted: limit %O, next: %O', limit, next);\n    const command = new GenericCommand({\n      op: OpType.query_shutup,\n      convMessage: new ConvCommand({\n        limit,\n        next,\n      }),\n    });\n    const {\n      convMessage: { m, next: newNext },\n    } = await this._send(command);\n    return {\n      results: m,\n      next: newNext,\n    };\n  }\n\n  /**\n   * 将用户加入该对话黑名单\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async blockMembers(clientIds) {\n    this._debug('block', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      cmd: 'blacklist',\n      op: OpType.block,\n      blacklistMessage: new BlacklistCommand({\n        srcCid: this.id,\n        toPids: clientIds,\n      }),\n    });\n    await this._appendBlacklistSignature(\n      command,\n      'conversation-block-clients',\n      clientIds\n    );\n    const { blacklistMessage } = await this._send(command);\n    return createPartiallySuccess(blacklistMessage);\n  }\n\n  /**\n   * 将用户移出该对话黑名单\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<PartiallySuccess>} 部分成功结果，包含了成功的 id 列表、失败原因与对应的 id 列表\n   */\n  async unblockMembers(clientIds) {\n    this._debug('unblock', clientIds);\n    clientIds = ensureArray(clientIds); // eslint-disable-line no-param-reassign\n    const command = new GenericCommand({\n      cmd: 'blacklist',\n      op: OpType.unblock,\n      blacklistMessage: new BlacklistCommand({\n        srcCid: this.id,\n        toPids: clientIds,\n      }),\n    });\n    await this._appendBlacklistSignature(\n      command,\n      'conversation-unblock-clients',\n      clientIds\n    );\n    const { blacklistMessage } = await this._send(command);\n    return createPartiallySuccess(blacklistMessage);\n  }\n\n  /**\n   * 查询该对话黑名单\n   * @param {Object} [options]\n   * @param {Number} [options.limit] 返回的成员数量，服务器默认值 10\n   * @param {String} [options.next] 从指定 next 开始查询，与 limit 一起使用可以完成翻页\n   * @return {PagedResults.<string>} 查询结果。其中的 cureser 存在表示还有更多结果。\n   */\n  async queryBlockedMembers({ limit, next } = {}) {\n    this._debug('query blocked: limit %O, next: %O', limit, next);\n    const command = new GenericCommand({\n      cmd: 'blacklist',\n      op: OpType.query,\n      blacklistMessage: new BlacklistCommand({\n        srcCid: this.id,\n        limit,\n        next,\n      }),\n    });\n    const {\n      blacklistMessage: { blockedPids, next: newNext },\n    } = await this._send(command);\n    return {\n      results: blockedPids,\n      next: newNext,\n    };\n  }\n\n  toFullJSON() {\n    const {\n      creator,\n      system,\n      transient,\n      createdAt,\n      updatedAt,\n      _attributes,\n    } = this;\n    return {\n      ...super.toFullJSON(),\n      creator,\n      system,\n      transient,\n      createdAt: getTime(createdAt),\n      updatedAt: getTime(updatedAt),\n      ..._attributes,\n    };\n  }\n\n  toJSON() {\n    const {\n      creator,\n      system,\n      transient,\n      muted,\n      mutedMembers,\n      createdAt,\n      updatedAt,\n      _attributes,\n    } = this;\n    return {\n      ...super.toJSON(),\n      creator,\n      system,\n      transient,\n      muted,\n      mutedMembers,\n      createdAt,\n      updatedAt,\n      ..._attributes,\n    };\n  }\n}\n\nexport default PersistentConversation;\n","import { internal } from './utils';\n\n/**\n * 对话成员角色枚举\n * @enum {String}\n * @since 4.0.0\n * @memberof module:leancloud-realtime\n */\nconst ConversationMemberRole = {\n  /** 所有者 */\n  OWNER: 'Owner',\n  /** 管理员 */\n  MANAGER: 'Manager',\n  /** 成员 */\n  MEMBER: 'Member',\n};\nObject.freeze(ConversationMemberRole);\nexport { ConversationMemberRole };\n\nexport default class ConversationMemberInfo {\n  /**\n   * 对话成员属性，保存了成员与某个对话相关的属性，对应 _ConversationMemberInfo 表\n   * @since 4.0.0\n   */\n  constructor({ conversation, memberId, role }) {\n    if (!conversation) throw new Error('conversation requried');\n    if (!memberId) throw new Error('memberId requried');\n    Object.assign(internal(this), {\n      conversation,\n      memberId,\n      role,\n    });\n  }\n\n  /**\n   * 对话 Id\n   * @type {String}\n   * @readonly\n   */\n  get conversationId() {\n    return internal(this).conversation.id;\n  }\n\n  /**\n   * 成员 Id\n   * @type {String}\n   * @readonly\n   */\n  get memberId() {\n    return internal(this).memberId;\n  }\n\n  /**\n   * 角色\n   * @type {module:leancloud-realtime.ConversationMemberRole | String}\n   * @readonly\n   */\n  get role() {\n    if (this.isOwner) return ConversationMemberRole.OWNER;\n    return internal(this).role;\n  }\n\n  /**\n   * 是否是管理员\n   * @type {Boolean}\n   * @readonly\n   */\n  get isOwner() {\n    return this.memberId === internal(this).conversation.creator;\n  }\n\n  toJSON() {\n    const { conversationId, memberId, role, isOwner } = this;\n    return {\n      conversationId,\n      memberId,\n      role,\n      isOwner,\n    };\n  }\n}\n","import PersistentConversation from './persistent-conversation';\nimport ConversationMemberInfo, {\n  ConversationMemberRole,\n} from '../conversation-member-info';\nimport { internal, union, difference } from '../utils';\nimport {\n  GenericCommand,\n  ConvCommand,\n  ConvMemberInfo,\n  OpType,\n} from '../../proto/message';\nimport { createError, ErrorCode } from '../error';\n\n/**\n * 普通对话\n *\n * 无法直接实例化，请使用 {@link IMClient#createConversation} 创建新的普通对话。\n * @extends PersistentConversation\n * @public\n */\nclass Conversation extends PersistentConversation {\n  _addMembers(members) {\n    super._addMembers(members);\n    this.members = union(this.members, members);\n    const { memberInfoMap } = internal(this);\n    if (!memberInfoMap) return;\n    members.forEach(memberId => {\n      memberInfoMap[memberId] =\n        memberInfoMap[memberId] ||\n        new ConversationMemberInfo({\n          conversation: this,\n          memberId,\n          role: ConversationMemberRole.MEMBER,\n        });\n    });\n  }\n\n  _removeMembers(members) {\n    super._removeMembers(members);\n    this.members = difference(this.members, members);\n    const { memberInfoMap } = internal(this);\n    if (!memberInfoMap) return;\n    members.forEach(memberId => {\n      delete memberInfoMap[memberId];\n    });\n  }\n\n  async _fetchAllMemberInfo() {\n    const response = await this._client._requestWithSessionToken({\n      method: 'GET',\n      path: '/classes/_ConversationMemberInfo',\n      query: {\n        where: { cid: this.id },\n      },\n    });\n    const memberInfos = response.results.map(\n      info =>\n        new ConversationMemberInfo({\n          conversation: this,\n          memberId: info.clientId,\n          role: info.role,\n        })\n    );\n    const memberInfoMap = {};\n    memberInfos.forEach(memberInfo => {\n      memberInfoMap[memberInfo.memberId] = memberInfo;\n    });\n    this.members.forEach(memberId => {\n      memberInfoMap[memberId] =\n        memberInfoMap[memberId] ||\n        new ConversationMemberInfo({\n          conversation: this,\n          memberId,\n          role: ConversationMemberRole.MEMBER,\n        });\n    });\n    internal(this).memberInfoMap = memberInfoMap;\n    return memberInfoMap;\n  }\n\n  /**\n   * 获取所有成员的对话属性\n   * @since 4.0.0\n   * @return {Promise.<ConversationMemberInfo[]>} 所有成员的对话属性列表\n   */\n  async getAllMemberInfo({ noCache = false } = {}) {\n    let { memberInfoMap } = internal(this);\n    if (!memberInfoMap || noCache) {\n      memberInfoMap = await this._fetchAllMemberInfo();\n    }\n    return this.members.map(memberId => memberInfoMap[memberId]);\n  }\n\n  /**\n   * 获取指定成员的对话属性\n   * @since 4.0.0\n   * @param {String} memberId 成员 Id\n   * @return {Promise.<ConversationMemberInfo>} 指定成员的对话属性\n   */\n  async getMemberInfo(memberId) {\n    if (this.members.indexOf(memberId) === -1)\n      throw new Error(\n        `${memberId} is not the mumber of conversation[${this.id}]`\n      );\n    const { memberInfoMap } = internal(this);\n    if (!(memberInfoMap && memberInfoMap[memberId]))\n      await this.getAllMemberInfo();\n    return internal(this).memberInfoMap[memberId];\n  }\n\n  /**\n   * 更新指定用户的角色\n   * @since 4.0.0\n   * @param {String} memberId 成员 Id\n   * @param {module:leancloud-realtime.ConversationMemberRole | String} role 角色\n   * @return {Promise.<this>} self\n   */\n  async updateMemberRole(memberId, role) {\n    this._debug('update member role');\n    if (role === ConversationMemberRole.OWNER)\n      throw createError({\n        code: ErrorCode.OWNER_PROMOTION_NOT_ALLOWED,\n      });\n    await this._send(\n      new GenericCommand({\n        op: OpType.member_info_update,\n        convMessage: new ConvCommand({\n          targetClientId: memberId,\n          info: new ConvMemberInfo({\n            pid: memberId,\n            role,\n          }),\n        }),\n      })\n    );\n    const { memberInfos } = internal(this);\n    if (memberInfos && memberInfos[memberId]) {\n      internal(memberInfos[memberId]).role = role;\n    }\n    return this;\n  }\n}\n\nexport default Conversation;\n","import PersistentConversation from './persistent-conversation';\n\n/**\n * 聊天室。\n *\n * 无法直接实例化，请使用 {@link IMClient#createChatRoom} 创建新的聊天室。\n * @since 4.0.0\n * @extends PersistentConversation\n * @public\n */\nclass ChatRoom extends PersistentConversation {}\n\nexport default ChatRoom;\n","import PersistentConversation from './persistent-conversation';\n\n/**\n * 服务号。\n *\n * 服务号不支持在客户端创建。\n * @since 4.0.0\n * @extends PersistentConversation\n * @public\n */\nclass ServiceConversation extends PersistentConversation {\n  /**\n   * 订阅该服务号\n   * @return {Promise.<this>} self\n   */\n  async subscribe() {\n    return this.join();\n  }\n\n  /**\n   * 退订该服务号\n   * @return {Promise.<this>} self\n   */\n  async unsubscribe() {\n    return this.quit();\n  }\n}\n\nexport default ServiceConversation;\n","import ConversationBase from './conversation-base';\nimport { createError, ErrorCode } from '../error';\nimport { decodeDate, getTime } from '../utils';\n\nconst transformNotFoundError = error =>\n  error.code === ErrorCode.CONVERSATION_NOT_FOUND\n    ? createError({ code: ErrorCode.TEMPORARY_CONVERSATION_EXPIRED })\n    : error;\n\n/**\n * 临时对话\n * @since 4.0.0\n * @extends ConversationBase\n * @public\n */\nclass TemporaryConversation extends ConversationBase {\n  /**\n   * 无法直接实例化，请使用 {@link IMClient#createTemporaryConversation} 创建新的临时对话。\n   */\n  constructor(data, { expiredAt }, client) {\n    super(\n      {\n        ...data,\n        expiredAt,\n      },\n      client\n    );\n  }\n\n  /**\n   * 对话失效时间\n   * @type {Date}\n   */\n  set expiredAt(value) {\n    this._expiredAt = decodeDate(value);\n  }\n\n  get expiredAt() {\n    return this._expiredAt;\n  }\n\n  /**\n   * 对话是否已失效\n   * @type {Boolean}\n   */\n  get expired() {\n    return this.expiredAt < new Date();\n  }\n\n  async _send(...args) {\n    if (this.expired)\n      throw createError({ code: ErrorCode.TEMPORARY_CONVERSATION_EXPIRED });\n    try {\n      return await super._send(...args);\n    } catch (error) {\n      throw transformNotFoundError(error);\n    }\n  }\n\n  async send(...args) {\n    try {\n      return await super.send(...args);\n    } catch (error) {\n      throw transformNotFoundError(error);\n    }\n  }\n\n  toFullJSON() {\n    const { expiredAt } = this;\n    return {\n      ...super.toFullJSON(),\n      expiredAt: getTime(expiredAt),\n    };\n  }\n\n  toJSON() {\n    const { expiredAt, expired } = this;\n    return {\n      ...super.toJSON(),\n      expiredAt,\n      expired,\n    };\n  }\n}\n\nexport default TemporaryConversation;\n","import d from 'debug';\n\nconst debug = d('LC:ConversationQuery');\n\nexport default class ConversationQuery {\n  static _encode(value) {\n    if (value instanceof Date) {\n      return { __type: 'Date', iso: value.toJSON() };\n    }\n    if (value instanceof RegExp) {\n      return value.source;\n    }\n    return value;\n  }\n\n  static _quote(s) {\n    return `\\\\Q${s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q')}\\\\E`;\n  }\n\n  static _calculateFlag(options) {\n    return ['withLastMessagesRefreshed', 'compact'].reduce(\n      // eslint-disable-next-line no-bitwise\n      (prev, key) => (prev << 1) + Boolean(options[key]),\n      0\n    );\n  }\n\n  /**\n   * 构造一个用 AND 连接所有查询的 ConversationQuery\n   * @param {...ConversationQuery} queries\n   * @return {ConversationQuery}\n   */\n  static and(...queries) {\n    if (queries.length < 2) {\n      throw new Error('The queries must contain at least two elements');\n    }\n    if (!queries.every(q => q instanceof ConversationQuery)) {\n      throw new Error(\n        'The element of queries must be an instance of ConversationQuery'\n      );\n    }\n    const combined = new ConversationQuery(queries[0]._client);\n    combined._where.$and = queries.map(q => q._where);\n    return combined;\n  }\n\n  /**\n   * 构造一个用 OR 连接所有查询的 ConversationQuery\n   * @param  {...ConversationQuery} queries\n   * @return {ConversationQuery}\n   */\n  static or(...queries) {\n    const combined = ConversationQuery.and(...queries);\n    combined._where.$or = combined._where.$and;\n    delete combined._where.$and;\n    return combined;\n  }\n\n  /**\n   * Create a ConversationQuery\n   * @param  {IMClient} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._where = {};\n    this._extraOptions = {};\n  }\n\n  _addCondition(key, condition, value) {\n    // Check if we already have a condition\n    if (!this._where[key]) {\n      this._where[key] = {};\n    }\n    this._where[key][condition] = this.constructor._encode(value);\n    return this;\n  }\n\n  toJSON() {\n    const json = {\n      where: this._where,\n      flag: this.constructor._calculateFlag(this._extraOptions),\n    };\n    if (typeof this._skip !== 'undefined') json.skip = this._skip;\n    if (typeof this._limit !== 'undefined') json.limit = this._limit;\n    if (typeof this._order !== 'undefined') json.sort = this._order;\n    debug(json);\n    return json;\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员包含某些成员即可返回\n   * @param {string[]} peerIds - 成员 ID 列表\n   * @return {ConversationQuery} self\n   */\n  containsMembers(peerIds) {\n    return this.containsAll('m', peerIds);\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员条件满足条件的才返回\n   *\n   * @param {string[]} - 成员 ID 列表\n   * @param {Boolean} includeSelf - 是否包含自己\n   * @return {ConversationQuery} self\n   */\n  withMembers(peerIds, includeSelf) {\n    const peerIdsSet = new Set(peerIds);\n    if (includeSelf) {\n      peerIdsSet.add(this._client.id);\n    }\n    this.sizeEqualTo('m', peerIdsSet.size);\n    return this.containsMembers(Array.from(peerIdsSet));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  equalTo(key, value) {\n    this._where[key] = this.constructor._encode(value);\n    return this;\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于条件时即可返回\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThan(key, value) {\n    return this._addCondition(key, '$lt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于等于条件时即可返回\n\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$lte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThan(key, value) {\n    return this._addCondition(key, '$gt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$gte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足不等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  notEqualTo(key, value) {\n    return this._addCondition(key, '$ne', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  exists(key) {\n    return this._addCondition(key, '$exists', true);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 不存在指定的字段时即可返回\n   *\n   * @since 3.5.0\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  doesNotExist(key) {\n    return this._addCondition(key, '$exists', false);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containedIn(key, values) {\n    return this._addCondition(key, '$in', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值不包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  notContainsIn(key, values) {\n    return this._addCondition(key, '$nin', values);\n  }\n\n  /**\n   * 增加查询条件，当conversation的属性中对应的字段中的元素包含所有的值才可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containsAll(key, values) {\n    return this._addCondition(key, '$all', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含此字符串即可返回\n   *\n   * @param {string} key\n   * @param {string} subString\n   * @return {ConversationQuery} self\n   */\n  contains(key, subString) {\n    return this._addCondition(\n      key,\n      '$regex',\n      ConversationQuery._quote(subString)\n    );\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串起始即可返回\n   *\n   * @param {string} key\n   * @param {string} prefix\n   * @return {ConversationQuery} self\n   */\n  startsWith(key, prefix) {\n    return this._addCondition(\n      key,\n      '$regex',\n      `^${ConversationQuery._quote(prefix)}`\n    );\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串结束即可返回\n   *\n   * @param {string} key\n   * @param {string} suffix\n   * @return {ConversationQuery} self\n   */\n  endsWith(key, suffix) {\n    return this._addCondition(\n      key,\n      '$regex',\n      `${ConversationQuery._quote(suffix)}$`\n    );\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值满足提供的正则表达式即可返回\n   *\n   * @param {string} key\n   * @param {RegExp} regex\n   * @return {ConversationQuery} self\n   */\n  matches(key, regex) {\n    this._addCondition(key, '$regex', regex);\n    // Javascript regex options support mig as inline options but store them\n    // as properties of the object. We support mi & should migrate them to\n    // modifiers\n    let _modifiers = '';\n    if (regex.ignoreCase) {\n      _modifiers += 'i';\n    }\n    if (regex.multiline) {\n      _modifiers += 'm';\n    }\n\n    if (_modifiers && _modifiers.length) {\n      this._addCondition(key, '$options', _modifiers);\n    }\n    return this;\n  }\n\n  /**\n   * 添加查询约束条件，查找 key 类型是数组，该数组的长度匹配提供的数值\n   *\n   * @param {string} key\n   * @param {Number} length\n   * @return {ConversationQuery} self\n   */\n  sizeEqualTo(key, length) {\n    return this._addCondition(key, '$size', length);\n  }\n\n  /**\n   * 设置返回集合的大小上限\n   *\n   * @param {Number} limit - 上限\n   * @return {ConversationQuery} self\n   */\n  limit(limit) {\n    this._limit = limit;\n    return this;\n  }\n\n  /**\n   * 设置返回集合的起始位置，一般用于分页\n   *\n   * @param {Number} skip - 起始位置跳过几个对象\n   * @return {ConversationQuery} self\n   */\n  skip(skip) {\n    this._skip = skip;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  ascending(key) {\n    this._order = key;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addAscending(key) {\n    if (this._order) {\n      this._order += `,${key}`;\n    } else {\n      this._order = key;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  descending(key) {\n    this._order = `-${key}`;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addDescending(key) {\n    if (this._order) {\n      this._order += `,-${key}`;\n    } else {\n      this._order = `-${key}`;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 刷新最后一条消息\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessagesRefreshed(enabled = true) {\n    this._extraOptions.withLastMessagesRefreshed = enabled;\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 为精简模式，即不含成员列表\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  compact(enabled = true) {\n    this._extraOptions.compact = enabled;\n    return this;\n  }\n\n  /**\n   * 执行查询\n   * @return {Promise.<ConversationBase[]>}\n   */\n  async find() {\n    return this._client._executeQuery(this);\n  }\n\n  /**\n   * 返回符合条件的第一个结果\n   * @return {Promise.<ConversationBase>}\n   */\n  async first() {\n    return (await this.limit(1).find())[0];\n  }\n}\n","import d from 'debug';\nimport { Expirable } from './utils';\n\nconst debug = d('LC:SessionManager');\n\nexport default class SessionManager {\n  constructor({ refresh, onBeforeGetSessionToken } = {}) {\n    this.refresh = refresh;\n    this._onBeforeGetSessionToken = onBeforeGetSessionToken;\n    this.setSessionToken(null, 0);\n  }\n\n  setSessionToken(token, ttl) {\n    debug('set session token', token, ttl);\n    const sessionToken = new Expirable(token, ttl * 1000);\n    this._sessionToken = sessionToken;\n    delete this._pendingSessionTokenPromise;\n    return sessionToken;\n  }\n\n  async setSessionTokenAsync(promise) {\n    const currentSessionToken = this._sessionToken;\n    this._pendingSessionTokenPromise = promise.catch(error => {\n      // revert, otherwise the following getSessionToken calls\n      // will all be rejected\n      this._sessionToken = currentSessionToken;\n      throw error;\n    });\n    return this.setSessionToken(...(await this._pendingSessionTokenPromise));\n  }\n\n  async getSessionToken({ autoRefresh = true } = {}) {\n    debug('get session token');\n    if (this._onBeforeGetSessionToken) {\n      this._onBeforeGetSessionToken(this);\n    }\n    const { value, originalValue } =\n      this._sessionToken || (await this._pendingSessionTokenPromise);\n    if (value === Expirable.EXPIRED && autoRefresh && this.refresh) {\n      debug('refresh expired session token');\n      const { value: newValue } = await this.setSessionTokenAsync(\n        this.refresh(this, originalValue)\n      );\n      debug('session token', newValue);\n      return newValue;\n    }\n    debug('session token', value);\n    return value;\n  }\n\n  revoke() {\n    if (this._sessionToken) this._sessionToken.expiredAt = -1;\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport { decode as decodeBase64 } from 'base64-arraybuffer';\nimport remove from 'lodash/remove';\nimport values from 'lodash/values';\nimport d from 'debug';\nimport {\n  Conversation,\n  ChatRoom,\n  ServiceConversation,\n  TemporaryConversation,\n} from './conversations';\nimport ConversationBase from './conversations/conversation-base';\nimport ConversationQuery from './conversation-query';\nimport {\n  GenericCommand,\n  SessionCommand,\n  ConvCommand,\n  AckCommand,\n  JsonObjectMessage,\n  ReadCommand,\n  ReadTuple,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport * as Event from './events/im';\nimport { ErrorCode, createError } from './error';\nimport {\n  Expirable,\n  Cache,\n  keyRemap,\n  trim,\n  internal,\n  throttle,\n  encode,\n  decode,\n  decodeDate,\n  getTime,\n} from './utils';\nimport { applyDecorators, applyDispatcher } from './plugin';\nimport SessionManager from './session-manager';\nimport runSignatureFactory from './signature-factory-runner';\nimport { MessageStatus } from './messages/message';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:IMClient');\n\nconst {\n  INVITED,\n  KICKED,\n  MEMBERS_JOINED,\n  MEMBERS_LEFT,\n  MEMBER_INFO_UPDATED,\n  BLOCKED,\n  UNBLOCKED,\n  MEMBERS_BLOCKED,\n  MEMBERS_UNBLOCKED,\n  MUTED,\n  UNMUTED,\n  MEMBERS_MUTED,\n  MEMBERS_UNMUTED,\n  MESSAGE,\n  UNREAD_MESSAGES_COUNT_UPDATE,\n  CLOSE,\n  CONFLICT,\n  UNHANDLED_MESSAGE,\n  CONVERSATION_INFO_UPDATED,\n  MESSAGE_RECALL,\n  MESSAGE_UPDATE,\n  INFO_UPDATED,\n} = Event;\n\nconst isTemporaryConversatrionId = id => /^_tmp:/.test(id);\n\n/**\n * 1 patch-msg\n * 1 temp-conv-msg\n * 0 auto-bind-deviceid-and-installation\n * 1 transient-msg-ack\n * 1 keep-notification\n * 1 partial-failed-msg\n * 0 group-chat-rcp\n * 1 omit-peer-id\n * @ignore\n */\nconst configBitmap = 0b10111011;\n\nexport default class IMClient extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link Realtime#createIMClient} 创建新的 IMClient。\n   *\n   * @extends EventEmitter\n   */\n  constructor(id, options = {}, props) {\n    if (!(id === undefined || typeof id === 'string')) {\n      throw new TypeError(`Client id [${id}] is not a String`);\n    }\n    super();\n    Object.assign(\n      this,\n      {\n        /**\n         * @var id {String} 客户端 id\n         * @memberof IMClient#\n         */\n        id,\n        options,\n      },\n      props\n    );\n\n    if (!this._messageParser) {\n      throw new Error('IMClient must be initialized with a MessageParser');\n    }\n    this._conversationCache = new Cache(`client:${this.id}`);\n    this._ackMessageBuffer = {};\n    internal(this).lastPatchTime = Date.now();\n    internal(this).lastNotificationTime = undefined;\n    internal(this)._eventemitter = new EventEmitter();\n    if (debug.enabled) {\n      values(Event).forEach(event =>\n        this.on(event, (...payload) =>\n          this._debug(`${event} event emitted. %o`, payload)\n        )\n      );\n    }\n    // onIMClientCreate hook\n    applyDecorators(this._plugins.onIMClientCreate, this);\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  async _dispatchCommand(command) {\n    this._debug(trim(command), 'received');\n    if (command.serverTs && command.notificationType === 1) {\n      internal(this).lastNotificationTime = getTime(\n        decodeDate(command.serverTs)\n      );\n    }\n    switch (command.cmd) {\n      case CommandType.conv:\n        return this._dispatchConvMessage(command);\n      case CommandType.direct:\n        return this._dispatchDirectMessage(command);\n      case CommandType.session:\n        return this._dispatchSessionMessage(command);\n      case CommandType.unread:\n        return this._dispatchUnreadMessage(command);\n      case CommandType.rcp:\n        return this._dispatchRcpMessage(command);\n      case CommandType.patch:\n        return this._dispatchPatchMessage(command);\n      default:\n        return this.emit(UNHANDLED_MESSAGE, command);\n    }\n  }\n\n  async _dispatchSessionMessage(message) {\n    const {\n      sessionMessage: { code, reason },\n    } = message;\n    switch (message.op) {\n      case OpType.closed: {\n        internal(this)._eventemitter.emit('close');\n        if (code === ErrorCode.SESSION_CONFLICT) {\n          /**\n           * 用户在其他客户端登录，当前客户端被服务端强行下线。详见文档「单点登录」章节。\n           * @event IMClient#CONFLICT\n           * @param {Object} payload\n           * @param {string} payload.reason 原因\n           */\n          return this.emit(CONFLICT, {\n            reason,\n          });\n        }\n        /**\n         * 当前客户端被服务端强行下线\n         * @event IMClient#CLOSE\n         * @param {Object} payload\n         * @param {Number} payload.code 错误码\n         * @param {String} payload.reason 原因\n         */\n        return this.emit(CLOSE, {\n          code,\n          reason,\n        });\n      }\n      default:\n        this.emit(UNHANDLED_MESSAGE, message);\n        throw new Error('Unrecognized session command');\n    }\n  }\n\n  _dispatchUnreadMessage({ unreadMessage: { convs, notifTime } }) {\n    internal(this).lastUnreadNotifTime = notifTime;\n    // ensure all converstions are cached\n    return this.getConversations(convs.map(conv => conv.cid))\n      .then(() =>\n        // update conversations data\n        Promise.all(\n          convs.map(\n            ({\n              cid,\n              unread,\n              mid,\n              timestamp: ts,\n              from,\n              data,\n              binaryMsg,\n              patchTimestamp,\n              mentioned,\n            }) => {\n              const conversation = this._conversationCache.get(cid);\n              // deleted conversation\n              if (!conversation) return null;\n              let timestamp;\n              if (ts) {\n                timestamp = decodeDate(ts);\n                conversation.lastMessageAt = timestamp; // eslint-disable-line no-param-reassign\n              }\n              return (mid\n                ? this._messageParser.parse(binaryMsg || data).then(message => {\n                    const messageProps = {\n                      id: mid,\n                      cid,\n                      timestamp,\n                      updatedAt: patchTimestamp,\n                      from,\n                    };\n                    Object.assign(message, messageProps);\n                    conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n                  })\n                : Promise.resolve()\n              ).then(() => {\n                conversation._setUnreadMessagesMentioned(mentioned);\n                const countNotUpdated =\n                  unread === internal(conversation).unreadMessagesCount;\n                if (countNotUpdated) return null; // to be filtered\n                // manipulate internal property directly to skip unreadmessagescountupdate event\n                internal(conversation).unreadMessagesCount = unread;\n                return conversation;\n              });\n              // filter conversations without unread count update\n            }\n          )\n        ).then(conversations =>\n          conversations.filter(conversation => conversation)\n        )\n      )\n      .then(conversations => {\n        if (conversations.length) {\n          /**\n           * 未读消息数目更新\n           * @event IMClient#UNREAD_MESSAGES_COUNT_UPDATE\n           * @since 3.4.0\n           * @param {Conversation[]} conversations 未读消息数目有更新的对话列表\n           */\n          this.emit(UNREAD_MESSAGES_COUNT_UPDATE, conversations);\n        }\n      });\n  }\n\n  async _dispatchRcpMessage(message) {\n    const {\n      rcpMessage,\n      rcpMessage: { read },\n    } = message;\n    const conversationId = rcpMessage.cid;\n    const messageId = rcpMessage.id;\n    const timestamp = decodeDate(rcpMessage.t);\n    const conversation = this._conversationCache.get(conversationId);\n    // conversation not cached means the client does not send the message\n    // during this session\n    if (!conversation) return;\n    conversation._handleReceipt({ messageId, timestamp, read });\n  }\n\n  _dispatchPatchMessage({ patchMessage: { patches } }) {\n    // ensure all converstions are cached\n    return this.getConversations(patches.map(patch => patch.cid)).then(() =>\n      Promise.all(\n        patches.map(\n          ({\n            cid,\n            mid,\n            timestamp,\n            recall,\n            data,\n            patchTimestamp,\n            from,\n            binaryMsg,\n            mentionAll,\n            mentionPids,\n            patchCode,\n            patchReason,\n          }) => {\n            const conversation = this._conversationCache.get(cid);\n            // deleted conversation\n            if (!conversation) return null;\n            return this._messageParser\n              .parse(binaryMsg || data)\n              .then(message => {\n                const patchTime = getTime(decodeDate(patchTimestamp));\n                const messageProps = {\n                  id: mid,\n                  cid,\n                  timestamp,\n                  updatedAt: patchTime,\n                  from,\n                  mentionList: mentionPids,\n                  mentionedAll: mentionAll,\n                };\n                Object.assign(message, messageProps);\n                message._setStatus(MessageStatus.SENT);\n                message._updateMentioned(this.id);\n                if (internal(this).lastPatchTime < patchTime) {\n                  internal(this).lastPatchTime = patchTime;\n                }\n                // update conversation lastMessage\n                if (\n                  conversation.lastMessage &&\n                  conversation.lastMessage.id === mid\n                ) {\n                  conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n                }\n                let reason;\n                if (patchCode) {\n                  reason = {\n                    code: patchCode.toNumber(),\n                    detail: patchReason,\n                  };\n                }\n                if (recall) {\n                  /**\n                   * 消息被撤回\n                   * @event IMClient#MESSAGE_RECALL\n                   * @param {AVMessage} message 被撤回的消息\n                   * @param {ConversationBase} conversation 消息所在的会话\n                   * @param {PatchReason} [reason] 撤回的原因，不存在代表是发送者主动撤回\n                   */\n                  this.emit(MESSAGE_RECALL, message, conversation, reason);\n                  /**\n                   * 消息被撤回\n                   * @event ConversationBase#MESSAGE_RECALL\n                   * @param {AVMessage} message 被撤回的消息\n                   * @param {PatchReason} [reason] 撤回的原因，不存在代表是发送者主动撤回\n                   */\n                  conversation.emit(MESSAGE_RECALL, message, reason);\n                } else {\n                  /**\n                   * 消息被修改\n                   * @event IMClient#MESSAGE_UPDATE\n                   * @param {AVMessage} message 被修改的消息\n                   * @param {ConversationBase} conversation 消息所在的会话\n                   * @param {PatchReason} [reason] 修改的原因，不存在代表是发送者主动修改\n                   */\n                  this.emit(MESSAGE_UPDATE, message, conversation, reason);\n                  /**\n                   * 消息被修改\n                   * @event ConversationBase#MESSAGE_UPDATE\n                   * @param {AVMessage} message 被修改的消息\n                   * @param {PatchReason} [reason] 修改的原因，不存在代表是发送者主动修改\n                   */\n                  conversation.emit(MESSAGE_UPDATE, message, reason);\n                }\n              });\n          }\n        )\n      )\n    );\n  }\n\n  async _dispatchConvMessage(message) {\n    const {\n      convMessage,\n      convMessage: { initBy, m, info, attr },\n    } = message;\n    const conversation = await this.getConversation(convMessage.cid);\n    switch (message.op) {\n      case OpType.joined: {\n        conversation._addMembers([this.id]);\n        const payload = {\n          invitedBy: initBy,\n        };\n        /**\n         * 当前用户被添加至某个对话\n         * @event IMClient#INVITED\n         * @param {Object} payload\n         * @param {String} payload.invitedBy 邀请者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(INVITED, payload, conversation);\n        /**\n         * 当前用户被添加至当前对话\n         * @event ConversationBase#INVITED\n         * @param {Object} payload\n         * @param {String} payload.invitedBy 该移除操作的发起者 id\n         */\n        conversation.emit(INVITED, payload);\n        return;\n      }\n      case OpType.left: {\n        conversation._removeMembers([this.id]);\n        const payload = {\n          kickedBy: initBy,\n        };\n        /**\n         * 当前用户被从某个对话中移除\n         * @event IMClient#KICKED\n         * @param {Object} payload\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(KICKED, payload, conversation);\n        /**\n         * 当前用户被从当前对话中移除\n         * @event ConversationBase#KICKED\n         * @param {Object} payload\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         */\n        conversation.emit(KICKED, payload);\n        return;\n      }\n      case OpType.members_joined: {\n        conversation._addMembers(m);\n        const payload = {\n          invitedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有用户被添加至某个对话\n         * @event IMClient#MEMBERS_JOINED\n         * @param {Object} payload\n         * @param {String[]} payload.members 被添加的用户 id 列表\n         * @param {String} payload.invitedBy 邀请者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_JOINED, payload, conversation);\n        /**\n         * 有成员被添加至当前对话\n         * @event ConversationBase#MEMBERS_JOINED\n         * @param {Object} payload\n         * @param {String[]} payload.members 被添加的成员 id 列表\n         * @param {String} payload.invitedBy 邀请者 id\n         */\n        conversation.emit(MEMBERS_JOINED, payload);\n        return;\n      }\n      case OpType.members_left: {\n        conversation._removeMembers(m);\n        const payload = {\n          kickedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被从某个对话中移除\n         * @event IMClient#MEMBERS_LEFT\n         * @param {Object} payload\n         * @param {String[]} payload.members 被移除的成员 id 列表\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_LEFT, payload, conversation);\n        /**\n         * 有成员被从当前对话中移除\n         * @event ConversationBase#MEMBERS_LEFT\n         * @param {Object} payload\n         * @param {String[]} payload.members 被移除的成员 id 列表\n         * @param {String} payload.kickedBy 该移除操作的发起者 id\n         */\n        conversation.emit(MEMBERS_LEFT, payload);\n        return;\n      }\n      case OpType.members_blocked: {\n        const payload = {\n          blockedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被加入某个对话的黑名单\n         * @event IMClient#MEMBERS_BLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_BLOCKED, payload, conversation);\n        /**\n         * 有成员被加入当前对话的黑名单\n         * @event ConversationBase#MEMBERS_BLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_BLOCKED, payload);\n        return;\n      }\n      case OpType.members_unblocked: {\n        const payload = {\n          unblockedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员被移出某个对话的黑名单\n         * @event IMClient#MEMBERS_UNBLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_UNBLOCKED, payload, conversation);\n        /**\n         * 有成员被移出当前对话的黑名单\n         * @event ConversationBase#MEMBERS_UNBLOCKED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_UNBLOCKED, payload);\n        return;\n      }\n      case OpType.blocked: {\n        const payload = {\n          blockedBy: initBy,\n        };\n        /**\n         * 当前用户被加入某个对话的黑名单\n         * @event IMClient#BLOCKED\n         * @param {Object} payload\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(BLOCKED, payload, conversation);\n        /**\n         * 当前用户被加入当前对话的黑名单\n         * @event ConversationBase#BLOCKED\n         * @param {Object} payload\n         * @param {String} payload.blockedBy 该操作的发起者 id\n         */\n        conversation.emit(BLOCKED, payload);\n        return;\n      }\n      case OpType.unblocked: {\n        const payload = {\n          unblockedBy: initBy,\n        };\n        /**\n         * 当前用户被移出某个对话的黑名单\n         * @event IMClient#UNBLOCKED\n         * @param {Object} payload\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(UNBLOCKED, payload, conversation);\n        /**\n         * 当前用户被移出当前对话的黑名单\n         * @event ConversationBase#UNBLOCKED\n         * @param {Object} payload\n         * @param {String} payload.unblockedBy 该操作的发起者 id\n         */\n        conversation.emit(UNBLOCKED, payload);\n        return;\n      }\n      case OpType.members_shutuped: {\n        const payload = {\n          mutedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员在某个对话中被禁言\n         * @event IMClient#MEMBERS_MUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_MUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被禁言\n         * @event ConversationBase#MEMBERS_MUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_MUTED, payload);\n        return;\n      }\n      case OpType.members_unshutuped: {\n        const payload = {\n          unmutedBy: initBy,\n          members: m,\n        };\n        /**\n         * 有成员在某个对话中被解除禁言\n         * @event IMClient#MEMBERS_UNMUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBERS_UNMUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被解除禁言\n         * @event ConversationBase#MEMBERS_UNMUTED\n         * @param {Object} payload\n         * @param {String[]} payload.members 成员 id 列表\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBERS_UNMUTED, payload);\n        return;\n      }\n      case OpType.shutuped: {\n        const payload = {\n          mutedBy: initBy,\n        };\n        /**\n         * 有成员在某个对话中被禁言\n         * @event IMClient#MUTED\n         * @param {Object} payload\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被禁言\n         * @event ConversationBase#MUTED\n         * @param {Object} payload\n         * @param {String} payload.mutedBy 该操作的发起者 id\n         */\n        conversation.emit(MUTED, payload);\n        return;\n      }\n      case OpType.unshutuped: {\n        const payload = {\n          unmutedBy: initBy,\n        };\n        /**\n         * 有成员在某个对话中被解除禁言\n         * @event IMClient#UNMUTED\n         * @param {Object} payload\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(UNMUTED, payload, conversation);\n        /**\n         * 有成员在当前对话中被解除禁言\n         * @event ConversationBase#UNMUTED\n         * @param {Object} payload\n         * @param {String} payload.unmutedBy 该操作的发起者 id\n         */\n        conversation.emit(UNMUTED, payload);\n        return;\n      }\n      case OpType.member_info_changed: {\n        const { pid, role } = info;\n        const { memberInfoMap } = internal(conversation);\n        // 如果不存在缓存，且不是 role 的更新，则不通知\n        if (!memberInfoMap && !role) return;\n        const memberInfo = await conversation.getMemberInfo(pid);\n        internal(memberInfo).role = role;\n        const payload = {\n          member: pid,\n          memberInfo,\n          updatedBy: initBy,\n        };\n        /**\n         * 有成员的对话信息被更新\n         * @event IMClient#MEMBER_INFO_UPDATED\n         * @param {Object} payload\n         * @param {String} payload.member 被更新对话信息的成员 id\n         * @param {ConversationMumberInfo} payload.memberInfo 被更新的成员对话信息\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(MEMBER_INFO_UPDATED, payload, conversation);\n        /**\n         * 有成员的对话信息被更新\n         * @event ConversationBase#MEMBER_INFO_UPDATED\n         * @param {Object} payload\n         * @param {String} payload.member 被更新对话信息的成员 id\n         * @param {ConversationMumberInfo} payload.memberInfo 被更新的成员对话信息\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         */\n        conversation.emit(MEMBER_INFO_UPDATED, payload);\n        return;\n      }\n      case OpType.updated: {\n        const attributes = decode(JSON.parse(attr.data));\n        conversation._updateServerAttributes(attributes);\n        const payload = {\n          attributes,\n          updatedBy: initBy,\n        };\n        /**\n         * 该对话信息被更新\n         * @event IMClient#CONVERSATION_INFO_UPDATED\n         * @param {Object} payload\n         * @param {Object} payload.attributes 被更新的属性\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         * @param {ConversationBase} conversation\n         */\n        this.emit(CONVERSATION_INFO_UPDATED, payload, conversation);\n        /**\n         * 有对话信息被更新\n         * @event ConversationBase#INFO_UPDATED\n         * @param {Object} payload\n         * @param {Object} payload.attributes 被更新的属性\n         * @param {String} payload.updatedBy 该操作的发起者 id\n         */\n        conversation.emit(INFO_UPDATED, payload);\n        return;\n      }\n      default:\n        this.emit(UNHANDLED_MESSAGE, message);\n        throw new Error('Unrecognized conversation command');\n    }\n  }\n\n  _dispatchDirectMessage(originalMessage) {\n    const {\n      directMessage,\n      directMessage: {\n        id,\n        cid,\n        fromPeerId,\n        timestamp,\n        transient,\n        patchTimestamp,\n        mentionPids,\n        mentionAll,\n        binaryMsg,\n        msg,\n      },\n    } = originalMessage;\n    const content = binaryMsg ? binaryMsg.toArrayBuffer() : msg;\n    return Promise.all([\n      this.getConversation(directMessage.cid),\n      this._messageParser.parse(content),\n    ]).then(([conversation, message]) => {\n      // deleted conversation\n      if (!conversation) return undefined;\n      const messageProps = {\n        id,\n        cid,\n        timestamp,\n        updatedAt: patchTimestamp,\n        from: fromPeerId,\n        mentionList: mentionPids,\n        mentionedAll: mentionAll,\n      };\n      Object.assign(message, messageProps);\n      message._updateMentioned(this.id);\n      message._setStatus(MessageStatus.SENT);\n      // filter outgoing message sent from another device\n      if (message.from !== this.id) {\n        if (!(transient || conversation.transient)) {\n          this._sendAck(message);\n        }\n      }\n      return this._dispatchParsedMessage(message, conversation);\n    });\n  }\n\n  _dispatchParsedMessage(message, conversation) {\n    // beforeMessageDispatch hook\n    return applyDispatcher(this._plugins.beforeMessageDispatch, [\n      message,\n      conversation,\n    ]).then(shouldDispatch => {\n      if (shouldDispatch === false) return;\n      conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n      conversation.lastMessageAt = message.timestamp; // eslint-disable-line no-param-reassign\n      // filter outgoing message sent from another device\n      if (message.from !== this.id) {\n        conversation.unreadMessagesCount += 1; // eslint-disable-line no-param-reassign\n        if (message.mentioned) conversation._setUnreadMessagesMentioned(true);\n      }\n      /**\n       * 当前用户收到消息\n       * @event IMClient#MESSAGE\n       * @param {Message} message\n       * @param {ConversationBase} conversation 收到消息的对话\n       */\n      this.emit(MESSAGE, message, conversation);\n      /**\n       * 当前对话收到消息\n       * @event ConversationBase#MESSAGE\n       * @param {Message} message\n       */\n      conversation.emit(MESSAGE, message);\n    });\n  }\n\n  _sendAck(message) {\n    this._debug('send ack for %O', message);\n    const { cid } = message;\n    if (!cid) {\n      throw new Error('missing cid');\n    }\n    if (!this._ackMessageBuffer[cid]) {\n      this._ackMessageBuffer[cid] = [];\n    }\n    this._ackMessageBuffer[cid].push(message);\n    return this._doSendAck();\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendAck() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    this._debug('do send ack %O', this._ackMessageBuffer);\n    Promise.all(\n      Object.keys(this._ackMessageBuffer).map(cid => {\n        const convAckMessages = this._ackMessageBuffer[cid];\n        const timestamps = convAckMessages.map(message => message.timestamp);\n        const command = new GenericCommand({\n          cmd: 'ack',\n          ackMessage: new AckCommand({\n            cid,\n            fromts: Math.min.apply(null, timestamps),\n            tots: Math.max.apply(null, timestamps),\n          }),\n        });\n        delete this._ackMessageBuffer[cid];\n        return this._send(command, false).catch(error => {\n          this._debug('send ack failed: %O', error);\n          this._ackMessageBuffer[cid] = convAckMessages;\n        });\n      })\n    );\n  }\n\n  _omitPeerId(value) {\n    internal(this).peerIdOmittable = value;\n  }\n\n  _send(cmd, ...args) {\n    const command = cmd;\n    if (!internal(this).peerIdOmittable && this.id) {\n      command.peerId = this.id;\n    }\n    return this._connection.send(command, ...args);\n  }\n\n  async _open(appId, tag, deviceId, isReconnect = false) {\n    this._debug('open session');\n    const {\n      lastUnreadNotifTime,\n      lastPatchTime,\n      lastNotificationTime,\n    } = internal(this);\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'open',\n      appId,\n      peerId: this.id,\n      sessionMessage: new SessionCommand({\n        ua: `js/${VERSION}`,\n        r: isReconnect,\n        lastUnreadNotifTime,\n        lastPatchTime,\n        configBitmap,\n      }),\n    });\n    if (!isReconnect) {\n      Object.assign(\n        command.sessionMessage,\n        trim({\n          tag,\n          deviceId,\n        })\n      );\n      if (this.options.signatureFactory) {\n        const signatureResult = await runSignatureFactory(\n          this.options.signatureFactory,\n          [this._identity]\n        );\n        Object.assign(\n          command.sessionMessage,\n          keyRemap(\n            {\n              signature: 's',\n              timestamp: 't',\n              nonce: 'n',\n            },\n            signatureResult\n          )\n        );\n      }\n    } else {\n      const sessionToken = await this._sessionManager.getSessionToken({\n        autoRefresh: false,\n      });\n      if (sessionToken && sessionToken !== Expirable.EXPIRED) {\n        Object.assign(command.sessionMessage, {\n          st: sessionToken,\n        });\n      }\n    }\n    let resCommand;\n    try {\n      resCommand = await this._send(command);\n    } catch (error) {\n      if (error.code === ErrorCode.SESSION_TOKEN_EXPIRED) {\n        if (!this._sessionManager) {\n          // let it fail if sessoinToken not cached but command rejected as token expired\n          // to prevent session openning flood\n          throw new Error('Unexpected session expiration');\n        }\n        debug('Session token expired, reopening');\n        this._sessionManager.revoke();\n        return this._open(appId, tag, deviceId, isReconnect);\n      }\n      throw error;\n    }\n    const {\n      peerId,\n      sessionMessage,\n      sessionMessage: { st: token, stTtl: tokenTTL, code },\n      serverTs,\n    } = resCommand;\n    if (code) {\n      throw createError(sessionMessage);\n    }\n    if (peerId) {\n      this.id = peerId;\n      if (!this._identity) this._identity = peerId;\n      if (token) {\n        this._sessionManager =\n          this._sessionManager || this._createSessionManager();\n        this._sessionManager.setSessionToken(token, tokenTTL);\n      }\n      const serverTime = getTime(decodeDate(serverTs));\n      if (serverTs) {\n        internal(this).lastPatchTime = serverTime;\n      }\n      if (lastNotificationTime) {\n        // Do not await for it as this is failable\n        this._syncNotifications(lastNotificationTime).catch(error =>\n          console.warn('Syncing notifications failed:', error)\n        );\n      } else {\n        // Set timestamp to now for next reconnection\n        internal(this).lastNotificationTime = serverTime;\n      }\n    } else {\n      console.warn('Unexpected session opened without peerId.');\n    }\n    return undefined;\n  }\n\n  async _syncNotifications(timestamp) {\n    const { hasMore, notifications } = await this._fetchNotifications(\n      timestamp\n    );\n    notifications.forEach(notification => {\n      const { cmd, op, serverTs, notificationType, ...payload } = notification;\n      this._dispatchCommand({\n        cmd: CommandType[cmd],\n        op: OpType[op],\n        serverTs,\n        notificationType,\n        [`${cmd}Message`]: payload,\n      });\n    });\n    if (hasMore) {\n      return this._syncNotifications(internal(this).lastNotificationTime);\n    }\n    return undefined;\n  }\n\n  async _fetchNotifications(timestamp) {\n    return this._requestWithSessionToken({\n      method: 'GET',\n      path: '/rtm/notifications',\n      query: {\n        start_ts: timestamp,\n        notification_type: 'permanent',\n      },\n    });\n  }\n\n  _createSessionManager() {\n    debug('create SessionManager');\n    return new SessionManager({\n      onBeforeGetSessionToken: this._connection.checkConnectionAvailability.bind(\n        this._connection\n      ),\n      refresh: (manager, expiredSessionToken) =>\n        manager.setSessionTokenAsync(\n          Promise.resolve(\n            new GenericCommand({\n              cmd: 'session',\n              op: 'refresh',\n              sessionMessage: new SessionCommand({\n                ua: `js/${VERSION}`,\n                st: expiredSessionToken,\n              }),\n            })\n          )\n            .then(async command => {\n              if (this.options.signatureFactory) {\n                const signatureResult = await runSignatureFactory(\n                  this.options.signatureFactory,\n                  [this._identity]\n                );\n                Object.assign(\n                  command.sessionMessage,\n                  keyRemap(\n                    {\n                      signature: 's',\n                      timestamp: 't',\n                      nonce: 'n',\n                    },\n                    signatureResult\n                  )\n                );\n              }\n              return command;\n            })\n            .then(this._send.bind(this))\n            .then(({ sessionMessage: { st: token, stTtl: ttl } }) => [\n              token,\n              ttl,\n            ])\n        ),\n    });\n  }\n\n  async _requestWithSessionToken({ headers, query, ...params }) {\n    const sessionToken = await this._sessionManager.getSessionToken();\n    return this._request({\n      headers: {\n        'X-LC-IM-Session-Token': sessionToken,\n        ...headers,\n      },\n      query: {\n        client_id: this.id,\n        ...query,\n      },\n      ...params,\n    });\n  }\n\n  /**\n   * 关闭客户端\n   * @return {Promise}\n   */\n  async close() {\n    this._debug('close session');\n    const _ee = internal(this)._eventemitter;\n    _ee.emit('beforeclose');\n    if (this._connection.is('connected')) {\n      const command = new GenericCommand({\n        cmd: 'session',\n        op: 'close',\n      });\n      await this._send(command);\n    }\n    _ee.emit('close');\n    this.emit(CLOSE, {\n      code: 0,\n    });\n  }\n\n  /**\n   * 获取 client 列表中在线的 client，每次查询最多 20 个 clientId，超出部分会被忽略\n   * @param  {String[]} clientIds 要查询的 client ids\n   * @return {Primse.<String[]>} 在线的 client ids\n   */\n  async ping(clientIds) {\n    this._debug('ping');\n    if (!(clientIds instanceof Array)) {\n      throw new TypeError(`clientIds ${clientIds} is not an Array`);\n    }\n    if (!clientIds.length) {\n      return Promise.resolve([]);\n    }\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'query',\n      sessionMessage: new SessionCommand({\n        sessionPeerIds: clientIds,\n      }),\n    });\n    const resCommand = await this._send(command);\n    return resCommand.sessionMessage.onlineSessionPeerIds;\n  }\n\n  /**\n   * 获取某个特定的对话\n   * @param  {String} id 对话 id，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<ConversationBase>} 如果 id 对应的对话不存在则返回 null\n   */\n  async getConversation(id, noCache = false) {\n    if (typeof id !== 'string') {\n      throw new TypeError(`${id} is not a String`);\n    }\n    if (!noCache) {\n      const cachedConversation = this._conversationCache.get(id);\n      if (cachedConversation) {\n        return cachedConversation;\n      }\n    }\n    if (isTemporaryConversatrionId(id)) {\n      return (await this._getTemporaryConversations([id]))[0] || null;\n    }\n    return this.getQuery()\n      .equalTo('objectId', id)\n      .find()\n      .then(conversations => conversations[0] || null);\n  }\n\n  /**\n   * 通过 id 批量获取某个特定的对话\n   * @since 3.4.0\n   * @param  {String[]} ids 对话 id 列表，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<ConversationBase[]>} 如果 id 对应的对话不存在则返回 null\n   */\n  async getConversations(ids, noCache = false) {\n    const remoteConversationIds = noCache\n      ? ids\n      : ids.filter(id => this._conversationCache.get(id) === null);\n    if (remoteConversationIds.length) {\n      const remoteTemporaryConversationIds = remove(\n        remoteConversationIds,\n        isTemporaryConversatrionId\n      );\n      const query = [];\n      if (remoteConversationIds.length) {\n        query.push(\n          this.getQuery()\n            .containedIn('objectId', remoteConversationIds)\n            .limit(999)\n            .find()\n        );\n      }\n      if (remoteTemporaryConversationIds.length) {\n        const remoteTemporaryConversationsPromise = remoteTemporaryConversationIds.map(\n          this._getTemporaryConversations.bind(this)\n        );\n        query.push(...remoteTemporaryConversationsPromise);\n      }\n      await Promise.all(query);\n    }\n    return ids.map(id => this._conversationCache.get(id));\n  }\n\n  async _getTemporaryConversations(ids) {\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand({\n        tempConvIds: ids,\n      }),\n    });\n    const resCommand = await this._send(command);\n    return this._handleQueryResults(resCommand);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询对话\n   * @return {ConversationQuery.<PersistentConversation>}\n   */\n  getQuery() {\n    return new ConversationQuery(this);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询聊天室\n   * @return {ConversationQuery.<ChatRoom>}\n   */\n  getChatRoomQuery() {\n    return this.getQuery().equalTo('tr', true);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询服务号\n   * @return {ConversationQuery.<ServiceConversation>}\n   */\n  getServiceConversationQuery() {\n    return this.getQuery().equalTo('sys', true);\n  }\n\n  async _executeQuery(query) {\n    const queryJSON = query.toJSON();\n    queryJSON.where = new JsonObjectMessage({\n      data: JSON.stringify(encode(queryJSON.where)),\n    });\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand(queryJSON),\n    });\n    const resCommand = await this._send(command);\n    return this._handleQueryResults(resCommand);\n  }\n\n  async _handleQueryResults(resCommand) {\n    let conversations;\n    try {\n      conversations = decode(JSON.parse(resCommand.convMessage.results.data));\n    } catch (error) {\n      const commandString = JSON.stringify(trim(resCommand));\n      throw new Error(\n        `Parse query result failed: ${error.message}. Command: ${commandString}`\n      );\n    }\n    conversations = await Promise.all(\n      conversations.map(this._parseConversationFromRawData.bind(this))\n    );\n    return conversations.map(this._upsertConversationToCache.bind(this));\n  }\n\n  _upsertConversationToCache(fetchedConversation) {\n    let conversation = this._conversationCache.get(fetchedConversation.id);\n    if (!conversation) {\n      conversation = fetchedConversation;\n      this._debug('no match, set cache');\n      this._conversationCache.set(fetchedConversation.id, fetchedConversation);\n    } else {\n      this._debug('update cached conversation');\n      [\n        'creator',\n        'createdAt',\n        'updatedAt',\n        'lastMessageAt',\n        'lastMessage',\n        'mutedMembers',\n        'members',\n        '_attributes',\n        'transient',\n        'muted',\n      ].forEach(key => {\n        const value = fetchedConversation[key];\n        if (value !== undefined) conversation[key] = value;\n      });\n      if (conversation._reset) conversation._reset();\n    }\n    return conversation;\n  }\n\n  /**\n   * 反序列化消息，与 {@link Message#toFullJSON} 相对。\n   * @param {Object}\n   * @return {AVMessage} 解析后的消息\n   * @since 4.0.0\n   */\n  async parseMessage({ data, bin = false, ...properties }) {\n    const content = bin ? decodeBase64(data) : data;\n    const message = await this._messageParser.parse(content);\n    Object.assign(message, properties);\n    message._updateMentioned(this.id);\n    return message;\n  }\n\n  /**\n   * 反序列化对话，与 {@link Conversation#toFullJSON} 相对。\n   * @param {Object}\n   * @return {ConversationBase} 解析后的对话\n   * @since 4.0.0\n   */\n  async parseConversation({\n    id,\n    lastMessageAt,\n    lastMessage,\n    lastDeliveredAt,\n    lastReadAt,\n    unreadMessagesCount,\n    members,\n    mentioned,\n    ...properties\n  }) {\n    const conversationData = {\n      id,\n      lastMessageAt,\n      lastMessage,\n      lastDeliveredAt,\n      lastReadAt,\n      unreadMessagesCount,\n      members,\n      mentioned,\n    };\n    if (lastMessage) {\n      conversationData.lastMessage = await this.parseMessage(lastMessage);\n      conversationData.lastMessage._setStatus(MessageStatus.SENT);\n    }\n    const { transient, system, expiredAt } = properties;\n    if (transient) return new ChatRoom(conversationData, properties, this);\n    if (system)\n      return new ServiceConversation(conversationData, properties, this);\n    if (expiredAt || isTemporaryConversatrionId(id)) {\n      return new TemporaryConversation(conversationData, { expiredAt }, this);\n    }\n    return new Conversation(conversationData, properties, this);\n  }\n\n  async _parseConversationFromRawData(rawData) {\n    const data = keyRemap(\n      {\n        objectId: 'id',\n        lm: 'lastMessageAt',\n        m: 'members',\n        tr: 'transient',\n        sys: 'system',\n        c: 'creator',\n        mu: 'mutedMembers',\n      },\n      rawData\n    );\n    if (data.msg) {\n      data.lastMessage = {\n        data: data.msg,\n        bin: data.bin,\n        from: data.msg_from,\n        id: data.msg_mid,\n        timestamp: data.msg_timestamp,\n        updatedAt: data.patch_timestamp,\n      };\n      delete data.lastMessageFrom;\n      delete data.lastMessageId;\n      delete data.lastMessageTimestamp;\n      delete data.lastMessagePatchTimestamp;\n    }\n    const { ttl } = data;\n    if (ttl) data.expiredAt = Date.now() + ttl * 1000;\n    return this.parseConversation(data);\n  }\n\n  /**\n   * 创建一个对话\n   * @param {Object} options 除了下列字段外的其他字段将被视为对话的自定义属性\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.name] 对话的名字\n   * @param {Boolean} [options.unique=true] 唯一对话，当其为 true 时，如果当前已经有相同成员的对话存在则返回该对话，否则会创建新的对话\n   * @return {Promise.<Conversation>}\n   */\n  async createConversation({\n    members: m,\n    name,\n    transient,\n    unique = true,\n    _tempConv: tempConv,\n    _tempConvTTL: tempConvTTL,\n    ...properties\n  } = {}) {\n    if (!(transient || Array.isArray(m))) {\n      throw new TypeError(`conversation members ${m} is not an array`);\n    }\n    let members = new Set(m);\n    members.add(this.id);\n    members = Array.from(members).sort();\n    let attr = properties || {};\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new TypeError(`conversation name ${name} is not a string`);\n      }\n      attr.name = name;\n    }\n    attr = new JsonObjectMessage({\n      data: JSON.stringify(encode(attr)),\n    });\n\n    const startCommandJson = {\n      m: members,\n      attr,\n      transient,\n      unique,\n      tempConv,\n      tempConvTTL,\n    };\n\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'start',\n      convMessage: new ConvCommand(startCommandJson),\n    });\n\n    if (this.options.conversationSignatureFactory) {\n      const params = [null, this._identity, members, 'create'];\n      const signatureResult = await runSignatureFactory(\n        this.options.conversationSignatureFactory,\n        params\n      );\n      Object.assign(\n        command.convMessage,\n        keyRemap(\n          {\n            signature: 's',\n            timestamp: 't',\n            nonce: 'n',\n          },\n          signatureResult\n        )\n      );\n    }\n\n    const {\n      convMessage: { cid, cdate, tempConvTTL: ttl },\n    } = await this._send(command);\n    const data = {\n      name,\n      transient,\n      unique,\n      id: cid,\n      createdAt: cdate,\n      updatedAt: cdate,\n      lastMessageAt: null,\n      creator: this.id,\n      members: transient ? [] : members,\n      ...properties,\n    };\n    if (ttl) data.expiredAt = Date.now() + ttl * 1000;\n    const conversation = await this.parseConversation(data);\n    return this._upsertConversationToCache(conversation);\n  }\n\n  /**\n   * 创建一个聊天室\n   * @since 4.0.0\n   * @param {Object} options 除了下列字段外的其他字段将被视为对话的自定义属性\n   * @param {String} [options.name] 对话的名字\n   * @return {Promise.<ChatRoom>}\n   */\n  async createChatRoom(param) {\n    return this.createConversation({\n      ...param,\n      transient: true,\n      members: null,\n      unique: false,\n      _tempConv: false,\n    });\n  }\n\n  /**\n   * 创建一个临时对话\n   * @since 4.0.0\n   * @param {Object} options\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.ttl] 对话存在时间，单位为秒，最大值与默认值均为 86400（一天），过期后该对话不再可用。\n   * @return {Promise.<TemporaryConversation>}\n   */\n  async createTemporaryConversation({ ttl: _tempConvTTL, ...param }) {\n    return this.createConversation({\n      ...param,\n      _tempConv: true,\n      _tempConvTTL,\n    });\n  }\n\n  // jsdoc-ignore-start\n  @throttle(1000)\n  // jsdoc-ignore-end\n  _doSendRead() {\n    // if not connected, just skip everything\n    if (!this._connection.is('connected')) return;\n    const buffer = internal(this).readConversationsBuffer;\n    const conversations = Array.from(buffer);\n    if (!conversations.length) return;\n    const ids = conversations.map(conversation => {\n      if (!(conversation instanceof ConversationBase)) {\n        throw new TypeError(`${conversation} is not a Conversation`);\n      }\n      return conversation.id;\n    });\n    this._debug(`mark [${ids}] as read`);\n    buffer.clear();\n    this._sendReadCommand(conversations).catch(error => {\n      this._debug('send read failed: %O', error);\n      conversations.forEach(buffer.add.bind(buffer));\n    });\n  }\n\n  _sendReadCommand(conversations) {\n    return this._send(\n      new GenericCommand({\n        cmd: 'read',\n        readMessage: new ReadCommand({\n          convs: conversations.map(\n            conversation =>\n              new ReadTuple({\n                cid: conversation.id,\n                mid:\n                  conversation.lastMessage &&\n                  conversation.lastMessage.from !== this.id\n                    ? conversation.lastMessage.id\n                    : undefined,\n                timestamp: (conversation.lastMessageAt || new Date()).getTime(),\n              })\n          ),\n        }),\n      }),\n      false\n    );\n  }\n}\n\n/**\n * 修改、撤回消息的原因\n * @typedef PatchReason\n * @type {Object}\n * @property {number} code 负数为内置 code，正数为开发者在 hook 中自定义的 code。比如因为敏感词过滤被修改的 code 为 -4408。\n * @property {string} [detail] 具体的原因说明。\n */\n","export {\n  DISCONNECT,\n  RECONNECT,\n  RETRY,\n  SCHEDULE,\n  OFFLINE,\n  ONLINE,\n} from '../websocket-plus';\n\nexport const RECONNECT_ERROR = 'reconnecterror';\n","import { encode as encodeBase64 } from 'base64-arraybuffer';\nimport Message from './message';\nimport { IE10Compatible } from './helpers';\n// jsdoc-ignore-start\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class BinaryMessage extends Message {\n  /**\n   * 二进制消息\n   * @extends Message\n   * @param {ArrayBuffer} buffer\n   * @since 4.0.0\n   */\n  constructor(buffer) {\n    if (!(buffer instanceof ArrayBuffer)) {\n      throw new TypeError(`${buffer} is not an ArrayBuffer`);\n    }\n    super(buffer);\n  }\n\n  /**\n   * @type ArrayBuffer\n   */\n  get buffer() {\n    return this.content;\n  }\n\n  set buffer(buffer) {\n    this.content = buffer;\n  }\n\n  static validate(target) {\n    return target instanceof ArrayBuffer;\n  }\n\n  toJSON() {\n    return {\n      ...super._toJSON(),\n      data: encodeBase64(this.content),\n    };\n  }\n\n  toFullJSON() {\n    return {\n      ...super.toFullJSON(),\n      bin: true,\n      data: encodeBase64(this.content),\n    };\n  }\n}\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-1)\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class TextMessage extends TypedMessage {\n  /**\n   * 文类类型消息\n   * @extends TypedMessage\n   * @param  {String} [text='']\n   * @throws {TypeError} text 不是 String 类型\n   */\n  constructor(text = '') {\n    if (typeof text !== 'string') {\n      throw new TypeError(`${text} is not a string`);\n    }\n    super();\n    this.setText(text);\n  }\n}\n\n/**\n * @name TYPE\n * @memberof TextMessage\n * @type Number\n * @static\n * @const\n */\n","import d from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { applyMiddlewares } from './plugin';\nimport { ensureArray } from './utils';\n\nconst debug = d('LC:MessageParser');\n\nconst tryParseJson = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(param) {\n    let content;\n    if (typeof param !== 'string') {\n      content = param;\n    } else {\n      try {\n        content = JSON.parse(param);\n      } catch (error) {\n        content = param;\n      }\n    }\n    return fn.call(this, content);\n  };\n};\n\nconst applyPlugins = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(json) {\n    return Promise.resolve(json)\n      .then(applyMiddlewares(this._plugins.beforeMessageParse))\n      .then(decoratedJson => fn.call(this, decoratedJson))\n      .then(applyMiddlewares(this._plugins.afterMessageParse));\n  };\n};\n\nexport default class MessageParser {\n  /**\n   * 消息解析器\n   * @param {Object} plugins 插件，插件的 messageClasses 会自动被注册，在解析时 beforeMessageParse 与 afterMessageParse Middleware 会被应用。\n   */\n  constructor(plugins = {}) {\n    this._plugins = plugins;\n    this._messageClasses = [];\n    this.register(plugins.messageClasses);\n  }\n\n  /**\n   * 注册消息类\n   *\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   * 建议继承自 {@link TypedMessage}，也可以传入一个消息类数组。\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  register(messageClasses) {\n    ensureArray(messageClasses).map(klass => this._register(klass));\n  }\n\n  _register(messageClass) {\n    if (\n      messageClass &&\n      messageClass.parse &&\n      messageClass.prototype &&\n      messageClass.prototype.getPayload\n    ) {\n      this._messageClasses.unshift(messageClass);\n    } else {\n      throw new TypeError('Invalid messageClass');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @tryParseJson\n  @applyPlugins\n  // jsdoc-ignore-end\n  /**\n   * 解析消息内容\n   * @param {Object | string | any} target 消息内容，如果是字符串会尝试 parse 为 JSON。\n   * @return {AVMessage} 解析后的消息\n   * @throws {Error} 如果不匹配任何注册的消息则抛出异常\n   */\n  parse(content) {\n    debug('parsing message: %O', content);\n    // eslint-disable-next-line\n    for (const Klass of this._messageClasses) {\n      const contentCopy = isPlainObject(content) ? { ...content } : content;\n      let valid;\n      let result;\n      try {\n        valid = Klass.validate(contentCopy);\n      } catch (error) {\n        // eslint-disable-line no-empty\n      }\n      if (valid) {\n        try {\n          result = Klass.parse(contentCopy);\n        } catch (error) {\n          console.warn('parsing a valid message content error', {\n            error,\n            Klass,\n            content: contentCopy,\n          });\n        }\n        if (result !== undefined) {\n          debug('parse result: %O', result);\n          return result;\n        }\n      }\n    }\n    throw new Error('No Message Class matched');\n  }\n}\n","/** @module leancloud-realtime */\nimport d from 'debug';\nimport uuid from 'uuid/v4';\nimport IMClient from './im-client';\nimport { RECONNECT, RECONNECT_ERROR } from './events/core';\nimport { Conversation } from './conversations';\nimport { MessageQueryDirection } from './conversations/conversation-base';\nimport Message, { MessageStatus } from './messages/message';\nimport BinaryMessage from './messages/binary-message';\nimport TextMessage from './messages/text-message';\nimport TypedMessage from './messages/typed-message';\nimport RecalledMessage from './messages/recalled-message';\nimport MessageParser from './message-parser';\nimport { trim, internal, finalize } from './utils';\n\nconst debug = d('LC:IMPlugin');\n\n/**\n * 消息优先级枚举\n * @enum {Number}\n * @since 3.3.0\n */\nconst MessagePriority = {\n  /** 高 */\n  HIGH: 1,\n  /** 普通 */\n  NORMAL: 2,\n  /** 低 */\n  LOW: 3,\n};\nObject.freeze(MessagePriority);\n\n/**\n * 为 Conversation 定义一个新属性\n * @param {String} prop 属性名\n * @param {Object} [descriptor] 属性的描述符，参见 {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor#Description getOwnPropertyDescriptor#Description - MDN}，默认为该属性名对应的 Conversation 自定义属性的 getter/setter\n * @returns void\n * @example\n *\n * conversation.get('type');\n * conversation.set('type', 1);\n *\n * // equals to\n * defineConversationProperty('type');\n * conversation.type;\n * conversation.type = 1;\n */\nconst defineConversationProperty = (\n  prop,\n  descriptor = {\n    get() {\n      return this.get(prop);\n    },\n    set(value) {\n      this.set(prop, value);\n    },\n  }\n) => {\n  Object.defineProperty(Conversation.prototype, prop, descriptor);\n};\n\nexport {\n  /**\n   * @see Message\n   */\n  Message,\n  /**\n   * @see BinaryMessage\n   */\n  BinaryMessage,\n  /**\n   * @see TypedMessage\n   */\n  TypedMessage,\n  /**\n   * @see TextMessage\n   */\n  TextMessage,\n  /**\n   * @see RecalledMessage\n   */\n  RecalledMessage,\n  MessagePriority,\n  MessageStatus,\n  MessageQueryDirection,\n  defineConversationProperty,\n};\n\nexport {\n  /**\n   * decorator，定义消息类的类型常量\n   * @function\n   * @param {Number} type 自定义类型请使用正整数\n   * @example @messageType(1)\n   * class CustomMessage extends TypedMessage {}\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   //...\n   * }\n   * messageType(1)(CustomMessage);\n   */\n  messageType,\n  /**\n   * decorator，定义消息类的自定义字段\n   * @function\n   * @param {String[]} fields 自定义字段\n   * @example @messageField(['foo'])\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   * }\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   *   //...\n   * }\n   * messageField(['foo'])(CustomMessage);\n   */\n  messageField,\n  IE10Compatible,\n} from './messages/helpers';\n\nexport { ConversationMemberRole } from './conversation-member-info';\nexport {\n  /**\n   * @see Conversation\n   */\n  Conversation,\n  /**\n   * @see ChatRoom\n   */\n  ChatRoom,\n  /**\n   * @see ServiceConversation\n   */\n  ServiceConversation,\n  /**\n   * @see TemporaryConversation\n   */\n  TemporaryConversation,\n} from './conversations';\n\nconst onRealtimeCreate = realtime => {\n  /* eslint-disable no-param-reassign */\n  const deviceId = uuid();\n  realtime._IMClients = {};\n  realtime._IMClientsCreationCount = 0;\n  const messageParser = new MessageParser(realtime._plugins);\n  realtime._messageParser = messageParser;\n\n  const signAVUser = async user =>\n    realtime._request({\n      method: 'POST',\n      path: '/rtm/sign',\n      data: {\n        session_token: user.getSessionToken(),\n      },\n    });\n\n  /**\n   * 注册消息类\n   *\n   * 在接收消息、查询消息时，会按照消息类注册顺序的逆序依次尝试解析消息内容\n   *\n   * @memberof Realtime\n   * @instance\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   * 建议继承自 {@link TypedMessage}\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  const register = messageParser.register.bind(messageParser);\n  /**\n   * 创建一个即时通讯客户端，多次创建相同 id 的客户端会返回同一个实例\n   * @memberof Realtime\n   * @instance\n   * @param  {String|AV.User} [identity] 客户端 identity，如果不指定该参数，服务端会随机生成一个字符串作为 identity，\n   * 如果传入一个已登录的 AV.User，则会使用该用户的 id 作为客户端 identity 登录。\n   * @param  {Object} [options]\n   * @param  {Function} [options.signatureFactory] open session 时的签名方法 // TODO need details\n   * @param  {Function} [options.conversationSignatureFactory] 对话创建、增减成员操作时的签名方法\n   * @param  {Function} [options.blacklistSignatureFactory] 黑名单操作时的签名方法\n   * @param  {String} [options.tag] 客户端类型标记，以支持单点登录功能\n   * @param  {String} [options.isReconnect=false] 单点登录时标记该次登录是不是应用启动时自动重新登录\n   * @return {Promise.<IMClient>}\n   */\n  const createIMClient = async (\n    identity,\n    { tag, isReconnect, ...clientOptions } = {},\n    lagecyTag\n  ) => {\n    let id;\n    const buildinOptions = {};\n    if (identity) {\n      if (typeof identity === 'string') {\n        id = identity;\n      } else if (identity.id && identity.getSessionToken) {\n        ({ id } = identity);\n        const sessionToken = identity.getSessionToken();\n        if (!sessionToken) {\n          throw new Error('User must be authenticated');\n        }\n        buildinOptions.signatureFactory = signAVUser;\n      } else {\n        throw new TypeError('Identity must be a String or an AV.User');\n      }\n      if (realtime._IMClients[id] !== undefined) {\n        return realtime._IMClients[id];\n      }\n    }\n    if (lagecyTag) {\n      console.warn(\n        'DEPRECATION createIMClient tag param: Use options.tag instead.'\n      );\n    }\n    const _tag = tag || lagecyTag;\n    const promise = realtime\n      ._open()\n      .then(connection => {\n        const client = new IMClient(\n          id,\n          { ...buildinOptions, ...clientOptions },\n          {\n            _connection: connection,\n            _request: realtime._request.bind(realtime),\n            _messageParser: messageParser,\n            _plugins: realtime._plugins,\n            _identity: identity,\n          }\n        );\n        connection.on(RECONNECT, () =>\n          client\n            ._open(realtime._options.appId, _tag, deviceId, true)\n            /**\n             * 客户端连接恢复正常，该事件通常在 {@link Realtime#event:RECONNECT} 之后发生\n             * @event IMClient#RECONNECT\n             * @see Realtime#event:RECONNECT\n             * @since 3.2.0\n             */\n            /**\n             * 客户端重新登录发生错误（网络连接已恢复，但重新登录错误）\n             * @event IMClient#RECONNECT_ERROR\n             * @since 3.2.0\n             */\n            .then(\n              () => client.emit(RECONNECT),\n              error => client.emit(RECONNECT_ERROR, error)\n            )\n        );\n        internal(client)._eventemitter.on(\n          'beforeclose',\n          () => {\n            delete realtime._IMClients[client.id];\n            if (realtime._firstIMClient === client) {\n              delete realtime._firstIMClient;\n            }\n          },\n          realtime\n        );\n        internal(client)._eventemitter.on(\n          'close',\n          () => {\n            realtime._deregister(client);\n          },\n          realtime\n        );\n        return client\n          ._open(realtime._options.appId, _tag, deviceId, isReconnect)\n          .then(() => {\n            realtime._IMClients[client.id] = client;\n            realtime._IMClientsCreationCount += 1;\n            if (realtime._IMClientsCreationCount === 1) {\n              client._omitPeerId(true);\n              realtime._firstIMClient = client;\n            } else if (\n              realtime._IMClientsCreationCount > 1 &&\n              realtime._firstIMClient\n            ) {\n              realtime._firstIMClient._omitPeerId(false);\n            }\n            realtime._register(client);\n            return client;\n          })\n          .catch(error => {\n            delete realtime._IMClients[client.id];\n            throw error;\n          });\n      })\n      .then(\n        ...finalize(() => {\n          realtime._deregisterPending(promise);\n        })\n      )\n      .catch(error => {\n        delete realtime._IMClients[id];\n        throw error;\n      });\n    if (identity) {\n      realtime._IMClients[id] = promise;\n    }\n    realtime._registerPending(promise);\n    return promise;\n  };\n  Object.assign(realtime, {\n    register,\n    createIMClient,\n  });\n  /* eslint-enable no-param-reassign */\n};\n\nconst beforeCommandDispatch = (command, realtime) => {\n  const isIMCommand = command.service === null || command.service === 2;\n  if (!isIMCommand) return true;\n  const targetClient = command.peerId\n    ? realtime._IMClients[command.peerId]\n    : realtime._firstIMClient;\n  if (targetClient) {\n    Promise.resolve(targetClient)\n      .then(client => client._dispatchCommand(command))\n      .catch(debug);\n  } else {\n    debug(\n      '[WARN] Unexpected message received without any live client match: %O',\n      trim(command)\n    );\n  }\n  return false;\n};\n\nexport const IMPlugin = {\n  name: 'leancloud-realtime-plugin-im',\n  onRealtimeCreate,\n  beforeCommandDispatch,\n  messageClasses: [Message, BinaryMessage, RecalledMessage, TextMessage],\n};\n","/** @module leancloud-realtime */\n/** core + plugins */\nimport { Realtime } from './core';\nimport { IMPlugin, defineConversationProperty } from './plugin-im';\nimport MessageParser from './message-parser';\nimport * as CoreEvent from './events/core';\nimport * as IMEvent from './events/im';\n\nRealtime.defineConversationProperty = defineConversationProperty;\nRealtime.__preRegisteredPlugins = [IMPlugin];\n\nconst Event = {\n  ...CoreEvent,\n  ...IMEvent,\n};\n\nexport {\n  /**\n   * SDK 可能会派发的事件枚举\n   * @name Event\n   * @enum {String}\n   * @since 4.0.0\n   */\n  Event,\n};\n\nexport {\n  /**\n   * 错误码，详见 [即时通讯云端错误码说明]{@link https://leancloud.cn/docs/realtime-faq.html#hash-291949329}\n   * @name ErrorCode\n   * @enum {Number}\n   * @since 3.3.0\n   */\n  ErrorCode,\n} from './error';\n\nexport * from './core';\n\nexport * from './plugin-im';\n\nexport {\n  /**\n   * @see MessageParser\n   * @since 5.0.0\n   */\n  MessageParser,\n};\n\nexport {\n  /**\n   * @see ConversationQuery\n   */\n  default as ConversationQuery,\n} from './conversation-query';\n","/** core + plugins + platform adapters */\nimport { WebSocket, request } from '@leancloud/platform-adapters-node';\nimport { setAdapters } from './im';\n\nsetAdapters({\n  WebSocket,\n  request,\n});\n\nexport * from './im';\n"],"names":["module","require","newBuilder","package","syntax","options","objc_class_prefix","messages","name","fields","rule","type","id","default","enums","values","isNamespace","build","JsonObjectMessage","UnreadTuple","LogItem","DataCommand","SessionCommand","ErrorCommand","DirectCommand","AckCommand","UnreadCommand","ConvCommand","RoomCommand","LogsCommand","RcpCommand","ReadTuple","MaxReadTuple","ReadCommand","PresenceCommand","ReportCommand","GenericCommand","BlacklistCommand","PatchCommand","PatchItem","ConvMemberInfo","CommandType","OpType","StatusType","push_server","messages2","adapters","getAdapter","adapter","undefined","Error","setAdapters","newAdapters","Object","assign","global","window","EXPIRED","Symbol","debug","d","Expirable","constructor","value","ttl","originalValue","expiredAt","Date","now","expired","Cache","_map","get","key","cache","set","enable","namespaces","disable","tryAll","promiseConstructors","promise","Promise","length","catch","slice","tap","interceptor","finalize","callback","error","decodeDate","date","__type","iso","toNumber","getTime","decode","Array","isArray","map","isPlainObject","keys","reduce","result","encode","toJSON","keyRemap","keymap","obj","newObj","newKey","isIE10","navigator","userAgent","indexOf","getStaticProperty","klass","property","__proto__","union","a","b","from","Set","difference","bSet","filter","x","has","WeakMap","internal","object","compact","forEach","prop","removeNull","trim","message","JSON","parse","stringify","ensureArray","target","setValue","segs","split","lastSeg","pop","currentTarget","seg","isWeapp","wx","connectSocket","throttle","wait","descriptor","throttleMeta","propertyMeta","previouseTimestamp","timeout","remainingTime","apply","setTimeout","isCNApp","appId","equalBuffer","buffer1","buffer2","byteLength","Uint8Array","some","index","OPEN","DISCONNECT","RECONNECT","RETRY","SCHEDULE","OFFLINE","ONLINE","ERROR","MESSAGE","HEARTBEAT_TIME","TIMEOUT_TIME","DEFAULT_RETRY_STRATEGY","attempt","Math","min","requireConnected","requireConnectedWrapper","args","checkConnectionAvailability","call","WebSocketPlus","EventEmitter","urls","_urls","getUrls","protocol","init","_protocol","resolve","then","_open","__postponeTimeoutTimer","_postponeTimeoutTimer","bind","addEventListener","__pause","can","pause","__resume","resume","open","throw","_createWs","ws","first","reset","url","reject","WebSocket","binaryType","onopen","onclose","onerror","_ws","_handleClose","onmessage","_handleMessage","_destroyWs","close","onbeforeevent","event","to","payload","emit","onconnected","_startConnectionKeeper","onleaveconnected","_stopConnectionKeeper","onpause","onbeforeresume","onreconnect","ondisconnected","delay","__scheduledRetry","clearTimeout","is","retry","onretry","reconnect","fail","removeEventListener","currentState","current","console","warn","_ping","ping","_clearTimeoutTimers","_timeoutTimer","disconnect","_heartbeatTimer","setInterval","addListener","removeListener","clearInterval","code","reason","isFinished","handleClose","send","data","handleMessage","StateMachine","create","prototype","initial","state","defer","terminal","events","freeze","ErrorCode","Number","createError","appCode","detail","errorMessage","err","COMMAND_TIMEOUT","EXPIRE","isIdempotentCommand","command","cmd","direct","session","op","conv","start","update","members","Connection","getUrl","format","version","protocolString","_protocolFormat","_commands","_serialId","waitingForRespond","buffer","serialId","toArrayBuffer","duplicatedCommand","find","targetBuffer","targetCommand","i","enabled","toBase64","TypeError","msg","e","goaway","echo","method","_url","query","headers","time","queryString","v","encodeURIComponent","qs","join","request","response","ok","status","checkType","middleware","param","_pluginName","applyDecorators","decorators","decorator","applyMiddlewares","middlewares","previousPromise","applyDispatcher","dispatchers","resultPromise","dispatcher","shouldDispatch","routerCache","initializedApp","Realtime","plugins","VERSION","appKey","server","_options","noBinary","ssl","RTMServerName","process","env","RTM_SERVER_NAME","_cache","_this","clients","pendingClients","mergedPlugins","__preRegisteredPlugins","plugin","_plugins","hook","hasOwnProperty","concat","onRealtimeCreate","_request","path","api","_getServerUrls","_openPromise","connection","_getRTMServers","on","_dispatchCommand","client","isFatal","APP_NOT_AVAILABLE","INVALID_LOGIN","INVALID_ORIGIN","errorCode","RTMServers","shuffle","info","cachedEndPoints","_fetchRTMServers","secondary","RTMRouter","cachedRouter","defaultProtocol","rtm_router_server","RTMRouterServer","api_server","APIServer","serverUrls","toLowerCase","domain","secure","features","_t","_close","cannot","_registerPending","add","_deregisterPending","delete","_register","_deregister","size","beforeCommandDispatch","polyfilledPromise","UNREAD_MESSAGES_COUNT_UPDATE","CLOSE","CONFLICT","CONVERSATION_INFO_UPDATED","UNHANDLED_MESSAGE","INVITED","KICKED","MEMBERS_JOINED","MEMBERS_LEFT","MEMBER_INFO_UPDATED","BLOCKED","UNBLOCKED","MEMBERS_BLOCKED","MEMBERS_UNBLOCKED","MUTED","UNMUTED","MEMBERS_MUTED","MEMBERS_UNMUTED","MESSAGE_RECALL","MESSAGE_UPDATE","LAST_DELIVERED_AT_UPDATE","LAST_READ_AT_UPDATE","INFO_UPDATED","MessageStatus","NONE","SENDING","SENT","DELIVERED","FAILED","rMessageStatus","READ","Message","content","uuid","cid","timestamp","mentionList","mentionedAll","_mentioned","_setStatus","getPayload","_toJSON","deliveredAt","updatedAt","mentioned","toFullJSON","_updatedAt","_status","_timestamp","_deliveredAt","_updateMentioned","getMentionList","setMentionList","mentionAll","Boolean","validate","json","messageType","TYPE","_lctype","_getType","messageField","originalCustomFields","_customFields","IE10Compatible","TypedMessage","text","setText","getText","attributes","setAttributes","getAttributes","summary","_lctext","_lcattrs","_getCustomFields","field","customFields","RecalledMessage","serializeMessage","binaryMsg","ArrayBuffer","NEW","OLD","QueryDirection","MessageQueryDirection","NEW_TO_OLD","OLD_TO_NEW","ConversationBase","lastMessageAt","lastMessage","lastDeliveredAt","lastReadAt","unreadMessagesCount","properties","messagesWaitingForReceipt","_client","Event","_debug","onConversationCreate","unreadMessagesMentioned","_setUnreadMessagesMentioned","_lastMessageAt","_setLastDeliveredAt","_setLastReadAt","params","_send","convMessage","transient","receipt","priority","pushData","will","sendOptions","getSendOptions","directMessage","r","dt","mentionPids","resCommand","ackMessage","uid","t","_update","newMessage","recall","patch","modify","patchMessage","patches","mid","lastPatchTime","_lastPatchTime","count","_addMembers","_removeMembers","queryMessages","beforeTime","beforeMessageId","afterTime","afterMessageId","limit","direction","startTime","startMessageId","startClosed","endTime","endMessageId","endClosed","conditions","tIncluded","tt","tmid","ttIncluded","l","lctype","logsMessage","all","logs","msgId","patchTimestamp","ackAt","readAt","bin","messageData","parseMessage","createMessagesIterator","next","prevMessages","done","read","readConversationsBuffer","_doSendRead","_handleReceipt","messageId","fetchReceiptTimestamps","system","maxReadTimestamp","maxAckTimestamp","_fetchAllReceiptTimestamps","queryAllMembers","maxReadTuples","maxReadTuple","pid","_validateSignature","signatureResult","signature","nonce","signatureFactory","createPartiallySuccess","allowedPids","failedPids","successfulClientIds","failures","pids","clientIds","PersistentConversation","creator","createdAt","muted","mutedMembers","_attributes","_reset","_createdAt","currentAttributes","pendingAttributes","pendingKeys","re","RegExp","childKeys","test","k","parentKey","_buildCurrentAttributes","cloneDeep","_updateServerAttributes","save","attr","isEmpty","udate","fetch","getQuery","equalTo","mute","unmute","_appendConversationSignature","action","conversationSignatureFactory","sort","runSignatureFactory","_appendBlacklistSignature","blacklistSignatureFactory","blacklistMessage","m","remove","quit","muteMembers","add_shutup","unmuteMembers","remove_shutup","queryMutedMembers","query_shutup","newNext","results","blockMembers","block","srcCid","toPids","unblockMembers","unblock","queryBlockedMembers","blockedPids","ConversationMemberRole","OWNER","MANAGER","MEMBER","ConversationMemberInfo","conversation","memberId","role","conversationId","isOwner","Conversation","memberInfoMap","_fetchAllMemberInfo","_requestWithSessionToken","where","memberInfos","clientId","memberInfo","getAllMemberInfo","noCache","getMemberInfo","updateMemberRole","OWNER_PROMOTION_NOT_ALLOWED","member_info_update","targetClientId","ChatRoom","ServiceConversation","subscribe","unsubscribe","transformNotFoundError","CONVERSATION_NOT_FOUND","TEMPORARY_CONVERSATION_EXPIRED","TemporaryConversation","_expiredAt","ConversationQuery","_encode","source","_quote","s","replace","_calculateFlag","prev","and","queries","every","q","combined","_where","$and","or","$or","_extraOptions","_addCondition","condition","flag","_skip","skip","_limit","_order","containsMembers","peerIds","containsAll","withMembers","includeSelf","peerIdsSet","sizeEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","notEqualTo","exists","doesNotExist","containedIn","notContainsIn","contains","subString","startsWith","prefix","endsWith","suffix","matches","regex","_modifiers","ignoreCase","multiline","ascending","addAscending","descending","addDescending","withLastMessagesRefreshed","_executeQuery","SessionManager","refresh","onBeforeGetSessionToken","_onBeforeGetSessionToken","setSessionToken","token","sessionToken","_sessionToken","_pendingSessionTokenPromise","setSessionTokenAsync","currentSessionToken","getSessionToken","autoRefresh","newValue","revoke","isTemporaryConversatrionId","configBitmap","IMClient","props","_messageParser","_conversationCache","_ackMessageBuffer","lastNotificationTime","_eventemitter","onIMClientCreate","serverTs","notificationType","_dispatchConvMessage","_dispatchDirectMessage","_dispatchSessionMessage","unread","_dispatchUnreadMessage","rcp","_dispatchRcpMessage","_dispatchPatchMessage","sessionMessage","closed","SESSION_CONFLICT","unreadMessage","convs","notifTime","lastUnreadNotifTime","getConversations","ts","messageProps","countNotUpdated","conversations","rcpMessage","patchCode","patchReason","patchTime","initBy","getConversation","joined","invitedBy","left","kickedBy","members_joined","members_left","members_blocked","blockedBy","members_unblocked","unblockedBy","blocked","unblocked","members_shutuped","mutedBy","members_unshutuped","unmutedBy","shutuped","unshutuped","member_info_changed","member","updatedBy","updated","originalMessage","fromPeerId","_sendAck","_dispatchParsedMessage","beforeMessageDispatch","push","_doSendAck","_connection","convAckMessages","timestamps","fromts","tots","max","_omitPeerId","peerIdOmittable","peerId","tag","deviceId","isReconnect","ua","_identity","_sessionManager","st","SESSION_TOKEN_EXPIRED","stTtl","tokenTTL","_createSessionManager","serverTime","_syncNotifications","hasMore","notifications","_fetchNotifications","notification","start_ts","notification_type","manager","expiredSessionToken","client_id","_ee","sessionPeerIds","onlineSessionPeerIds","cachedConversation","_getTemporaryConversations","ids","remoteConversationIds","remoteTemporaryConversationIds","remoteTemporaryConversationsPromise","tempConvIds","_handleQueryResults","getChatRoomQuery","getServiceConversationQuery","queryJSON","commandString","_parseConversationFromRawData","_upsertConversationToCache","fetchedConversation","decodeBase64","parseConversation","conversationData","rawData","objectId","lm","tr","sys","c","mu","msg_from","msg_mid","msg_timestamp","patch_timestamp","lastMessageFrom","lastMessageId","lastMessageTimestamp","lastMessagePatchTimestamp","createConversation","unique","_tempConv","tempConv","_tempConvTTL","tempConvTTL","startCommandJson","cdate","createChatRoom","createTemporaryConversation","clear","_sendReadCommand","readMessage","RECONNECT_ERROR","BinaryMessage","encodeBase64","TextMessage","tryParseJson","fn","wrapper","applyPlugins","beforeMessageParse","decoratedJson","afterMessageParse","MessageParser","_messageClasses","register","messageClasses","messageClass","unshift","Klass","contentCopy","valid","MessagePriority","HIGH","NORMAL","LOW","defineConversationProperty","defineProperty","realtime","_IMClients","_IMClientsCreationCount","messageParser","signAVUser","user","session_token","createIMClient","identity","clientOptions","lagecyTag","buildinOptions","_tag","_firstIMClient","isIMCommand","service","targetClient","IMPlugin","CoreEvent","IMEvent"],"mappings":"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"}