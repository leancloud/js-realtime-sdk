{"version":3,"file":"live-query.min.js","sources":["../../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../../../node_modules/@babel/runtime/helpers/iterableToArray.js","../../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../../../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../../../node_modules/@babel/runtime/helpers/toConsumableArray.js","../src/realtime.js","../../../node_modules/@babel/runtime/helpers/inheritsLoose.js","../src/live-query-client.js","../src/index.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/* eslint-disable import/no-unresolved */\nimport {\n  Protocols as _Protocols,\n  Protocals,\n  Promise as _Promise,\n} from 'leancloud-realtime/core';\n\nconst Protocols = _Protocols || Protocals;\nif (!Protocols) {\n  throw new Error('LeanCloud Realtime SDK not installed');\n}\nexport { _Promise, Protocols };\n\nexport { EventEmitter } from 'leancloud-realtime/core';\n","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","import { Protocols, _Promise, EventEmitter } from './realtime';\n\nconst { CommandType, GenericCommand, AckCommand } = Protocols;\n\nconst warn = error => console.warn(error.message);\n\nexport default class LiveQueryClient extends EventEmitter {\n  constructor(appId, subscriptionId, connection) {\n    super();\n    this._appId = appId;\n    this.id = subscriptionId;\n    this._connection = connection;\n    this._eventemitter = new EventEmitter();\n    this._querys = new Set();\n  }\n\n  _send(cmd, ...args) {\n    return this._connection.send(\n      Object.assign(cmd, {\n        appId: this._appId,\n        installationId: this.id,\n        service: 1,\n      }),\n      ...args\n    );\n  }\n\n  _open() {\n    return this._send(\n      new GenericCommand({\n        cmd: CommandType.login,\n      })\n    );\n  }\n\n  close() {\n    const _ee = this._eventemitter;\n    _ee.emit('beforeclose');\n    return this._send(\n      new GenericCommand({\n        cmd: CommandType.logout,\n      })\n    ).then(() => _ee.emit('close'));\n  }\n\n  register(liveQuery) {\n    this._querys.add(liveQuery);\n  }\n\n  deregister(liveQuery) {\n    this._querys.delete(liveQuery);\n    setTimeout(() => {\n      if (!this._querys.size) this.close().catch(warn);\n    }, 0);\n  }\n\n  _dispatchCommand(command) {\n    if (command.cmd !== CommandType.data) {\n      this.emit('unhandledmessage', command);\n      return _Promise.resolve();\n    }\n    return this._dispatchDataCommand(command);\n  }\n\n  _dispatchDataCommand({ dataMessage: { ids, msg } }) {\n    this.emit(\n      'message',\n      msg.map(({ data }) => JSON.parse(data))\n    );\n    // send ack\n    const command = new GenericCommand({\n      cmd: CommandType.ack,\n      ackMessage: new AckCommand({\n        ids,\n      }),\n    });\n    return this._send(command, false).catch(warn);\n  }\n}\n","import { _Promise } from './realtime';\nimport LiveQueryClient from './live-query-client';\n\nconst finalize = callback => [\n  // eslint-disable-next-line no-sequences\n  value => (callback(), value),\n  error => {\n    callback();\n    throw error;\n  },\n];\n\nconst onRealtimeCreate = realtime => {\n  /* eslint-disable no-param-reassign */\n  realtime._liveQueryClients = {};\n  realtime.createLiveQueryClient = subscriptionId => {\n    if (realtime._liveQueryClients[subscriptionId] !== undefined) {\n      return _Promise.resolve(realtime._liveQueryClients[subscriptionId]);\n    }\n    const promise = realtime\n      ._open()\n      .then(connection => {\n        const client = new LiveQueryClient(\n          realtime._options.appId,\n          subscriptionId,\n          connection\n        );\n        connection.on('reconnect', () =>\n          client\n            ._open()\n            .then(\n              () => client.emit('reconnect'),\n              error => client.emit('reconnecterror', error)\n            )\n        );\n        client._eventemitter.on(\n          'beforeclose',\n          () => {\n            delete realtime._liveQueryClients[client.id];\n          },\n          realtime\n        );\n        client._eventemitter.on(\n          'close',\n          () => {\n            realtime._deregister(client);\n          },\n          realtime\n        );\n        return client._open().then(() => {\n          realtime._liveQueryClients[client.id] = client;\n          realtime._register(client);\n          return client;\n        });\n      })\n      .then(\n        ...finalize(() => {\n          if (realtime._deregisterPending) realtime._deregisterPending(promise);\n        })\n      );\n    realtime._liveQueryClients[subscriptionId] = promise;\n    if (realtime._registerPending) realtime._registerPending(promise);\n    return promise;\n  };\n  /* eslint-enable no-param-reassign */\n};\n\nconst beforeCommandDispatch = (command, realtime) => {\n  const isLiveQueryCommand = command.installationId && command.service === 1;\n  if (!isLiveQueryCommand) return true;\n  const targetClient = realtime._liveQueryClients[command.installationId];\n  if (targetClient) {\n    targetClient._dispatchCommand(command).catch(error => console.warn(error));\n  } else {\n    console.warn(\n      'Unexpected message received without any live client match: %O',\n      command\n    );\n  }\n  return false;\n};\n\n// eslint-disable-next-line import/prefer-default-export\nexport const LiveQueryPlugin = {\n  name: 'leancloud-realtime-plugin-live-query',\n  onRealtimeCreate,\n  beforeCommandDispatch,\n};\n"],"names":["arr","len","length","i","arr2","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","Protocols","_Protocols","Protocals","Error","subClass","superClass","create","__proto__","CommandType","GenericCommand","AckCommand","warn","error","console","message","LiveQueryClient","appId","subscriptionId","connection","_appId","id","_connection","_eventemitter","EventEmitter","_querys","Set","_send","cmd","args","send","assign","this","installationId","service","_open","login","close","_ee","emit","logout","then","register","liveQuery","add","deregister","setTimeout","_this2","size","_dispatchCommand","command","data","_Promise","resolve","_dispatchDataCommand","dataMessage","ids","msg","map","JSON","parse","ack","ackMessage","LiveQueryPlugin","onRealtimeCreate","realtime","_liveQueryClients","createLiveQueryClient","undefined","callback","promise","client","_options","on","_deregister","_register","_deregisterPending","value","_registerPending","beforeCommandDispatch","targetClient"],"mappings":"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"}